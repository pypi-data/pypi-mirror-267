name: Ubuntu

on: 
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  c_cxx:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler:
          - { cpp: g++-11, c: gcc-11}
          - { cpp: g++-12, c: gcc-12}
          - { cpp: g++-13, c: gcc-13}
          - { cpp: clang++, c: clang}
        build_type: [Release]
    env:
      CC: ${{ matrix.compiler.c }}
      CXX: ${{ matrix.compiler.cpp }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v5
      - run: pip install -r python/requirements.txt

      - name: Run Cmake 
        run: cmake -S . -B build -D CMAKE_BUILD_TYPE=${{ matrix.build_type }}  -D MUSICA_ENABLE_PYTHON_LIBRARY=ON

      - name: Build
        run: cmake --build build --verbose --parallel

      - name: Run tests
        run: |
          cd build
          ctest -C ${{ matrix.build_type }} --rerun-failed --output-on-failure . --verbose -j 10
  fortran:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gcc_version: [11, 12, 13]
        build_type: [Release]
    env:
      FC: gfortran-${{ matrix.gcc_version }}

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnetcdf-dev netcdf-bin libnetcdff-dev

      - name: Run Cmake 
        run: cmake -S . -B build -D CMAKE_BUILD_TYPE=${{ matrix.build_type }} -D MUSICA_BUILD_FORTRAN_INTERFACE=ON

      - name: Build
        run: cmake --build build --parallel

      - name: Run tests
        run: |
          cd build
          ctest -C ${{ matrix.build_type }} --rerun-failed --output-on-failure . --verbose -j 10