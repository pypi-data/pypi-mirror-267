Metadata-Version: 2.1
Name: slimta
Version: 0.9.1
Summary: Configurable MTA based on the python-slimta library.
Home-page: http://slimta.org/
Author: Ian Good
Author-email: ian@icgood.net
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Topic :: Communications :: Email :: Mail Transport Agents
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Requires-Python: ~=3.11
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: python-slimta[spf]~=5.0
Requires-Dist: pysasl<1.1
Requires-Dist: passlib
Requires-Dist: PyYAML
Provides-Extra: optional
Requires-Dist: python-slimta[aws,disk,redis]~=5.0; extra == "optional"

#### [Project Homepage][1]
#### [Usage Manual][2]

--------------------

About
=====

`slimta` is a configurable MTA based on the `python-slimta` libraries. While
the purpose of the `python-slimta` library is to avoid configuration files and
allow full control via Python code, the `slimta` project recognizes that not
everyone will want or need that level of control. Setup, configuration, and
execution of `slimta` is designed to be familiar to non-programmers.

The `slimta` project is released under the [MIT License][3].

Getting Started
===============

Install `slimta` from [PyPi][4]:

```console
$ pip install slimta
```

Pip should pull in all the required dependencies. Next, we create the basic
configuration files:

```console
$ slimta-setup config
```

This creates 3 files, in `~/.slimta/` or wherever you specified. The sample
configs are designed to work out of the box, so lets give it a shot:

```console
$ slimta --no-daemon
```

In another terminal, let's connect to port 1025 to see if it's working. After
the banner (the line beginning with `220 `), type in `QUIT` to end the session:

```console
$ telnet localhost 1025
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 localhost.localdomain ESMTP example.com Mail Delivery Agent
QUIT
221 2.0.0 Bye
Connection closed by foreign host.
```

Port 1025 is fully capable of accepting mail in the SMTP session, but is
configured by default with the `blackhole` relay to silently discard messages.
You can also try it out with the built-in Python SMTP libraries:

```pycon
>>> import smtplib
>>> smtplib.SMTP('localhost', 1025).sendmail('test@example.com',
                                             ['postmaster@example.com'],
                                             'test message')
```

At this point, we're still a little ways off from where you'd probably like to
be: actually sending and receiving email to the Internet. Please check out the
[Usage Manual][2] for information on configuring `slimta` to your liking,
including more advanced and custom setups.

[1]: http://slimta.org/
[2]: http://slimta.org/latest/manual/slimta.html
[3]: http://opensource.org/licenses/MIT
[4]: https://pypi.python.org/pypi/slimta/
## The MIT License (MIT)

Copyright (c) 2021 Ian Good

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

