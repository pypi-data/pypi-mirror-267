# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/08_util.ipynb.

# %% auto 0
__all__ = ['extent', 'integration_steps']

# %% ../nbs/08_util.ipynb 6
#| export


# %% ../nbs/08_util.ipynb 8
#| export


# %% ../nbs/08_util.ipynb 11
#| export

# %% ../nbs/08_util.ipynb 13
try: import numpy as np
except ImportError: ...

try: import pandas as pd
except ImportError: ...

# %% ../nbs/08_util.ipynb 15
#| export


# %% ../nbs/08_util.ipynb 17
#| export


# %% ../nbs/08_util.ipynb 19
from nchr import U1, SPACE
from quac import strq
from seeder import seedall

# %% ../nbs/08_util.ipynb 21
#| export


# %% ../nbs/08_util.ipynb 23
def extent(arr: list | np.ndarray | pd.Series) -> tuple[int, int]:
    '''Find the minimum and maximum of an array, list, or Series.

    Parameters
    ----------
    arr : list | np.ndarray | pd.Series
        The array, list, or Series to find the extent of.

    Returns
    -------
    tuple[int, int]
        A tuple containing the minimum and maximum values.
    '''
    try: return min(arr), max(arr)
    except: return 0, len(arr)

# %% ../nbs/08_util.ipynb 24
def integration_steps(i: int, j: int, imin: int = 2, imax: int = 100):
    return max(min((j) - i, imax), imin)

# %% ../nbs/08_util.ipynb 28
#| export
