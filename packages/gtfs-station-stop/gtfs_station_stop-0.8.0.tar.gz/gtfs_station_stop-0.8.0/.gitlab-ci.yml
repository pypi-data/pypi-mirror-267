stages:
  - lint
  - test
  - build
  - register
  - release

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "/.cache/pre-commit"
  TEST_RESULTS_FILE: "test_results.xml"
  TEST_COVERAGE_FILE: "coverage.xml"
  PYTHON_IMAGE: python:3

default:
  image: $PYTHON_IMAGE
  cache:
    paths:
      - .cache/pip
  before_script:
    - python --version ; pip --version
    - pip install --upgrade pip
    - pip install -r requirements-dev.txt

.doRelease:
  rules:
    - if: $CI_COMMIT_TAG

include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml

secret_detection:
  inherit:
    default: false
  stage: lint

check_formatting:
  stage: lint
  cache:
    paths:
      - $PRE_COMMIT_HOME
  script:
    - pre-commit run --all-files

pytest:
  stage: test
  script:
    - python -m pytest --junitxml=$TEST_RESULTS_FILE
    - coverage report
    - coverage xml -o $TEST_COVERAGE_FILE
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    paths:
      - $TEST_RESULTS_FILE
      - $TEST_COVERAGE_FILE
    reports:
      junit: $TEST_RESULTS_FILE
      coverage_report:
        coverage_format: cobertura
        path: $TEST_COVERAGE_FILE

module_test:
  stage: test
  image: $PYTHON_IMAGE
  inherit:
    default: false
  script:
    - pip install .
    - echo "Running module version command to test module loading..."
    - python -m gtfs_station_stop --version # output version
    - python -m gtfs_station_stop # smoke test no input

build:
  stage: build
  script:
    - python -m build
  artifacts:
    paths:
      - dist/

register_package_gitlab_pypi:
  extends: .doRelease
  stage: register
  variables:
    TWINE_USERNAME: gitlab-ci-token
    TWINE_PASSWORD: ${CI_JOB_TOKEN}
  before_script:
    - pip install --upgrade twine
  script:
    - |
      python -m twine upload \
      --verbose \
      --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

release_job:
  extends: .doRelease
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  inherit:
    default: false
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Making Release $CI_COMMIT_TAG"
  release:
    tag_name: "$CI_COMMIT_TAG"
    description: "$CI_COMMIT_TAG"
