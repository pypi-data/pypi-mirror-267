Metadata-Version: 2.1
Name: aioxdl
Version: 0.0.8
Summary: python helper modules
Home-page: https://github.com/Clinton-Abraham
Author: Clinton-Abraham
Author-email: clintonabrahamc@gmail.com
License: MIT
Keywords: python,downloader,aiohttp
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: ~=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp

<p align="center">
    📦 <a href="https://pypi.org/project/aioxdl" style="text-decoration:none;">AIO DOWNLOADER</a>
</p>

<p align="center">
   <a href="https://telegram.me/clinton_abraham"><img src="https://img.shields.io/badge/𝑪𝒍𝒊𝒏𝒕𝒐𝒏 𝑨𝒃𝒓𝒂𝒉𝒂𝒎-30302f?style=flat&logo=telegram" alt="telegram badge"/></a>
   <a href="https://telegram.me/Space_x_bots"><img src="https://img.shields.io/badge/Sᴘᴀᴄᴇ ✗ ʙᴏᴛꜱ-30302f?style=flat&logo=telegram" alt="telegram badge"/></a>
   <a href="https://telegram.me/sources_codes"><img src="https://img.shields.io/badge/Sᴏᴜʀᴄᴇ ᴄᴏᴅᴇꜱ-30302f?style=flat&logo=telegram" alt="telegram badge"/></a>
</p>

## INSTALLATION
```bash
pip install aioxdl
```

## USAGE

```python
import time, asyncio
from aioxdl import Downloader

async def progress(_, stime, tsize, dsize):
    percentage = round((dsize / tsize) * 100, 2)
    print("COMPLETED : {}%".format(percentage))

async def main():
    core = Downloader()
    loca = "./Downloads/testfile.mkv"
    link = "https://www.tg-x.workers.dev/dl/18357?hash=AgADIh"
    file = await core.start(link, loca, progress=progress)
    fine = file if core.error == None else core.error
    print(fine)

asyncio.run(main())

#===[ PROGRESS FUNCTION ]===

# stime = start time
# tsize = total size
# dsize = download size

```
