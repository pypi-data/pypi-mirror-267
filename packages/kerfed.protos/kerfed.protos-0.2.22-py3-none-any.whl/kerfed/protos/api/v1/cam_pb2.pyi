"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
cam.proto
Contains RPC definitions for analysis
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import kerfed.protos.common.v1.fab_pb2
import kerfed.protos.common.v1.fileblob_pb2
import kerfed.protos.common.v1.stock_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class PackRequest(google.protobuf.message.Message):
    """Request flat fabrications to be packed or "nested" onto
    sheets and produce a machine-ready list of DXF or SVG files.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARTS_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    AVAILABLE_FIELD_NUMBER: builtins.int
    UNDERSIZE_DRILL_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    @property
    def parts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.fab_pb2.FlatFabrication]:
        """The flat parts being packed, with `flattened` populated"""
    @property
    def quantity(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """A length-matching"""
    @property
    def available(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.stock_pb2.Stock]:
        """Sheet stock with thickness and extents specified.
        If not passed all parts will be put onto the same sheet.
        """
    undersize_drill: builtins.bool
    """Should holes be undersized."""
    format: builtins.str
    """Output file format. Acceptable values are 'svg' and 'dxf'
    and the default output format is 'dxf'.
    """
    def __init__(
        self,
        *,
        parts: collections.abc.Iterable[kerfed.protos.common.v1.fab_pb2.FlatFabrication] | None = ...,
        quantity: collections.abc.Iterable[builtins.int] | None = ...,
        available: collections.abc.Iterable[kerfed.protos.common.v1.stock_pb2.Stock] | None = ...,
        undersize_drill: builtins.bool = ...,
        format: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["available", b"available", "format", b"format", "parts", b"parts", "quantity", b"quantity", "undersize_drill", b"undersize_drill"]) -> None: ...

global___PackRequest = PackRequest

@typing_extensions.final
class PackResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PACKED_FIELD_NUMBER: builtins.int
    SHEETS_FIELD_NUMBER: builtins.int
    @property
    def packed(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.fileblob_pb2.FileBlob]:
        """Packed result as a DXF or SVG."""
    @property
    def sheets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.stock_pb2.Stock]:
        """The sheet size for each packed value."""
    def __init__(
        self,
        *,
        packed: collections.abc.Iterable[kerfed.protos.common.v1.fileblob_pb2.FileBlob] | None = ...,
        sheets: collections.abc.Iterable[kerfed.protos.common.v1.stock_pb2.Stock] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["packed", b"packed", "sheets", b"sheets"]) -> None: ...

global___PackResponse = PackResponse
