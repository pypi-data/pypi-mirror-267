# ========== BUILD ==========
[build-system]
requires = ["hatchling>=1.22.2", "hatch-vcs>=0.3.0"]
build-backend = "hatchling.build"

# ========== PROJECT ==========
[project]
name = "absfuyu"
description = "A small collection of code"
readme = { "file" = "README.md", "content-type" = "text/markdown" }
requires-python = ">=3.8, <4"
license = { text = "MIT License" }
keywords = ["utilities"]
authors = [{ name = "somewhatcold (AbsoluteWinter)" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]

dependencies = [
    "bs4",
    "click>=8.0.0",
    "colorama",
    "Deprecated",
    "importlib_resources; python_version < '3.10'",
    "python-dateutil",
    "requests",
    "tomli>=1.1.0; python_version < '3.11'",
    "typing_extensions>=4.0.1; python_version < '3.11'",
    "unidecode",
]

dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/AbsoluteWinter/absfuyu-public"
Documentation = "https://absolutewinter.github.io/absfuyu"
Repository = "https://github.com/AbsoluteWinter/absfuyu-public"
Issues = "https://github.com/AbsoluteWinter/absfuyu-public/issues"

[project.optional-dependencies]
res = ["absfuyu-res"]
full = ["rich", "absfuyu-res", "numpy", "pandas"]
beautiful = ["rich"]
dev = [
    "black",
    "flake8",
    "Flake8-pyproject",
    "hatch",
    "isort",
    "mypy",
    "pytest>=7.0.0",
    "pytest-cov",
    "rich",
    "sphinx>=7.0.0",
    "sphinx_rtd_theme",
]
extra = ["numpy", "pandas"]
all = [
    "absfuyu-res",
    "black",
    "flake8",
    "Flake8-pyproject",
    "hatch",
    "isort",
    "mypy",
    "numpy",
    "pandas",
    "pytest>=7.0.0",
    "pytest-cov",
    "rich",
    "sphinx>=7.0.0",
    "sphinx_rtd_theme",
]

[project.scripts]
fuyu = "absfuyu.__main__:main"

# ========== TOOL ==========
[tool.hatch.version] # Dynamic version
path = "src/absfuyu/__init__.py"

[tool.hatch.build.targets.sdist]
only-include = ["src", "tests"]

# Set up virtual env: use hatch env show
[tool.hatch.envs.default]
dependencies = ["coverage[toml]", "pytest-cov", "pytest"]
features = ["full"]
description = "Default environment"

[tool.hatch.envs.default.scripts] # hatch env run <script>
test = "pytest {args:tests}"                           # use this
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]                       # use this
cov2 = "pytest  --cov=absfuyu --cov=tests"             # use this

[tool.hatch.envs.all]
description = """
All python version to test:
hatch env run -e all test
"""

[[tool.hatch.envs.all.matrix]] # hatch env run -e all test
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = ["mypy>=1.0.0"]
detached = true
description = "type-hint check"

[tool.hatch.envs.types.scripts] # hatch env run -e types check
check = "mypy --install-types --non-interactive {args:src/absfuyu}"
# check = "mypy --install-types --non-interactive {args:src/absfuyu tests}"

[tool.hatch.envs.docs]
dependencies = ["sphinx>=7.0.0", "sphinx_rtd_theme"]
description = "Build documentation"

[tool.hatch.envs.docs.scripts]
build = "docs\\make.bat html" # hatch env run -e docs build

[tool.hatch.envs.style]
detached = true
dependencies = ["flake8", "Flake8-pyproject", "black", "isort"]
description = "Source code styling"

[tool.hatch.envs.style.scripts]
check = [
    "flake8 src",                      # Source code folder
    "flake8 tests",                    # Test folder
    "flake8p src",                     # flake8-pyproject entry point
    "black --check --diff src",        # Source code folder
    "black --check --diff tests",      # Test folder
    "isort --check-only --diff src",   # Source code folder
    "isort --check-only --diff tests", # Test folder
]
fmt = [ # Format the code
    "isort src",   # Sort import - Source code folder
    "isort tests", # Sort import - Test folder
    "black src",   # Code styling - Source code folder
    "black test",  # Code styling - Test folder
    "check",       #
]

[tool.pytest.ini_options]
addopts = [
    "--strict-markers",
    "--maxfail=1",
    # "--cov=absfuyu"
]
markers = [
    "test_this: Select desire test to test",
    "data_extension: Test all data extension classes",
]

[tool.mypy]
# python_version = "3.8"
mypy_path = "src"
check_untyped_defs = true
# disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
show_column_numbers = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true
# install_types = true  # type: ignore

[tool.black]
line-length = 88

[tool.isort]
atomic = true
profile = "black"
line_length = 88

[tool.flake8]
ignore = [
    "E266", # too many leading "#" for block comment
    "E402", # module level import not at top of file
    "W291", # trailing whitespace
    "F401", # imported but unused
]
exclude = ["dev*/", "docs/", "env/", "testing/"]
max-line-length = 88
count = true
# per-file-ignores = [
#     "__init__.py:F401", #
# ]
