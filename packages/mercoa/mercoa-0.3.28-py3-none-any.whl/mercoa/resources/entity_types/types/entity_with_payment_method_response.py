# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...payment_method_types.types.payment_method_response import PaymentMethodResponse
from .entity_response import EntityResponse

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class EntityWithPaymentMethodResponse(EntityResponse):
    """
    import datetime

    from mercoa import (
        AccountType,
        Address,
        BankStatus,
        BankType,
        BusinessProfileResponse,
        BusinessType,
        CurrencyCode,
        EntityStatus,
        EntityWithPaymentMethodResponse,
        PaymentMethodResponse_BankAccount,
        PhoneNumber,
        ProfileResponse,
    )

    EntityWithPaymentMethodResponse(
        id="ent_123",
        name="Acme Inc.",
        email="customer@acme.com",
        accepted_tos=True,
        status=EntityStatus.VERIFIED,
        is_customer=True,
        is_payor=True,
        is_payee=False,
        account_type=AccountType.BUSINESS,
        updated_at=datetime.datetime.fromisoformat(
            "2024-01-02 00:00:00+00:00",
        ),
        created_at=datetime.datetime.fromisoformat(
            "2024-01-01 00:00:00+00:00",
        ),
        profile=ProfileResponse(
            business=BusinessProfileResponse(
                email="customer@acme.com",
                legal_business_name="Acme Inc.",
                business_type=BusinessType.LLC,
                phone=PhoneNumber(
                    country_code="1",
                    number="4155551234",
                ),
                address=Address(
                    address_line_1="123 Main St",
                    city="San Francisco",
                    state_or_province="CA",
                    postal_code="94105",
                    country="US",
                ),
                tax_id_provided=True,
                owners_provided=True,
            ),
        ),
        payment_methods=[
            PaymentMethodResponse_BankAccount(
                type="bankAccount",
                id="pm_12345",
                account_name="My Checking Account",
                bank_name="Chase",
                routing_number="12345678",
                account_number="99988767623",
                account_type=BankType.CHECKING,
                status=BankStatus.VERIFIED,
                is_default_source=True,
                is_default_destination=True,
                supported_currencies=[CurrencyCode.USD],
                created_at=datetime.datetime.fromisoformat(
                    "2021-01-01 00:00:00+00:00",
                ),
                updated_at=datetime.datetime.fromisoformat(
                    "2021-01-01 00:00:00+00:00",
                ),
            )
        ],
    )
    """

    payment_methods: typing.Optional[typing.List[PaymentMethodResponse]] = pydantic.Field(
        alias="paymentMethods", default=None
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
