# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .onboarding_option import OnboardingOption

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class BusinessOnboardingOptions(pydantic.BaseModel):
    terms_of_service: OnboardingOption = pydantic.Field(alias="termsOfService")
    email: OnboardingOption
    name: OnboardingOption
    type: OnboardingOption
    doing_business_as: OnboardingOption = pydantic.Field(alias="doingBusinessAs")
    ein: OnboardingOption
    address: OnboardingOption
    phone: OnboardingOption
    formation_date: OnboardingOption = pydantic.Field(alias="formationDate")
    website: OnboardingOption
    description: OnboardingOption
    representatives: OnboardingOption

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
