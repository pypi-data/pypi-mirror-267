# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClusterStatus.proto
# Protobuf Python Version: 4.25.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import HBase_pb2 as HBase__pb2
import ClusterId_pb2 as ClusterId__pb2
import FS_pb2 as FS__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x43lusterStatus.proto\x12\x08hbase.pb\x1a\x0bHBase.proto\x1a\x0f\x43lusterId.proto\x1a\x08\x46S.proto\"\xf0\x02\n\x0bRegionState\x12)\n\x0bregion_info\x18\x01 \x02(\x0b\x32\x14.hbase.pb.RegionInfo\x12*\n\x05state\x18\x02 \x02(\x0e\x32\x1b.hbase.pb.RegionState.State\x12\r\n\x05stamp\x18\x03 \x01(\x04\"\xfa\x01\n\x05State\x12\x0b\n\x07OFFLINE\x10\x00\x12\x10\n\x0cPENDING_OPEN\x10\x01\x12\x0b\n\x07OPENING\x10\x02\x12\x08\n\x04OPEN\x10\x03\x12\x11\n\rPENDING_CLOSE\x10\x04\x12\x0b\n\x07\x43LOSING\x10\x05\x12\n\n\x06\x43LOSED\x10\x06\x12\r\n\tSPLITTING\x10\x07\x12\t\n\x05SPLIT\x10\x08\x12\x0f\n\x0b\x46\x41ILED_OPEN\x10\t\x12\x10\n\x0c\x46\x41ILED_CLOSE\x10\n\x12\x0b\n\x07MERGING\x10\x0b\x12\n\n\x06MERGED\x10\x0c\x12\x11\n\rSPLITTING_NEW\x10\r\x12\x0f\n\x0bMERGING_NEW\x10\x0e\x12\x15\n\x11\x41\x42NORMALLY_CLOSED\x10\x0f\"j\n\x12RegionInTransition\x12\'\n\x04spec\x18\x01 \x02(\x0b\x32\x19.hbase.pb.RegionSpecifier\x12+\n\x0cregion_state\x18\x02 \x02(\x0b\x32\x15.hbase.pb.RegionState\";\n\x0fStoreSequenceId\x12\x13\n\x0b\x66\x61mily_name\x18\x01 \x02(\x0c\x12\x13\n\x0bsequence_id\x18\x02 \x02(\x04\"p\n\x16RegionStoreSequenceIds\x12 \n\x18last_flushed_sequence_id\x18\x01 \x02(\x04\x12\x34\n\x11store_sequence_id\x18\x02 \x03(\x0b\x32\x19.hbase.pb.StoreSequenceId\"\xcd\x07\n\nRegionLoad\x12\x33\n\x10region_specifier\x18\x01 \x02(\x0b\x32\x19.hbase.pb.RegionSpecifier\x12\x0e\n\x06stores\x18\x02 \x01(\r\x12\x12\n\nstorefiles\x18\x03 \x01(\r\x12\"\n\x1astore_uncompressed_size_MB\x18\x04 \x01(\r\x12\x19\n\x11storefile_size_MB\x18\x05 \x01(\r\x12\x19\n\x11mem_store_size_MB\x18\x06 \x01(\r\x12\x1f\n\x17storefile_index_size_KB\x18\x07 \x01(\x04\x12\x1b\n\x13read_requests_count\x18\x08 \x01(\x04\x12\x1c\n\x14write_requests_count\x18\t \x01(\x04\x12\x1c\n\x14total_compacting_KVs\x18\n \x01(\x04\x12\x1d\n\x15\x63urrent_compacted_KVs\x18\x0b \x01(\x04\x12\x1a\n\x12root_index_size_KB\x18\x0c \x01(\r\x12\"\n\x1atotal_static_index_size_KB\x18\r \x01(\r\x12\"\n\x1atotal_static_bloom_size_KB\x18\x0e \x01(\r\x12\x1c\n\x14\x63omplete_sequence_id\x18\x0f \x01(\x04\x12\x15\n\rdata_locality\x18\x10 \x01(\x02\x12#\n\x18last_major_compaction_ts\x18\x11 \x01(\x04:\x01\x30\x12=\n\x1astore_complete_sequence_id\x18\x12 \x03(\x0b\x32\x19.hbase.pb.StoreSequenceId\x12$\n\x1c\x66iltered_read_requests_count\x18\x13 \x01(\x04\x12\x1a\n\x0fstore_ref_count\x18\x15 \x01(\x05:\x01\x30\x12-\n\"max_compacted_store_file_ref_count\x18\x16 \x01(\x05:\x01\x30\x12\x1d\n\x15\x64\x61ta_locality_for_ssd\x18\x17 \x01(\x02\x12\x1b\n\x13\x62locks_local_weight\x18\x18 \x01(\x04\x12$\n\x1c\x62locks_local_with_ssd_weight\x18\x19 \x01(\x04\x12\x1b\n\x13\x62locks_total_weight\x18\x1a \x01(\x04\x12>\n\x10\x63ompaction_state\x18\x1b \x01(\x0e\x32$.hbase.pb.RegionLoad.CompactionState\"F\n\x0f\x43ompactionState\x12\x08\n\x04NONE\x10\x00\x12\t\n\x05MINOR\x10\x01\x12\t\n\x05MAJOR\x10\x02\x12\x13\n\x0fMAJOR_AND_MINOR\x10\x03\"L\n\x08UserLoad\x12\x10\n\x08userName\x18\x01 \x02(\t\x12.\n\rclientMetrics\x18\x02 \x03(\x0b\x32\x17.hbase.pb.ClientMetrics\"}\n\rClientMetrics\x12\x10\n\x08hostName\x18\x01 \x02(\t\x12\x1b\n\x13read_requests_count\x18\x02 \x01(\x04\x12\x1c\n\x14write_requests_count\x18\x03 \x01(\x04\x12\x1f\n\x17\x66iltered_requests_count\x18\x04 \x01(\x04\"\x89\x01\n\x13ReplicationLoadSink\x12\x1a\n\x12\x61geOfLastAppliedOp\x18\x01 \x02(\x04\x12!\n\x19timeStampsOfLastAppliedOp\x18\x02 \x02(\x04\x12\x18\n\x10timestampStarted\x18\x03 \x01(\x04\x12\x19\n\x11totalOpsProcessed\x18\x04 \x01(\x04\"\xb0\x02\n\x15ReplicationLoadSource\x12\x0e\n\x06peerID\x18\x01 \x02(\t\x12\x1a\n\x12\x61geOfLastShippedOp\x18\x02 \x02(\x04\x12\x16\n\x0esizeOfLogQueue\x18\x03 \x02(\r\x12 \n\x18timeStampOfLastShippedOp\x18\x04 \x02(\x04\x12\x16\n\x0ereplicationLag\x18\x05 \x02(\x04\x12\"\n\x1atimeStampOfNextToReplicate\x18\x06 \x01(\x04\x12\x0f\n\x07queueId\x18\x07 \x01(\t\x12\x11\n\trecovered\x18\x08 \x01(\x08\x12\x0f\n\x07running\x18\t \x01(\x08\x12\x19\n\x11\x65\x64itsSinceRestart\x18\n \x01(\x08\x12\x11\n\teditsRead\x18\x0b \x01(\x04\x12\x12\n\noPsShipped\x18\x0c \x01(\x04\"\xc5\x01\n\nServerTask\x12\x13\n\x0b\x64\x65scription\x18\x01 \x02(\t\x12\x0e\n\x06status\x18\x02 \x02(\t\x12)\n\x05state\x18\x03 \x02(\x0e\x32\x1a.hbase.pb.ServerTask.State\x12\x11\n\tstartTime\x18\x04 \x01(\x04\x12\x16\n\x0e\x63ompletionTime\x18\x05 \x01(\x04\"<\n\x05State\x12\x0b\n\x07RUNNING\x10\x00\x12\x0b\n\x07WAITING\x10\x01\x12\x0c\n\x08\x43OMPLETE\x10\x02\x12\x0b\n\x07\x41\x42ORTED\x10\x03\"\xd6\x03\n\nServerLoad\x12\x1a\n\x12number_of_requests\x18\x01 \x01(\x04\x12 \n\x18total_number_of_requests\x18\x02 \x01(\x04\x12\x14\n\x0cused_heap_MB\x18\x03 \x01(\r\x12\x13\n\x0bmax_heap_MB\x18\x04 \x01(\r\x12*\n\x0cregion_loads\x18\x05 \x03(\x0b\x32\x14.hbase.pb.RegionLoad\x12+\n\x0c\x63oprocessors\x18\x06 \x03(\x0b\x32\x15.hbase.pb.Coprocessor\x12\x19\n\x11report_start_time\x18\x07 \x01(\x04\x12\x17\n\x0freport_end_time\x18\x08 \x01(\x04\x12\x18\n\x10info_server_port\x18\t \x01(\r\x12\x37\n\x0ereplLoadSource\x18\n \x03(\x0b\x32\x1f.hbase.pb.ReplicationLoadSource\x12\x33\n\x0creplLoadSink\x18\x0b \x01(\x0b\x32\x1d.hbase.pb.ReplicationLoadSink\x12%\n\tuserLoads\x18\x0c \x03(\x0b\x32\x12.hbase.pb.UserLoad\x12#\n\x05tasks\x18\x0f \x03(\x0b\x32\x14.hbase.pb.ServerTask\"a\n\x0eLiveServerInfo\x12$\n\x06server\x18\x01 \x02(\x0b\x32\x14.hbase.pb.ServerName\x12)\n\x0bserver_load\x18\x02 \x02(\x0b\x32\x14.hbase.pb.ServerLoad\"\x8e\x01\n\x11RegionStatesCount\x12\x14\n\x0copen_regions\x18\x01 \x02(\r\x12\x15\n\rsplit_regions\x18\x02 \x02(\r\x12\x16\n\x0e\x63losed_regions\x18\x03 \x02(\r\x12\x1d\n\x15regions_in_transition\x18\x04 \x02(\r\x12\x15\n\rtotal_regions\x18\x05 \x02(\r\"{\n\x16TableRegionStatesCount\x12\'\n\ntable_name\x18\x01 \x02(\x0b\x32\x13.hbase.pb.TableName\x12\x38\n\x13region_states_count\x18\x02 \x02(\x0b\x32\x1b.hbase.pb.RegionStatesCount\"\x92\x05\n\rClusterStatus\x12\x38\n\rhbase_version\x18\x01 \x01(\x0b\x32!.hbase.pb.HBaseVersionFileContent\x12.\n\x0clive_servers\x18\x02 \x03(\x0b\x32\x18.hbase.pb.LiveServerInfo\x12*\n\x0c\x64\x65\x61\x64_servers\x18\x03 \x03(\x0b\x32\x14.hbase.pb.ServerName\x12;\n\x15regions_in_transition\x18\x04 \x03(\x0b\x32\x1c.hbase.pb.RegionInTransition\x12\'\n\ncluster_id\x18\x05 \x01(\x0b\x32\x13.hbase.pb.ClusterId\x12\x32\n\x13master_coprocessors\x18\x06 \x03(\x0b\x32\x15.hbase.pb.Coprocessor\x12$\n\x06master\x18\x07 \x01(\x0b\x32\x14.hbase.pb.ServerName\x12,\n\x0e\x62\x61\x63kup_masters\x18\x08 \x03(\x0b\x32\x14.hbase.pb.ServerName\x12\x13\n\x0b\x62\x61lancer_on\x18\t \x01(\x08\x12\x1c\n\x10master_info_port\x18\n \x01(\x05:\x02-1\x12*\n\x0cservers_name\x18\x0b \x03(\x0b\x32\x14.hbase.pb.ServerName\x12\x43\n\x19table_region_states_count\x18\x0c \x03(\x0b\x32 .hbase.pb.TableRegionStatesCount\x12*\n\x0cmaster_tasks\x18\r \x03(\x0b\x32\x14.hbase.pb.ServerTask\x12-\n\x0funknown_servers\x18\x0e \x03(\x0b\x32\x14.hbase.pb.ServerName*\x98\x02\n\x06Option\x12\x11\n\rHBASE_VERSION\x10\x00\x12\x0e\n\nCLUSTER_ID\x10\x01\x12\x10\n\x0cLIVE_SERVERS\x10\x02\x12\x10\n\x0c\x44\x45\x41\x44_SERVERS\x10\x03\x12\n\n\x06MASTER\x10\x04\x12\x12\n\x0e\x42\x41\x43KUP_MASTERS\x10\x05\x12\x17\n\x13MASTER_COPROCESSORS\x10\x06\x12\x19\n\x15REGIONS_IN_TRANSITION\x10\x07\x12\x0f\n\x0b\x42\x41LANCER_ON\x10\x08\x12\x14\n\x10MASTER_INFO_PORT\x10\t\x12\x10\n\x0cSERVERS_NAME\x10\n\x12\x1a\n\x16TABLE_TO_REGIONS_COUNT\x10\x0b\x12\t\n\x05TASKS\x10\x0c\x12\x13\n\x0fUNKNOWN_SERVERS\x10\rBM\n1org.apache.hadoop.hbase.shaded.protobuf.generatedB\x13\x43lusterStatusProtosH\x01\xa0\x01\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ClusterStatus_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n1org.apache.hadoop.hbase.shaded.protobuf.generatedB\023ClusterStatusProtosH\001\240\001\001'
  _globals['_OPTION']._serialized_start=4059
  _globals['_OPTION']._serialized_end=4339
  _globals['_REGIONSTATE']._serialized_start=74
  _globals['_REGIONSTATE']._serialized_end=442
  _globals['_REGIONSTATE_STATE']._serialized_start=192
  _globals['_REGIONSTATE_STATE']._serialized_end=442
  _globals['_REGIONINTRANSITION']._serialized_start=444
  _globals['_REGIONINTRANSITION']._serialized_end=550
  _globals['_STORESEQUENCEID']._serialized_start=552
  _globals['_STORESEQUENCEID']._serialized_end=611
  _globals['_REGIONSTORESEQUENCEIDS']._serialized_start=613
  _globals['_REGIONSTORESEQUENCEIDS']._serialized_end=725
  _globals['_REGIONLOAD']._serialized_start=728
  _globals['_REGIONLOAD']._serialized_end=1701
  _globals['_REGIONLOAD_COMPACTIONSTATE']._serialized_start=1631
  _globals['_REGIONLOAD_COMPACTIONSTATE']._serialized_end=1701
  _globals['_USERLOAD']._serialized_start=1703
  _globals['_USERLOAD']._serialized_end=1779
  _globals['_CLIENTMETRICS']._serialized_start=1781
  _globals['_CLIENTMETRICS']._serialized_end=1906
  _globals['_REPLICATIONLOADSINK']._serialized_start=1909
  _globals['_REPLICATIONLOADSINK']._serialized_end=2046
  _globals['_REPLICATIONLOADSOURCE']._serialized_start=2049
  _globals['_REPLICATIONLOADSOURCE']._serialized_end=2353
  _globals['_SERVERTASK']._serialized_start=2356
  _globals['_SERVERTASK']._serialized_end=2553
  _globals['_SERVERTASK_STATE']._serialized_start=2493
  _globals['_SERVERTASK_STATE']._serialized_end=2553
  _globals['_SERVERLOAD']._serialized_start=2556
  _globals['_SERVERLOAD']._serialized_end=3026
  _globals['_LIVESERVERINFO']._serialized_start=3028
  _globals['_LIVESERVERINFO']._serialized_end=3125
  _globals['_REGIONSTATESCOUNT']._serialized_start=3128
  _globals['_REGIONSTATESCOUNT']._serialized_end=3270
  _globals['_TABLEREGIONSTATESCOUNT']._serialized_start=3272
  _globals['_TABLEREGIONSTATESCOUNT']._serialized_end=3395
  _globals['_CLUSTERSTATUS']._serialized_start=3398
  _globals['_CLUSTERSTATUS']._serialized_end=4056
# @@protoc_insertion_point(module_scope)
