[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "retrigen"
version = "0.0.3"
authors = [
  { name = "Kenneth Enevoldsen", email = "Kenneth.enevoldsen@cas.au.dk" },
]
description = "A package for automatically generating datasets for training or evaluating retrieval models"
classifiers = [
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = []
[project.license]
file = "LICENSE"
name = "MIT"
[project.optional-dependencies]
dev = [
  "cruft>=2.0.0",
  "pyright>=1.1.338",
  "ruff>=0.3.0",
  "pyproject-parser[cli, readme]>=0.9.1",
]
tests = ["pytest>=7.1.3", "pytest-cov>=3.0.0", "pytest-xdist"]
docs = [
  "mkdocs-jupyter==0.24.2",
  "mkdocs-material==9.1.21",
  "mkdocstrings[python]==0.22.0",
  # for tutorials
  "jupyter>=1.0.0",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
homepage = "https://github.com/KennethEnevoldsen/retrigen"
repository = "https://github.com/KennethEnevoldsen/retrigen"
documentation = "https://KennethEnevoldsen.github.io/retrigen/"

[tool.pyright]
exclude = [".*venv*"]
pythonPlatform = "Darwin"

[tool.ruff]
line-length = 150
target-version = "py39"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
  "A",
  "ANN",
  "ARG",
  "B",
  "C4",
  "COM",
  "D417",
  "E",
  "ERA",
  "F",
  "I",
  "ICN",
  "NPY001",
  "PD002",
  "PIE",
  "PLE",
  "PLW",
  "PT",
  "UP",
  "Q",
  "PTH",
  "RSE",
  "RET",
  "RUF",
  "SIM",
  "W",
]
ignore = [
  "ANN101",
  "ANN401",
  "E402",
  "E501",
  "F401",
  "F841",
  "RET504",
  "COM812",
]
ignore-init-module-imports = true
# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "__init__.py",
  "docs/conf.py",
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.semantic_release]
branch = "main"
version_toml = ["pyproject.toml:project.version"]
build_command = "python -m pip install build; python -m build"

[tool.setuptools]
include-package-data = true
