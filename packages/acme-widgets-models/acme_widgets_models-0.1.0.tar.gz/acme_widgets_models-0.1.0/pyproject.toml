[tool.poetry]
name = "acme-widgets-models"
version = "0.1.0"
description = "contains schemas and related utility functions used within the acme widgets solution"
authors = ["Craig Saxton <csaxton171@gmail.com>"]
readme = "README.md"
license = "Proprietary"
repository = "https://github.com/acme-widgets-org/models"
keywords = ["schema", "validation", "envelopes", "payloads"]
packages = [{include = "models"}]


[tool.poetry.dependencies]
python = "^3.11"
jsonschema = "^4.19.1"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
isort = "^5.12.0"
black = "^23.9.1"
pylint = "^3.0.1"
pytest-cov = "^4.1.0"


[[tool.poetry.source]]
name = "python_internal"
url = "https://acme-dev-core-foundation-829660196533.d.codeartifact.eu-west-1.amazonaws.com/pypi/python-internal/simple/"
# priority = "supplemental"
priority = "primary"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
# 'extend-exclude' excludes files or directories in addition to the defaults
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
  ^/foo.py    # exclude a file named foo.py in the root of the project
  | .*_pb2.py  # exclude autogenerated Protocol Buffer files anywhere in the project
)
'''

[tool.pylint.MASTER]
ignore-paths = "^.*/tests/.*$"

[tool.pylint."messages control"]
disable = [
    "bad-inline-option",
    "bare-except",
    "deprecated-pragma",
    "file-ignored",
    "invalid-name",
    "locally-disabled",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "raw-checker-failed",
    "suppressed-message",
    "use-symbolic-message-instead",
    "useless-suppression",
]

[tool.coverage.run]
source = ['models']

[tool.coverage.report]
fail_under = 90
omit = ["**/tests/*"]
