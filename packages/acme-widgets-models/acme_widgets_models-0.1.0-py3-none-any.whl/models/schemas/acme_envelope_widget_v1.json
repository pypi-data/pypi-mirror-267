{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://widgets.acme.com/acme_envelope_ingest",
  "title": "acme_envelope_widget",
  "description": "associates meta information indicating provenance, processing steps and metrics with a given payload",
  "type": "object",
  "additionalProperties": false,
  "required": ["ingestId", "objectKey", "receivedDate", "source", "widget"],
  "properties": {
    "ingestId": {
      "description": "uuidv4 value generated by submitting party",
      "type": "string",
      "format": "uuid"
    },
    "objectKey": {
      "description": "acme generated value used to uniquely identify an item independant from submitter's identification schema(s)",
      "type": "string",
      "pattern": "^okv1\\:\\w+$"
    },
    "receivedDate": {
      "description": "datetime the item was received by the core pipeline ( rfc 3339 format )",
      "type": "string",
      "format": "date-time"
    },
    "schemaCode": {
      "description": "indicates the schema the payload is bound to",
      "type": "string",
      "enum": ["acme_payload_widget_v1"]
    },
    "source": {
      "description": "contains information pertaining to the origin of the submitted item",
      "type": "object",
      "additionalProperties": false,
      "required": ["component", "originSchemaCode"],
      "properties": {
        "component": {
          "description": "composite value, colon delimited, indicating the receiving component name and version",
          "type": "string",
          "pattern": "^[^\\:.]+\\:.+$",
          "examples": ["acme_esg_kafka_receive_widget:2024_04_21_18_33_23"]
        },
        "channel": {
          "description": "optionally further qualifies any queues, endpoints, views the submitted item arrived at",
          "type": "string",
          "examples": [
            "kakfka://some-topic",
            "https://widgets.acme.com/widgets",
            "s3://some-bucket/some-key.gz"
          ]
        },
        "originSchemaCode": {
          "description": "indicates the original schema code the interaction came in as. useful when having to transform legacy schemas or data prior to ingest",
          "type": "string",
          "minLength": 1,
          "examples": ["partner_widget_v14"]
        },
        "nativeId": {
          "description": "if provided, stores the item's origin system unique identifier. value should be prefix with a value indicating origin system",
          "type": "string",
          "pattern": "^[^\\:.]+\\:.+$",
          "examples": [
            "some-partner1:123123423545345345123",
            "legacy-app:5f3fd363-c5a1-44bd-b317-9ba496f86a74"
          ]
        },
        "originEncoding": {
          "description": "if provided, indicates the original encoding the item was received in",
          "type": "string",
          "enum": ["avro", "protobuf"]
        }
      }
    },
    "widget": {
      "description": "contains the widget data that adheres the the schema specified in 'schemaCode'",
      "type": "object",
      "additionalProperties": true
    }
  }
}
