# coding: utf-8

"""
    flatastic API Schema

    This schema was generated by the reverse-engineered-apis project with the help of alufers/mitmproxy2swagger and openapitools/openapi-generator. It is not guaranteed to be complete or correct.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from reverse_engineered_apis.flatastic.models.post_subscriptions_request import PostSubscriptionsRequest

class TestPostSubscriptionsRequest(unittest.TestCase):
    """PostSubscriptionsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostSubscriptionsRequest:
        """Test PostSubscriptionsRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostSubscriptionsRequest`
        """
        model = PostSubscriptionsRequest()
        if include_optional:
            return PostSubscriptionsRequest(
                title = '',
                description = '',
                cycle = '',
                first_bill = 1.337,
                payer = '',
                price = 1.337,
                icon = '',
                data = reverse_engineered_apis.flatastic.models.post_subscriptions_request_data.postSubscriptions_request_data(
                    icon = '', 
                    duration = '', 
                    remind_me = '', 
                    color = '', 
                    settlement = '', 
                    sharers = '', 
                    provider = '', ),
                is_proposal = True,
                proposal_id = '',
                id = ''
            )
        else:
            return PostSubscriptionsRequest(
        )
        """

    def testPostSubscriptionsRequest(self):
        """Test PostSubscriptionsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
