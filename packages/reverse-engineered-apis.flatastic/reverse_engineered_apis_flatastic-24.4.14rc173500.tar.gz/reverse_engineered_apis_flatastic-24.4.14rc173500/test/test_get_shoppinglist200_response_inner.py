# coding: utf-8

"""
    flatastic API Schema

    This schema was generated by the reverse-engineered-apis project with the help of alufers/mitmproxy2swagger and openapitools/openapi-generator. It is not guaranteed to be complete or correct.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from reverse_engineered_apis.flatastic.models.get_shoppinglist200_response_inner import GetShoppinglist200ResponseInner

class TestGetShoppinglist200ResponseInner(unittest.TestCase):
    """GetShoppinglist200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetShoppinglist200ResponseInner:
        """Test GetShoppinglist200ResponseInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetShoppinglist200ResponseInner`
        """
        model = GetShoppinglist200ResponseInner()
        if include_optional:
            return GetShoppinglist200ResponseInner(
                id = 1.337,
                inserter_id = 1.337,
                item_name = '',
                details = '',
                category_id = None,
                for_all = 1.337,
                bought = 1.337,
                priority = 1.337,
                var_date = 1.337,
                buyer_id = None,
                attachments = [
                    null
                    ]
            )
        else:
            return GetShoppinglist200ResponseInner(
        )
        """

    def testGetShoppinglist200ResponseInner(self):
        """Test GetShoppinglist200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
