# coding: utf-8

"""
    flatastic API Schema

    This schema was generated by the reverse-engineered-apis project with the help of alufers/mitmproxy2swagger and openapitools/openapi-generator. It is not guaranteed to be complete or correct.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from reverse_engineered_apis.flatastic.models.post_login200_response import PostLogin200Response

class TestPostLogin200Response(unittest.TestCase):
    """PostLogin200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostLogin200Response:
        """Test PostLogin200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostLogin200Response`
        """
        model = PostLogin200Response()
        if include_optional:
            return PostLogin200Response(
                x_api_key = '',
                user = reverse_engineered_apis.flatastic.models.post_login_200_response_user.postLogin_200_response_user(
                    email = '', 
                    phone = reverse_engineered_apis.flatastic.models.phone.phone(), 
                    dob = '', 
                    language = '', 
                    id = '', 
                    group_id = '', 
                    created_on = '', 
                    last_login = '', 
                    first_name = '', 
                    last_name = reverse_engineered_apis.flatastic.models.last_name.lastName(), 
                    profile_image = '', 
                    wg_code = '', 
                    chore_points = '', 
                    premium_until = '', 
                    is_premium = True, 
                    bic = reverse_engineered_apis.flatastic.models.bic.bic(), 
                    iban = reverse_engineered_apis.flatastic.models.iban.iban(), 
                    has_active_subscription = True, ),
                wg = reverse_engineered_apis.flatastic.models.post_login_200_response_wg.postLogin_200_response_wg(
                    id = '', 
                    name = '', 
                    city = '', 
                    street = '', 
                    country = '', 
                    date = '', 
                    image = '', 
                    type = '', 
                    founder_id = '', 
                    post_code = '', 
                    currency = '', 
                    country_code = '', 
                    flatmates = [
                        reverse_engineered_apis.flatastic.models.post_login_200_response_wg_flatmates_inner.postLogin_200_response_wg_flatmates_inner(
                            email = '', 
                            phone = '', 
                            dob = '', 
                            language = '', 
                            id = '', 
                            group_id = '', 
                            created_on = '', 
                            last_login = '', 
                            first_name = '', 
                            last_name = '', 
                            profile_image = '', 
                            wg_code = null, 
                            chore_points = '', 
                            premium_until = '', 
                            is_premium = True, 
                            subscriptions = [
                                null
                                ], )
                        ], )
            )
        else:
            return PostLogin200Response(
        )
        """

    def testPostLogin200Response(self):
        """Test PostLogin200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
