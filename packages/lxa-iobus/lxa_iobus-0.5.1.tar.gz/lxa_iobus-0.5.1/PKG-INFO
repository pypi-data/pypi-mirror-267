Metadata-Version: 2.1
Name: lxa-iobus
Version: 0.5.1
Summary: Linux Automation IOBus Server
Author-email: Linux Automation GmbH <info@linux-automation.com>
License:                                Apache License
                                   Version 2.0, January 2004
                                http://www.apache.org/licenses/
        
           TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        
           1. Definitions.
        
              "License" shall mean the terms and conditions for use, reproduction,
              and distribution as defined by Sections 1 through 9 of this document.
        
              "Licensor" shall mean the copyright owner or entity authorized by
              the copyright owner that is granting the License.
        
              "Legal Entity" shall mean the union of the acting entity and all
              other entities that control, are controlled by, or are under common
              control with that entity. For the purposes of this definition,
              "control" means (i) the power, direct or indirect, to cause the
              direction or management of such entity, whether by contract or
              otherwise, or (ii) ownership of fifty percent (50%) or more of the
              outstanding shares, or (iii) beneficial ownership of such entity.
        
              "You" (or "Your") shall mean an individual or Legal Entity
              exercising permissions granted by this License.
        
              "Source" form shall mean the preferred form for making modifications,
              including but not limited to software source code, documentation
              source, and configuration files.
        
              "Object" form shall mean any form resulting from mechanical
              transformation or translation of a Source form, including but
              not limited to compiled object code, generated documentation,
              and conversions to other media types.
        
              "Work" shall mean the work of authorship, whether in Source or
              Object form, made available under the License, as indicated by a
              copyright notice that is included in or attached to the work
              (an example is provided in the Appendix below).
        
              "Derivative Works" shall mean any work, whether in Source or Object
              form, that is based on (or derived from) the Work and for which the
              editorial revisions, annotations, elaborations, or other modifications
              represent, as a whole, an original work of authorship. For the purposes
              of this License, Derivative Works shall not include works that remain
              separable from, or merely link (or bind by name) to the interfaces of,
              the Work and Derivative Works thereof.
        
              "Contribution" shall mean any work of authorship, including
              the original version of the Work and any modifications or additions
              to that Work or Derivative Works thereof, that is intentionally
              submitted to Licensor for inclusion in the Work by the copyright owner
              or by an individual or Legal Entity authorized to submit on behalf of
              the copyright owner. For the purposes of this definition, "submitted"
              means any form of electronic, verbal, or written communication sent
              to the Licensor or its representatives, including but not limited to
              communication on electronic mailing lists, source code control systems,
              and issue tracking systems that are managed by, or on behalf of, the
              Licensor for the purpose of discussing and improving the Work, but
              excluding communication that is conspicuously marked or otherwise
              designated in writing by the copyright owner as "Not a Contribution."
        
              "Contributor" shall mean Licensor and any individual or Legal Entity
              on behalf of whom a Contribution has been received by Licensor and
              subsequently incorporated within the Work.
        
           2. Grant of Copyright License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              copyright license to reproduce, prepare Derivative Works of,
              publicly display, publicly perform, sublicense, and distribute the
              Work and such Derivative Works in Source or Object form.
        
           3. Grant of Patent License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              (except as stated in this section) patent license to make, have made,
              use, offer to sell, sell, import, and otherwise transfer the Work,
              where such license applies only to those patent claims licensable
              by such Contributor that are necessarily infringed by their
              Contribution(s) alone or by combination of their Contribution(s)
              with the Work to which such Contribution(s) was submitted. If You
              institute patent litigation against any entity (including a
              cross-claim or counterclaim in a lawsuit) alleging that the Work
              or a Contribution incorporated within the Work constitutes direct
              or contributory patent infringement, then any patent licenses
              granted to You under this License for that Work shall terminate
              as of the date such litigation is filed.
        
           4. Redistribution. You may reproduce and distribute copies of the
              Work or Derivative Works thereof in any medium, with or without
              modifications, and in Source or Object form, provided that You
              meet the following conditions:
        
              (a) You must give any other recipients of the Work or
                  Derivative Works a copy of this License; and
        
              (b) You must cause any modified files to carry prominent notices
                  stating that You changed the files; and
        
              (c) You must retain, in the Source form of any Derivative Works
                  that You distribute, all copyright, patent, trademark, and
                  attribution notices from the Source form of the Work,
                  excluding those notices that do not pertain to any part of
                  the Derivative Works; and
        
              (d) If the Work includes a "NOTICE" text file as part of its
                  distribution, then any Derivative Works that You distribute must
                  include a readable copy of the attribution notices contained
                  within such NOTICE file, excluding those notices that do not
                  pertain to any part of the Derivative Works, in at least one
                  of the following places: within a NOTICE text file distributed
                  as part of the Derivative Works; within the Source form or
                  documentation, if provided along with the Derivative Works; or,
                  within a display generated by the Derivative Works, if and
                  wherever such third-party notices normally appear. The contents
                  of the NOTICE file are for informational purposes only and
                  do not modify the License. You may add Your own attribution
                  notices within Derivative Works that You distribute, alongside
                  or as an addendum to the NOTICE text from the Work, provided
                  that such additional attribution notices cannot be construed
                  as modifying the License.
        
              You may add Your own copyright statement to Your modifications and
              may provide additional or different license terms and conditions
              for use, reproduction, or distribution of Your modifications, or
              for any such Derivative Works as a whole, provided Your use,
              reproduction, and distribution of the Work otherwise complies with
              the conditions stated in this License.
        
           5. Submission of Contributions. Unless You explicitly state otherwise,
              any Contribution intentionally submitted for inclusion in the Work
              by You to the Licensor shall be under the terms and conditions of
              this License, without any additional terms or conditions.
              Notwithstanding the above, nothing herein shall supersede or modify
              the terms of any separate license agreement you may have executed
              with Licensor regarding such Contributions.
        
           6. Trademarks. This License does not grant permission to use the trade
              names, trademarks, service marks, or product names of the Licensor,
              except as required for reasonable and customary use in describing the
              origin of the Work and reproducing the content of the NOTICE file.
        
           7. Disclaimer of Warranty. Unless required by applicable law or
              agreed to in writing, Licensor provides the Work (and each
              Contributor provides its Contributions) on an "AS IS" BASIS,
              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
              implied, including, without limitation, any warranties or conditions
              of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
              PARTICULAR PURPOSE. You are solely responsible for determining the
              appropriateness of using or redistributing the Work and assume any
              risks associated with Your exercise of permissions under this License.
        
           8. Limitation of Liability. In no event and under no legal theory,
              whether in tort (including negligence), contract, or otherwise,
              unless required by applicable law (such as deliberate and grossly
              negligent acts) or agreed to in writing, shall any Contributor be
              liable to You for damages, including any direct, indirect, special,
              incidental, or consequential damages of any character arising as a
              result of this License or out of the use or inability to use the
              Work (including but not limited to damages for loss of goodwill,
              work stoppage, computer failure or malfunction, or any and all
              other commercial damages or losses), even if such Contributor
              has been advised of the possibility of such damages.
        
           9. Accepting Warranty or Additional Liability. While redistributing
              the Work or Derivative Works thereof, You may choose to offer,
              and charge a fee for, acceptance of support, warranty, indemnity,
              or other liability obligations and/or rights consistent with this
              License. However, in accepting such obligations, You may act only
              on Your own behalf and on Your sole responsibility, not on behalf
              of any other Contributor, and only if You agree to indemnify,
              defend, and hold each Contributor harmless for any liability
              incurred by, or claims asserted against, such Contributor by reason
              of your accepting any such warranty or additional liability.
        
           END OF TERMS AND CONDITIONS
        
           Copyright 2020 Linux Automation GmbH
        
           Licensed under the Apache License, Version 2.0 (the "License");
           you may not use this file except in compliance with the License.
           You may obtain a copy of the License at
        
               http://www.apache.org/licenses/LICENSE-2.0
        
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
        
Description-Content-Type: text/x-rst
License-File: LICENSE.txt
Requires-Dist: aiohttp~=3.8
Requires-Dist: aiohttp-json-rpc==0.13.3
Requires-Dist: python-can
Requires-Dist: janus

Linux Automation GmbH lxa-iobus
===============================

.. image:: https://img.shields.io/pypi/l/lxa-iobus.svg
    :alt: pypi.org
    :target: https://pypi.org/project/lxa-iobus
.. image:: https://img.shields.io/pypi/pyversions/lxa-iobus.svg
    :alt: pypi.org
    :target: https://pypi.org/project/lxa-iobus
.. image:: https://img.shields.io/pypi/v/lxa-iobus.svg
    :alt: pypi.org
    :target: https://pypi.org/project/lxa-iobus
.. image:: https://readthedocs.org/projects/lxa-iobus/badge/?version=latest
    :alt: documentation status
    :target: https://lxa-iobus.readthedocs.io/en/latest/?badge=latest


lxa-iobus-server
----------------

This packages provides a daemon which interfaces IOBus-devices from Linux Automation GmbH
with test-automation tools like `labgrid <https://github.com/labgrid-project/labgrid>`__.
IOBus is a CANopen-inspired communications protocol on top of CAN.

This packages provides the following features:

* lxa-iobus-server: This is the central daemon that manages the nodes on the bus.
  It provides a (human-readable) web interface and a REST API for remote control of the nodes.
  It also updates the firmware running on the devices on the bus.
* The most recent firmware for all available IOBus devices.

If you want to get in touch with us feel free to do so:

* IRC channel ``#lxa`` on libera.chat
  (bridged to the Matrix channel
  `#lxa:matrix.org <https://app.element.io/#/room/#lxa:matrix.org>`__)
* If our 
  `troubleshooting guide <https://lxa-iobus.readthedocs.io/en/latest/troubleshooting.html>`__
  doesn't solve your problem or if you found a bug feel free to open an
  `issue on github <https://github.com/linux-automation/lxa-iobus/issues>`__.
* You can send us an email to info@linux-automation.com.

System requirements
"""""""""""""""""""

The lxa-iobus-server has been developed to work on a modern Linux-based distribution.
Additional to this the following requirements need to be meet to run the lxa-iobus-server:

* Python 3.7 or later
* on Debian: python3-virtualenv
* SocketCAN
* Compatible CAN device
* git
* optional: ``systemd`` to setup a service for lxa-iobus-server
* optional: ``systemd`` >= 239 to bring up your CAN-device on boot
* optional: ``make`` for easy setup of the lxa-iobus-server

Quickstart
""""""""""

We assume that the linux network interface connected to your CAN bus is ``can0``.
If your CAN bus has a different name please take a look into our documentation.

Make sure you have at least one other CAN device on your bus
(e.g. an IOBus-Device) and that your bus has sufficient termination resistors.
If you connect an IOBus-Device to a currently unmanaged bus
(a CAN bus without a running lxa-iobus-server)
the network LED on the IOBus-Device will blink until the node has been initialized.

With this instructions you will first set up your SocketCAN device to work with
the lxa-iobus-server.
Afterwards you will clone this repository.
The last step is to call ``make server`` which will create a ``python venv`` inside
the directory and start a server that binds to ``http://localhost:8080/``.

::

   $ sudo ip l set can0 down && sudo ip link set can0 type can bitrate 100000 && sudo ip l set can0 up
   $ git clone https://github.com/linux-automation/lxa-iobus.git
   Cloning into 'lxa-iobus'...
   remote: Enumerating objects: 476, done.
   remote: Counting objects: 100% (476/476), done.
   remote: Compressing objects: 100% (227/227), done.
   remote: Total 476 (delta 257), reused 448 (delta 229), pack-reused 0
   Receiving objects: 100% (476/476), 1.04 MiB | 2.48 MiB/s, done.
   Resolving deltas: 100% (257/257), done.
   $ cd lxa-iobus/
   $ make server
   rm -rf env && \
   python3.7 -m venv env && \
   . env/bin/activate && \
   pip install -e .[full] && \
   date > env/.created
   Obtaining file:///home/chris/tmp/lxa-iobus
   [...]
   Successfully installed aenum-2.2.4 aiohttp-3.5.4 aiohttp-json-rpc-0.12.1 async-timeout-3.0.1 attrs-20.2.0 backcall-0.2.0 canopen-1.1.0 chardet-3.0.4 decorator-4.4.2 idna-2.10 ipython-6.5.0 ipython-genutils-0.2.0 jedi-0.17.2 lxa-iobus multidict-4.7.6 parso-0.7.1 pexpect-4.8.0 pickleshare-0.7.5 prompt-toolkit-1.0.18 ptyprocess-0.6.0 pygments-2.7.2 python-can-3.3.4 simplegeneric-0.8.1 six-1.15.0 traitlets-5.0.5 typing-extensions-3.7.4.3 wcwidth-0.2.5 wrapt-1.12.1 yarl-1.6.2
   . env/bin/activate && \
   lxa-iobus-server can0
   starting server on http://localhost:8080/

After this step the lxa-iobus-server will start to scan the bus for connected
IOBus-compatible nodes. Depending on the number of nodes this can take up to
30 seconds.
Observe the status of the network LED on your IOBus compatible node.
Once the node has been initialized by the server the LED stops blinking.

Now navigate your web browser to ``http://localhost:8080/``.
Your node should be listed under ``nodes``.
Your lxa-iobus-server is now ready for use.

Installation
""""""""""""

For a permanent installation of the LXA IOBus server take a look into the
`Getting Started section <https://lxa-iobus.readthedocs.io/en/latest/getting_started.html>`__
in our documentation.

REST API
""""""""

The REST API can be used to build your own lab automation on top of the lxa-iobus.
Take a look at the following examples for all the available endpoints.

Examples
''''''''

::

    # get nodes
    >>> curl http://localhost:8080/nodes/
    <<< {"code": 0, "error_message": "", "result": ["IOMux-5a6ecbea", "00000000.0c0ce935.534d0000.5c12ca96"]}

    # get pins
    >>> curl http://localhost:8080/nodes/IOMux-5a6ecbea/pins/
    <<< {"code": 0, "error_message": "", "result": ["led"]}

    # get pin
    >>> curl http://localhost:8080/nodes/IOMux-5a6ecbea/pins/led/
    <<< {"code": 0, "error_message": "", "result": 0}

    # set pin
    >>> curl -d "value=0" -X POST http://localhost:8080/nodes/IOMux-5a6ecbea/pins/led/
    <<< {"code": 0, "error_message": "", "result": null}

Contributing
""""""""""""

Thank you for considering a contribution to this project!
Changes should be submitted via a
`Github pull request <https://github.com/linux-automation/lxa-iobus/pulls>`_.

This project uses the `Developer's Certificate of Origin 1.1
<https://developercertificate.org/>`_ with the same `process
<https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin>`_
as used for the Linux kernel:

  Developer's Certificate of Origin 1.1

  By making a contribution to this project, I certify that:

  (a) The contribution was created in whole or in part by me and I
      have the right to submit it under the open source license
      indicated in the file; or

  (b) The contribution is based upon previous work that, to the best
      of my knowledge, is covered under an appropriate open source
      license and I have the right under that license to submit that
      work with modifications, whether created in whole or in part
      by me, under the same open source license (unless I am
      permitted to submit under a different license), as indicated
      in the file; or

  (c) The contribution was provided directly to me by some other
      person who certified (a), (b) or (c) and I have not modified
      it.

  (d) I understand and agree that this project and the contribution
      are public and that a record of the contribution (including all
      personal information I submit with it, including my sign-off) is
      maintained indefinitely and may be redistributed consistent with
      this project or the open source license(s) involved.

Then you just add a line (using ``git commit -s``) saying:

  Signed-off-by: Random J Developer <random@developer.example.org>

using a known identity (sorry, no anonymous contributions).

Troubleshooting
"""""""""""""""

You may see the ``lxa-iobus-server`` fail with messages like:

``Server dies with can.CanError: Failed to transmit: [Errno 105] No buffer space available``

Have a look at our `troubleshooting guide <https://lxa-iobus.readthedocs.io/en/latest/troubleshooting.html>`__
for common solutions for CAN related issues.
