# flake8: noqa
from ctypes import POINTER, c_uint8
from typing import Callable, Generic, List, Optional, Tuple, TypeVar, Union

# Constants
VERSION: str

# Sequence class
T = TypeVar("T")

class Seq(Generic[T]):
    def __len__(self) -> None: ...
    def __getitem__(self, idx: int) -> T: ...
    def __setitem__(self, idx: int, value: T) -> T: ...
    def from_list(self, lst: List[T]) -> None: ...
    def to_list(self) -> List[T]: ...

# Sound class
class Sound:
    notes: Seq[int]

    def __init__(self) -> None: ...
    def set(
            self,
            notes: str
    ) -> None: ...
    def set_notes(self, notes: str) -> None: ...

# Audio
class Sound: ...
sounds: Seq[Sound]

# Math
def ceil(x: float) -> int: ...
def floor(x: float) -> int: ...
def sgn(x: float) -> float: ...
def sqrt(x: float) -> float: ...
def sin(deg: float) -> float: ...
def cos(deg: float) -> float: ...
def atan2(y: float, x: float) -> float: ...
def rseed(seed: int) -> None: ...
def rndi(a: int, b: int) -> int: ...
def rndf(a: float, b: float) -> int: ...
def nseed(seed: int) -> None: ...
def noise(x: float, y: Optional[float] = None, z: Optional[float] = None) -> float: ...

# System
def init(param) -> None: ...
def run(update, draw, close) -> None: ...