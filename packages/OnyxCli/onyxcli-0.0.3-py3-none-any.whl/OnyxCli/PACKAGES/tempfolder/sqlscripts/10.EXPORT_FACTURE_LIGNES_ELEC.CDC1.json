{
    "osqlScript": {
        "name": "10.EXPORT_FACTURE_LIGNES_ELEC.CDC1",
        "query": "---------------------------------\n-- MSSQL - CDC Type 1\n---------------------------------\n\n-- Creation of destination table \n\n    DECLARE @destination_table_exist AS INTEGER;\n    DECLARE @val VARCHAR(1000);\n    DECLARE @query VARCHAR(1000);\n    SET @destination_table_exist = CASE WHEN OBJECT_ID('[AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC]', 'U') IS NULL THEN 0 ELSE 1 END;        \n\tIF @destination_table_exist = 0 \n    BEGIN\n        SELECT TOP 0 * INTO [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] FROM [staging].[EXPORT_FACTURE_LIGNES_ELEC];        \n        ALTER TABLE [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] ADD [nx_hash] varchar(256);\n        ALTER TABLE [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] ADD [nx_creation_date] DATETIME;\n        ALTER TABLE [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] ADD [nx_update_date] DATETIME;        \n        DECLARE cur CURSOR FOR Select [name] as [ColumnName] FROM sys.columns WHERE is_identity=1 AND [object_id] = OBJECT_ID('[AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC]', 'U');\n        OPEN cur\n        FETCH NEXT FROM cur INTO @val\n        BEGIN\n\t        SET @query = 'ALTER TABLE [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] DROP COLUMN ' + @val;\n\t        EXEC (@query);\n\t        SET @query = 'ALTER TABLE [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] ADD ' + @val + ' BIGINT';\n\t        EXEC (@query);\n\t        FETCH NEXT FROM cur INTO @val\n        END\n        CLOSE cur;  \n        DEALLOCATE cur;  \n        CREATE INDEX [indx_AG_to_OC_EXPORT_FACTURE_LIGNES_ELEC] ON [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] ([ID_FACTURE]);\n    END;      \n            \n-- Data insert\n    \n    DELETE FROM [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] WHERE ID_FACTURE IN (SELECT DISTINCT ID_FACTURE FROM [staging].[EXPORT_FACTURE_LIGNES_ELEC]);\n\n    INSERT INTO [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] ([TAXMODE],[USERACCOUNTCODE],[UNITPRICECURRENCY],[ID_FACTURE],[INVOICEID],[VALUEDATE],[AMOUNTWITHOUTTAX],[AMOUNTTAX],[LABEL],[AMOUNTWITHTAX],[PRODUCTCODE],[ACCOUNTINGARTICLECODE],[STARTDATE],[UNITPRICE],[ENDDATE],[QUANTITY], [nx_hash], [nx_creation_date])\n    SELECT [s].[TAXMODE],[s].[USERACCOUNTCODE],[s].[UNITPRICECURRENCY],[s].[ID_FACTURE],[s].[INVOICEID],[s].[VALUEDATE],[s].[AMOUNTWITHOUTTAX],[s].[AMOUNTTAX],[s].[LABEL],[s].[AMOUNTWITHTAX],[s].[PRODUCTCODE],[s].[ACCOUNTINGARTICLECODE],[s].[STARTDATE],[s].[UNITPRICE],[s].[ENDDATE],[s].[QUANTITY], hashbytes('MD5', (SELECT [s].[TAXMODE],[s].[USERACCOUNTCODE],[s].[UNITPRICECURRENCY],[s].[ID_FACTURE],[s].[INVOICEID],[s].[VALUEDATE],[s].[AMOUNTWITHOUTTAX],[s].[AMOUNTTAX],[s].[LABEL],[s].[AMOUNTWITHTAX],[s].[PRODUCTCODE],[s].[ACCOUNTINGARTICLECODE],[s].[STARTDATE],[s].[UNITPRICE],[s].[ENDDATE],[s].[QUANTITY] FOR XML RAW)), GETDATE()\n    FROM\n        [staging].[EXPORT_FACTURE_LIGNES_ELEC] as [s]\n        left join [AG_to_OC].[EXPORT_FACTURE_LIGNES_ELEC] as [d] ON [s].[ID_FACTURE] = [d].[ID_FACTURE]\n    WHERE\n        [d].[ID_FACTURE] IS NULL;\n\n            ",
        "commandTimeout": 3600,
        "documentation": null,
        "oProjectId": "7316024d-7485-4b92-87b3-fce9be27f367",
        "oConnectionId": "5c3be4e3-be08-4888-bfac-08db5bc711cb",
        "id": "0f02fd97-1728-4e88-b14f-1514a9de9986"
    },
    "numberOfSchedules": 0,
    "oProjectName": "AG - invoice",
    "oConnectionName": "BDD-metfr-onyx"
}