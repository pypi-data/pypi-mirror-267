{
    "oShellScript": {
        "name": "15_EXPORT_FACTURE_MANUELLE_LIGNES_GAZ",
        "script": "import logging\r\nimport sshtunnel\r\nimport cx_Oracle\r\nimport pymssql\r\nimport os\r\n\r\n# Chargement du contexte et des librairies ADS\r\n{{nxAddons}}\r\n\r\n# Ouverture du tunnel SSH\r\nprint(\"Ouverture du tunnel SSH\")\r\nwith sshtunnel.open_tunnel(\r\n    (nxContext.BDD_antargaz_ssh_server, 22),\r\n    ssh_username=nxContext.BDD_antargaz_ssh_username,\r\n    ssh_password=nxContext.BDD_antargaz_ssh_password,\r\n    remote_bind_address=(nxContext.BDD_antargaz_ora_server, 1521),\r\n    local_bind_address=('0.0.0.0', 1521)\r\n) as tunnel:\r\n    print(\"Connection à la BDD ORACLE\")\r\n    try:\r\n        rows = []\r\n        cx_Oracle.init_oracle_client(lib_dir='/opt/oracle/instantclient_21_11')\r\n        dsn_tns = cx_Oracle.makedsn('127.0.0.1', '1521', service_name=nxContext.BDD_antargaz_ora_servicename)\r\n        conn = cx_Oracle.connect(user=nxContext.BDD_antargaz_ora_username, password=nxContext.BDD_antargaz_ora_password, dsn=dsn_tns)\r\n        c = conn.cursor()\r\n        c.execute(\"\"\"\r\n        SELECT\r\n            ACCOUNTINGARTICLECODE,\r\n            AMOUNTTAX,\r\n            AMOUNTWITHOUTTAX,\r\n            AMOUNTWITHTAX,\r\n            TO_CHAR(STARTDATE, 'YYYY-MM-DD HH24:MI:SS') AS START_DATE,\r\n            TO_CHAR(ENDDATE, 'YYYY-MM-DD HH24:MI:SS') AS ENDDATE,\r\n            INVOICEID,\r\n            LABEL,\r\n            PRODUCTCODE,\r\n            QUANTITY,\r\n            TAXMODE,\r\n            UNITPRICE,\r\n            UNITPRICECURRENCY,\r\n            TO_CHAR(VALUEDATE, 'YYYY-MM-DD HH24:MI:SS') AS VALUEDATE,\r\n            USERACCOUNTCODE,\r\n            ID_FACTURE_MANUELLE AS ID_FACTURE\r\n        FROM \r\n            BO.EXPORT_FACTURE_MANUELLE_LIGNES_GAZ\r\n\"\"\")\r\n        for row in c:\r\n            rows.append(row)\r\n        conn.close()\r\n    except Exception as e:\r\n        print(e)\r\n        logging.error(f\"Error while connecting to database: {e}\")\r\n# Using parameterized query\r\nquery = \"\"\"INSERT INTO staging.EXPORT_FACTURE_MANUELLE_LIGNES_GAZ (\r\n    ACCOUNTINGARTICLECODE,\r\n    AMOUNTTAX,\r\n    AMOUNTWITHOUTTAX,\r\n    AMOUNTWITHTAX,\r\n    STARTDATE,\r\n    ENDDATE,\r\n    INVOICEID,\r\n    LABEL,\r\n    PRODUCTCODE,\r\n    QUANTITY,\r\n    TAXMODE,\r\n    UNITPRICE,\r\n    UNITPRICECURRENCY,\r\n    VALUEDATE,\r\n    USERACCOUNTCODE,\r\n    ID_FACTURE\r\n)\r\nVALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)\r\n\"\"\"\r\n\r\n# Create a connection to the database\r\nprint(\"Connecting to the database MSSQL\")\r\nconn = pymssql.connect(server=nxContext.BDD_Onyx_host, port=nxContext.BDD_Onyx_port, user=nxContext.BDD_Onyx_user, password=nxContext.BDD_Onyx_password, database=nxContext.BDD_Onyx_database)\r\ncursor = conn.cursor()\r\ni = 0\r\nfor row in rows:\r\n    i+=1\r\n    id_facture_value = row[15] if row[15] is not None else ''\r\n    cursor.execute(query, (row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8], row[9], row[10], row[11], row[12], row[13], row[14], id_facture_value))\r\n    if i%1000==0:\r\n        print(str(i) + \" lignes insérées\")\r\nconn.commit()\r\ncursor.close()\r\nconn.close()",
        "documentation": null,
        "oProjectId": "7316024d-7485-4b92-87b3-fce9be27f367",
        "isScheduled": false,
        "isInAWorkflow": true,
        "type": 1,
        "packages": "sshtunnel==0.4.0\r\ncx_Oracle==8.3\r\npymssql==2.2.7\r\nrequests==2.28.1\r\ncryptography==41.0.4",
        "id": "6f9c3018-0998-4a54-88ff-50501993bbd3"
    },
    "numberOfSchedules": 0,
    "oProjectName": "AG - invoice"
}