# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, List, Optional
from tmdb_client.models.tv_season_watch_providers200_response_results_ae import TvSeasonWatchProviders200ResponseResultsAE
from tmdb_client.models.tv_season_watch_providers200_response_results_ar import TvSeasonWatchProviders200ResponseResultsAR
from tmdb_client.models.tv_season_watch_providers200_response_results_at import TvSeasonWatchProviders200ResponseResultsAT
from tmdb_client.models.tv_season_watch_providers200_response_results_au import TvSeasonWatchProviders200ResponseResultsAU
from tmdb_client.models.tv_season_watch_providers200_response_results_ba import TvSeasonWatchProviders200ResponseResultsBA
from tmdb_client.models.tv_season_watch_providers200_response_results_bb import TvSeasonWatchProviders200ResponseResultsBB
from tmdb_client.models.tv_season_watch_providers200_response_results_be import TvSeasonWatchProviders200ResponseResultsBE
from tmdb_client.models.tv_season_watch_providers200_response_results_bg import TvSeasonWatchProviders200ResponseResultsBG
from tmdb_client.models.tv_season_watch_providers200_response_results_bo import TvSeasonWatchProviders200ResponseResultsBO
from tmdb_client.models.tv_season_watch_providers200_response_results_br import TvSeasonWatchProviders200ResponseResultsBR
from tmdb_client.models.tv_season_watch_providers200_response_results_bs import TvSeasonWatchProviders200ResponseResultsBS
from tmdb_client.models.tv_season_watch_providers200_response_results_ca import TvSeasonWatchProviders200ResponseResultsCA
from tmdb_client.models.tv_season_watch_providers200_response_results_ch import TvSeasonWatchProviders200ResponseResultsCH
from tmdb_client.models.tv_season_watch_providers200_response_results_ci import TvSeasonWatchProviders200ResponseResultsCI
from tmdb_client.models.tv_season_watch_providers200_response_results_cl import TvSeasonWatchProviders200ResponseResultsCL
from tmdb_client.models.tv_season_watch_providers200_response_results_co import TvSeasonWatchProviders200ResponseResultsCO
from tmdb_client.models.tv_season_watch_providers200_response_results_cr import TvSeasonWatchProviders200ResponseResultsCR
from tmdb_client.models.tv_season_watch_providers200_response_results_cz import TvSeasonWatchProviders200ResponseResultsCZ
from tmdb_client.models.tv_season_watch_providers200_response_results_de import TvSeasonWatchProviders200ResponseResultsDE
from tmdb_client.models.tv_season_watch_providers200_response_results_dk import TvSeasonWatchProviders200ResponseResultsDK
from tmdb_client.models.tv_season_watch_providers200_response_results_do import TvSeasonWatchProviders200ResponseResultsDO
from tmdb_client.models.tv_season_watch_providers200_response_results_dz import TvSeasonWatchProviders200ResponseResultsDZ
from tmdb_client.models.tv_season_watch_providers200_response_results_ec import TvSeasonWatchProviders200ResponseResultsEC
from tmdb_client.models.tv_season_watch_providers200_response_results_eg import TvSeasonWatchProviders200ResponseResultsEG
from tmdb_client.models.tv_season_watch_providers200_response_results_es import TvSeasonWatchProviders200ResponseResultsES
from tmdb_client.models.tv_season_watch_providers200_response_results_fi import TvSeasonWatchProviders200ResponseResultsFI
from tmdb_client.models.tv_season_watch_providers200_response_results_fr import TvSeasonWatchProviders200ResponseResultsFR
from tmdb_client.models.tv_season_watch_providers200_response_results_gb import TvSeasonWatchProviders200ResponseResultsGB
from tmdb_client.models.tv_season_watch_providers200_response_results_gf import TvSeasonWatchProviders200ResponseResultsGF
from tmdb_client.models.tv_season_watch_providers200_response_results_gh import TvSeasonWatchProviders200ResponseResultsGH
from tmdb_client.models.tv_season_watch_providers200_response_results_gq import TvSeasonWatchProviders200ResponseResultsGQ
from tmdb_client.models.tv_season_watch_providers200_response_results_gt import TvSeasonWatchProviders200ResponseResultsGT
from tmdb_client.models.tv_season_watch_providers200_response_results_hk import TvSeasonWatchProviders200ResponseResultsHK
from tmdb_client.models.tv_season_watch_providers200_response_results_hn import TvSeasonWatchProviders200ResponseResultsHN
from tmdb_client.models.tv_season_watch_providers200_response_results_hr import TvSeasonWatchProviders200ResponseResultsHR
from tmdb_client.models.tv_season_watch_providers200_response_results_hu import TvSeasonWatchProviders200ResponseResultsHU
from tmdb_client.models.tv_season_watch_providers200_response_results_id import TvSeasonWatchProviders200ResponseResultsID
from tmdb_client.models.tv_season_watch_providers200_response_results_ie import TvSeasonWatchProviders200ResponseResultsIE
from tmdb_client.models.tv_season_watch_providers200_response_results_il import TvSeasonWatchProviders200ResponseResultsIL
from tmdb_client.models.tv_season_watch_providers200_response_results_iq import TvSeasonWatchProviders200ResponseResultsIQ
from tmdb_client.models.tv_season_watch_providers200_response_results_it import TvSeasonWatchProviders200ResponseResultsIT
from tmdb_client.models.tv_season_watch_providers200_response_results_jm import TvSeasonWatchProviders200ResponseResultsJM
from tmdb_client.models.tv_season_watch_providers200_response_results_jp import TvSeasonWatchProviders200ResponseResultsJP
from tmdb_client.models.tv_season_watch_providers200_response_results_ke import TvSeasonWatchProviders200ResponseResultsKE
from tmdb_client.models.tv_season_watch_providers200_response_results_kr import TvSeasonWatchProviders200ResponseResultsKR
from tmdb_client.models.tv_season_watch_providers200_response_results_lb import TvSeasonWatchProviders200ResponseResultsLB
from tmdb_client.models.tv_season_watch_providers200_response_results_ly import TvSeasonWatchProviders200ResponseResultsLY
from tmdb_client.models.tv_season_watch_providers200_response_results_md import TvSeasonWatchProviders200ResponseResultsMD
from tmdb_client.models.tv_season_watch_providers200_response_results_mk import TvSeasonWatchProviders200ResponseResultsMK
from tmdb_client.models.tv_season_watch_providers200_response_results_mu import TvSeasonWatchProviders200ResponseResultsMU
from tmdb_client.models.tv_season_watch_providers200_response_results_mx import TvSeasonWatchProviders200ResponseResultsMX
from tmdb_client.models.tv_season_watch_providers200_response_results_my import TvSeasonWatchProviders200ResponseResultsMY
from tmdb_client.models.tv_season_watch_providers200_response_results_mz import TvSeasonWatchProviders200ResponseResultsMZ
from tmdb_client.models.tv_season_watch_providers200_response_results_ne import TvSeasonWatchProviders200ResponseResultsNE
from tmdb_client.models.tv_season_watch_providers200_response_results_ng import TvSeasonWatchProviders200ResponseResultsNG
from tmdb_client.models.tv_season_watch_providers200_response_results_nl import TvSeasonWatchProviders200ResponseResultsNL
from tmdb_client.models.tv_season_watch_providers200_response_results_no import TvSeasonWatchProviders200ResponseResultsNO
from tmdb_client.models.tv_season_watch_providers200_response_results_nz import TvSeasonWatchProviders200ResponseResultsNZ
from tmdb_client.models.tv_season_watch_providers200_response_results_pa import TvSeasonWatchProviders200ResponseResultsPA
from tmdb_client.models.tv_season_watch_providers200_response_results_pe import TvSeasonWatchProviders200ResponseResultsPE
from tmdb_client.models.tv_season_watch_providers200_response_results_ph import TvSeasonWatchProviders200ResponseResultsPH
from tmdb_client.models.tv_season_watch_providers200_response_results_pl import TvSeasonWatchProviders200ResponseResultsPL
from tmdb_client.models.tv_season_watch_providers200_response_results_ps import TvSeasonWatchProviders200ResponseResultsPS
from tmdb_client.models.tv_season_watch_providers200_response_results_pt import TvSeasonWatchProviders200ResponseResultsPT
from tmdb_client.models.tv_season_watch_providers200_response_results_py import TvSeasonWatchProviders200ResponseResultsPY
from tmdb_client.models.tv_season_watch_providers200_response_results_ro import TvSeasonWatchProviders200ResponseResultsRO
from tmdb_client.models.tv_season_watch_providers200_response_results_rs import TvSeasonWatchProviders200ResponseResultsRS
from tmdb_client.models.tv_season_watch_providers200_response_results_ru import TvSeasonWatchProviders200ResponseResultsRU
from tmdb_client.models.tv_season_watch_providers200_response_results_sa import TvSeasonWatchProviders200ResponseResultsSA
from tmdb_client.models.tv_season_watch_providers200_response_results_sc import TvSeasonWatchProviders200ResponseResultsSC
from tmdb_client.models.tv_season_watch_providers200_response_results_se import TvSeasonWatchProviders200ResponseResultsSE
from tmdb_client.models.tv_season_watch_providers200_response_results_sg import TvSeasonWatchProviders200ResponseResultsSG
from tmdb_client.models.tv_season_watch_providers200_response_results_si import TvSeasonWatchProviders200ResponseResultsSI
from tmdb_client.models.tv_season_watch_providers200_response_results_sk import TvSeasonWatchProviders200ResponseResultsSK
from tmdb_client.models.tv_season_watch_providers200_response_results_sn import TvSeasonWatchProviders200ResponseResultsSN
from tmdb_client.models.tv_season_watch_providers200_response_results_sv import TvSeasonWatchProviders200ResponseResultsSV
from tmdb_client.models.tv_season_watch_providers200_response_results_th import TvSeasonWatchProviders200ResponseResultsTH
from tmdb_client.models.tv_season_watch_providers200_response_results_tr import TvSeasonWatchProviders200ResponseResultsTR
from tmdb_client.models.tv_season_watch_providers200_response_results_tt import TvSeasonWatchProviders200ResponseResultsTT
from tmdb_client.models.tv_season_watch_providers200_response_results_tw import TvSeasonWatchProviders200ResponseResultsTW
from tmdb_client.models.tv_season_watch_providers200_response_results_tz import TvSeasonWatchProviders200ResponseResultsTZ
from tmdb_client.models.tv_season_watch_providers200_response_results_ug import TvSeasonWatchProviders200ResponseResultsUG
from tmdb_client.models.tv_season_watch_providers200_response_results_us import TvSeasonWatchProviders200ResponseResultsUS
from tmdb_client.models.tv_season_watch_providers200_response_results_uy import TvSeasonWatchProviders200ResponseResultsUY
from tmdb_client.models.tv_season_watch_providers200_response_results_ve import TvSeasonWatchProviders200ResponseResultsVE
from tmdb_client.models.tv_season_watch_providers200_response_results_za import TvSeasonWatchProviders200ResponseResultsZA
from tmdb_client.models.tv_season_watch_providers200_response_results_zm import TvSeasonWatchProviders200ResponseResultsZM
from typing import Optional, Set
from typing_extensions import Self

class TvSeasonWatchProviders200ResponseResults(BaseModel):
    """
    TvSeasonWatchProviders200ResponseResults
    """ # noqa: E501
    ae: Optional[TvSeasonWatchProviders200ResponseResultsAE] = Field(default=None, alias="AE")
    ar: Optional[TvSeasonWatchProviders200ResponseResultsAR] = Field(default=None, alias="AR")
    at: Optional[TvSeasonWatchProviders200ResponseResultsAT] = Field(default=None, alias="AT")
    au: Optional[TvSeasonWatchProviders200ResponseResultsAU] = Field(default=None, alias="AU")
    ba: Optional[TvSeasonWatchProviders200ResponseResultsBA] = Field(default=None, alias="BA")
    bb: Optional[TvSeasonWatchProviders200ResponseResultsBB] = Field(default=None, alias="BB")
    be: Optional[TvSeasonWatchProviders200ResponseResultsBE] = Field(default=None, alias="BE")
    bg: Optional[TvSeasonWatchProviders200ResponseResultsBG] = Field(default=None, alias="BG")
    bo: Optional[TvSeasonWatchProviders200ResponseResultsBO] = Field(default=None, alias="BO")
    br: Optional[TvSeasonWatchProviders200ResponseResultsBR] = Field(default=None, alias="BR")
    bs: Optional[TvSeasonWatchProviders200ResponseResultsBS] = Field(default=None, alias="BS")
    ca: Optional[TvSeasonWatchProviders200ResponseResultsCA] = Field(default=None, alias="CA")
    ch: Optional[TvSeasonWatchProviders200ResponseResultsCH] = Field(default=None, alias="CH")
    ci: Optional[TvSeasonWatchProviders200ResponseResultsCI] = Field(default=None, alias="CI")
    cl: Optional[TvSeasonWatchProviders200ResponseResultsCL] = Field(default=None, alias="CL")
    co: Optional[TvSeasonWatchProviders200ResponseResultsCO] = Field(default=None, alias="CO")
    cr: Optional[TvSeasonWatchProviders200ResponseResultsCR] = Field(default=None, alias="CR")
    cz: Optional[TvSeasonWatchProviders200ResponseResultsCZ] = Field(default=None, alias="CZ")
    de: Optional[TvSeasonWatchProviders200ResponseResultsDE] = Field(default=None, alias="DE")
    dk: Optional[TvSeasonWatchProviders200ResponseResultsDK] = Field(default=None, alias="DK")
    do: Optional[TvSeasonWatchProviders200ResponseResultsDO] = Field(default=None, alias="DO")
    dz: Optional[TvSeasonWatchProviders200ResponseResultsDZ] = Field(default=None, alias="DZ")
    ec: Optional[TvSeasonWatchProviders200ResponseResultsEC] = Field(default=None, alias="EC")
    eg: Optional[TvSeasonWatchProviders200ResponseResultsEG] = Field(default=None, alias="EG")
    es: Optional[TvSeasonWatchProviders200ResponseResultsES] = Field(default=None, alias="ES")
    fi: Optional[TvSeasonWatchProviders200ResponseResultsFI] = Field(default=None, alias="FI")
    fr: Optional[TvSeasonWatchProviders200ResponseResultsFR] = Field(default=None, alias="FR")
    gb: Optional[TvSeasonWatchProviders200ResponseResultsGB] = Field(default=None, alias="GB")
    gf: Optional[TvSeasonWatchProviders200ResponseResultsGF] = Field(default=None, alias="GF")
    gh: Optional[TvSeasonWatchProviders200ResponseResultsGH] = Field(default=None, alias="GH")
    gq: Optional[TvSeasonWatchProviders200ResponseResultsGQ] = Field(default=None, alias="GQ")
    gt: Optional[TvSeasonWatchProviders200ResponseResultsGT] = Field(default=None, alias="GT")
    hk: Optional[TvSeasonWatchProviders200ResponseResultsHK] = Field(default=None, alias="HK")
    hn: Optional[TvSeasonWatchProviders200ResponseResultsHN] = Field(default=None, alias="HN")
    hr: Optional[TvSeasonWatchProviders200ResponseResultsHR] = Field(default=None, alias="HR")
    hu: Optional[TvSeasonWatchProviders200ResponseResultsHU] = Field(default=None, alias="HU")
    id: Optional[TvSeasonWatchProviders200ResponseResultsID] = Field(default=None, alias="ID")
    ie: Optional[TvSeasonWatchProviders200ResponseResultsIE] = Field(default=None, alias="IE")
    il: Optional[TvSeasonWatchProviders200ResponseResultsIL] = Field(default=None, alias="IL")
    iq: Optional[TvSeasonWatchProviders200ResponseResultsIQ] = Field(default=None, alias="IQ")
    it: Optional[TvSeasonWatchProviders200ResponseResultsIT] = Field(default=None, alias="IT")
    jm: Optional[TvSeasonWatchProviders200ResponseResultsJM] = Field(default=None, alias="JM")
    jp: Optional[TvSeasonWatchProviders200ResponseResultsJP] = Field(default=None, alias="JP")
    ke: Optional[TvSeasonWatchProviders200ResponseResultsKE] = Field(default=None, alias="KE")
    kr: Optional[TvSeasonWatchProviders200ResponseResultsKR] = Field(default=None, alias="KR")
    lb: Optional[TvSeasonWatchProviders200ResponseResultsLB] = Field(default=None, alias="LB")
    ly: Optional[TvSeasonWatchProviders200ResponseResultsLY] = Field(default=None, alias="LY")
    md: Optional[TvSeasonWatchProviders200ResponseResultsMD] = Field(default=None, alias="MD")
    mk: Optional[TvSeasonWatchProviders200ResponseResultsMK] = Field(default=None, alias="MK")
    mu: Optional[TvSeasonWatchProviders200ResponseResultsMU] = Field(default=None, alias="MU")
    mx: Optional[TvSeasonWatchProviders200ResponseResultsMX] = Field(default=None, alias="MX")
    my: Optional[TvSeasonWatchProviders200ResponseResultsMY] = Field(default=None, alias="MY")
    mz: Optional[TvSeasonWatchProviders200ResponseResultsMZ] = Field(default=None, alias="MZ")
    ne: Optional[TvSeasonWatchProviders200ResponseResultsNE] = Field(default=None, alias="NE")
    ng: Optional[TvSeasonWatchProviders200ResponseResultsNG] = Field(default=None, alias="NG")
    nl: Optional[TvSeasonWatchProviders200ResponseResultsNL] = Field(default=None, alias="NL")
    no: Optional[TvSeasonWatchProviders200ResponseResultsNO] = Field(default=None, alias="NO")
    nz: Optional[TvSeasonWatchProviders200ResponseResultsNZ] = Field(default=None, alias="NZ")
    pa: Optional[TvSeasonWatchProviders200ResponseResultsPA] = Field(default=None, alias="PA")
    pe: Optional[TvSeasonWatchProviders200ResponseResultsPE] = Field(default=None, alias="PE")
    ph: Optional[TvSeasonWatchProviders200ResponseResultsPH] = Field(default=None, alias="PH")
    pl: Optional[TvSeasonWatchProviders200ResponseResultsPL] = Field(default=None, alias="PL")
    ps: Optional[TvSeasonWatchProviders200ResponseResultsPS] = Field(default=None, alias="PS")
    pt: Optional[TvSeasonWatchProviders200ResponseResultsPT] = Field(default=None, alias="PT")
    py: Optional[TvSeasonWatchProviders200ResponseResultsPY] = Field(default=None, alias="PY")
    ro: Optional[TvSeasonWatchProviders200ResponseResultsRO] = Field(default=None, alias="RO")
    rs: Optional[TvSeasonWatchProviders200ResponseResultsRS] = Field(default=None, alias="RS")
    ru: Optional[TvSeasonWatchProviders200ResponseResultsRU] = Field(default=None, alias="RU")
    sa: Optional[TvSeasonWatchProviders200ResponseResultsSA] = Field(default=None, alias="SA")
    sc: Optional[TvSeasonWatchProviders200ResponseResultsSC] = Field(default=None, alias="SC")
    se: Optional[TvSeasonWatchProviders200ResponseResultsSE] = Field(default=None, alias="SE")
    sg: Optional[TvSeasonWatchProviders200ResponseResultsSG] = Field(default=None, alias="SG")
    si: Optional[TvSeasonWatchProviders200ResponseResultsSI] = Field(default=None, alias="SI")
    sk: Optional[TvSeasonWatchProviders200ResponseResultsSK] = Field(default=None, alias="SK")
    sn: Optional[TvSeasonWatchProviders200ResponseResultsSN] = Field(default=None, alias="SN")
    sv: Optional[TvSeasonWatchProviders200ResponseResultsSV] = Field(default=None, alias="SV")
    th: Optional[TvSeasonWatchProviders200ResponseResultsTH] = Field(default=None, alias="TH")
    tr: Optional[TvSeasonWatchProviders200ResponseResultsTR] = Field(default=None, alias="TR")
    tt: Optional[TvSeasonWatchProviders200ResponseResultsTT] = Field(default=None, alias="TT")
    tw: Optional[TvSeasonWatchProviders200ResponseResultsTW] = Field(default=None, alias="TW")
    tz: Optional[TvSeasonWatchProviders200ResponseResultsTZ] = Field(default=None, alias="TZ")
    ug: Optional[TvSeasonWatchProviders200ResponseResultsUG] = Field(default=None, alias="UG")
    us: Optional[TvSeasonWatchProviders200ResponseResultsUS] = Field(default=None, alias="US")
    uy: Optional[TvSeasonWatchProviders200ResponseResultsUY] = Field(default=None, alias="UY")
    ve: Optional[TvSeasonWatchProviders200ResponseResultsVE] = Field(default=None, alias="VE")
    za: Optional[TvSeasonWatchProviders200ResponseResultsZA] = Field(default=None, alias="ZA")
    zm: Optional[TvSeasonWatchProviders200ResponseResultsZM] = Field(default=None, alias="ZM")
    __properties: ClassVar[List[str

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of TvSeasonWatchProviders200ResponseResults from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of ae
        if self.ae:
            _dict['AE'] = self.ae.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ar
        if self.ar:
            _dict['AR'] = self.ar.to_dict()
        # override the default output from pydantic by calling `to_dict()` of at
        if self.at:
            _dict['AT'] = self.at.to_dict()
        # override the default output from pydantic by calling `to_dict()` of au
        if self.au:
            _dict['AU'] = self.au.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ba
        if self.ba:
            _dict['BA'] = self.ba.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bb
        if self.bb:
            _dict['BB'] = self.bb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of be
        if self.be:
            _dict['BE'] = self.be.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bg
        if self.bg:
            _dict['BG'] = self.bg.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bo
        if self.bo:
            _dict['BO'] = self.bo.to_dict()
        # override the default output from pydantic by calling `to_dict()` of br
        if self.br:
            _dict['BR'] = self.br.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bs
        if self.bs:
            _dict['BS'] = self.bs.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ca
        if self.ca:
            _dict['CA'] = self.ca.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ch
        if self.ch:
            _dict['CH'] = self.ch.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ci
        if self.ci:
            _dict['CI'] = self.ci.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cl
        if self.cl:
            _dict['CL'] = self.cl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of co
        if self.co:
            _dict['CO'] = self.co.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cr
        if self.cr:
            _dict['CR'] = self.cr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cz
        if self.cz:
            _dict['CZ'] = self.cz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of de
        if self.de:
            _dict['DE'] = self.de.to_dict()
        # override the default output from pydantic by calling `to_dict()` of dk
        if self.dk:
            _dict['DK'] = self.dk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of do
        if self.do:
            _dict['DO'] = self.do.to_dict()
        # override the default output from pydantic by calling `to_dict()` of dz
        if self.dz:
            _dict['DZ'] = self.dz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ec
        if self.ec:
            _dict['EC'] = self.ec.to_dict()
        # override the default output from pydantic by calling `to_dict()` of eg
        if self.eg:
            _dict['EG'] = self.eg.to_dict()
        # override the default output from pydantic by calling `to_dict()` of es
        if self.es:
            _dict['ES'] = self.es.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fi
        if self.fi:
            _dict['FI'] = self.fi.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fr
        if self.fr:
            _dict['FR'] = self.fr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gb
        if self.gb:
            _dict['GB'] = self.gb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gf
        if self.gf:
            _dict['GF'] = self.gf.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gh
        if self.gh:
            _dict['GH'] = self.gh.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gq
        if self.gq:
            _dict['GQ'] = self.gq.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gt
        if self.gt:
            _dict['GT'] = self.gt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hk
        if self.hk:
            _dict['HK'] = self.hk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hn
        if self.hn:
            _dict['HN'] = self.hn.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hr
        if self.hr:
            _dict['HR'] = self.hr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hu
        if self.hu:
            _dict['HU'] = self.hu.to_dict()
        # override the default output from pydantic by calling `to_dict()` of id
        if self.id:
            _dict['ID'] = self.id.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ie
        if self.ie:
            _dict['IE'] = self.ie.to_dict()
        # override the default output from pydantic by calling `to_dict()` of il
        if self.il:
            _dict['IL'] = self.il.to_dict()
        # override the default output from pydantic by calling `to_dict()` of iq
        if self.iq:
            _dict['IQ'] = self.iq.to_dict()
        # override the default output from pydantic by calling `to_dict()` of it
        if self.it:
            _dict['IT'] = self.it.to_dict()
        # override the default output from pydantic by calling `to_dict()` of jm
        if self.jm:
            _dict['JM'] = self.jm.to_dict()
        # override the default output from pydantic by calling `to_dict()` of jp
        if self.jp:
            _dict['JP'] = self.jp.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ke
        if self.ke:
            _dict['KE'] = self.ke.to_dict()
        # override the default output from pydantic by calling `to_dict()` of kr
        if self.kr:
            _dict['KR'] = self.kr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of lb
        if self.lb:
            _dict['LB'] = self.lb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ly
        if self.ly:
            _dict['LY'] = self.ly.to_dict()
        # override the default output from pydantic by calling `to_dict()` of md
        if self.md:
            _dict['MD'] = self.md.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mk
        if self.mk:
            _dict['MK'] = self.mk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mu
        if self.mu:
            _dict['MU'] = self.mu.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mx
        if self.mx:
            _dict['MX'] = self.mx.to_dict()
        # override the default output from pydantic by calling `to_dict()` of my
        if self.my:
            _dict['MY'] = self.my.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mz
        if self.mz:
            _dict['MZ'] = self.mz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ne
        if self.ne:
            _dict['NE'] = self.ne.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ng
        if self.ng:
            _dict['NG'] = self.ng.to_dict()
        # override the default output from pydantic by calling `to_dict()` of nl
        if self.nl:
            _dict['NL'] = self.nl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of no
        if self.no:
            _dict['NO'] = self.no.to_dict()
        # override the default output from pydantic by calling `to_dict()` of nz
        if self.nz:
            _dict['NZ'] = self.nz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pa
        if self.pa:
            _dict['PA'] = self.pa.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pe
        if self.pe:
            _dict['PE'] = self.pe.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ph
        if self.ph:
            _dict['PH'] = self.ph.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pl
        if self.pl:
            _dict['PL'] = self.pl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ps
        if self.ps:
            _dict['PS'] = self.ps.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pt
        if self.pt:
            _dict['PT'] = self.pt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of py
        if self.py:
            _dict['PY'] = self.py.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ro
        if self.ro:
            _dict['RO'] = self.ro.to_dict()
        # override the default output from pydantic by calling `to_dict()` of rs
        if self.rs:
            _dict['RS'] = self.rs.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ru
        if self.ru:
            _dict['RU'] = self.ru.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sa
        if self.sa:
            _dict['SA'] = self.sa.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sc
        if self.sc:
            _dict['SC'] = self.sc.to_dict()
        # override the default output from pydantic by calling `to_dict()` of se
        if self.se:
            _dict['SE'] = self.se.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sg
        if self.sg:
            _dict['SG'] = self.sg.to_dict()
        # override the default output from pydantic by calling `to_dict()` of si
        if self.si:
            _dict['SI'] = self.si.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sk
        if self.sk:
            _dict['SK'] = self.sk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sn
        if self.sn:
            _dict['SN'] = self.sn.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sv
        if self.sv:
            _dict['SV'] = self.sv.to_dict()
        # override the default output from pydantic by calling `to_dict()` of th
        if self.th:
            _dict['TH'] = self.th.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tr
        if self.tr:
            _dict['TR'] = self.tr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tt
        if self.tt:
            _dict['TT'] = self.tt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tw
        if self.tw:
            _dict['TW'] = self.tw.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tz
        if self.tz:
            _dict['TZ'] = self.tz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ug
        if self.ug:
            _dict['UG'] = self.ug.to_dict()
        # override the default output from pydantic by calling `to_dict()` of us
        if self.us:
            _dict['US'] = self.us.to_dict()
        # override the default output from pydantic by calling `to_dict()` of uy
        if self.uy:
            _dict['UY'] = self.uy.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ve
        if self.ve:
            _dict['VE'] = self.ve.to_dict()
        # override the default output from pydantic by calling `to_dict()` of za
        if self.za:
            _dict['ZA'] = self.za.to_dict()
        # override the default output from pydantic by calling `to_dict()` of zm
        if self.zm:
            _dict['ZM'] = self.zm.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of TvSeasonWatchProviders200ResponseResults from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "AE": TvSeasonWatchProviders200ResponseResultsAE.from_dict(obj["AE"]) if obj.get("AE") is not None else None,
            "AR": TvSeasonWatchProviders200ResponseResultsAR.from_dict(obj["AR"]) if obj.get("AR") is not None else None,
            "AT": TvSeasonWatchProviders200ResponseResultsAT.from_dict(obj["AT"]) if obj.get("AT") is not None else None,
            "AU": TvSeasonWatchProviders200ResponseResultsAU.from_dict(obj["AU"]) if obj.get("AU") is not None else None,
            "BA": TvSeasonWatchProviders200ResponseResultsBA.from_dict(obj["BA"]) if obj.get("BA") is not None else None,
            "BB": TvSeasonWatchProviders200ResponseResultsBB.from_dict(obj["BB"]) if obj.get("BB") is not None else None,
            "BE": TvSeasonWatchProviders200ResponseResultsBE.from_dict(obj["BE"]) if obj.get("BE") is not None else None,
            "BG": TvSeasonWatchProviders200ResponseResultsBG.from_dict(obj["BG"]) if obj.get("BG") is not None else None,
            "BO": TvSeasonWatchProviders200ResponseResultsBO.from_dict(obj["BO"]) if obj.get("BO") is not None else None,
            "BR": TvSeasonWatchProviders200ResponseResultsBR.from_dict(obj["BR"]) if obj.get("BR") is not None else None,
            "BS": TvSeasonWatchProviders200ResponseResultsBS.from_dict(obj["BS"]) if obj.get("BS") is not None else None,
            "CA": TvSeasonWatchProviders200ResponseResultsCA.from_dict(obj["CA"]) if obj.get("CA") is not None else None,
            "CH": TvSeasonWatchProviders200ResponseResultsCH.from_dict(obj["CH"]) if obj.get("CH") is not None else None,
            "CI": TvSeasonWatchProviders200ResponseResultsCI.from_dict(obj["CI"]) if obj.get("CI") is not None else None,
            "CL": TvSeasonWatchProviders200ResponseResultsCL.from_dict(obj["CL"]) if obj.get("CL") is not None else None,
            "CO": TvSeasonWatchProviders200ResponseResultsCO.from_dict(obj["CO"]) if obj.get("CO") is not None else None,
            "CR": TvSeasonWatchProviders200ResponseResultsCR.from_dict(obj["CR"]) if obj.get("CR") is not None else None,
            "CZ": TvSeasonWatchProviders200ResponseResultsCZ.from_dict(obj["CZ"]) if obj.get("CZ") is not None else None,
            "DE": TvSeasonWatchProviders200ResponseResultsDE.from_dict(obj["DE"]) if obj.get("DE") is not None else None,
            "DK": TvSeasonWatchProviders200ResponseResultsDK.from_dict(obj["DK"]) if obj.get("DK") is not None else None,
            "DO": TvSeasonWatchProviders200ResponseResultsDO.from_dict(obj["DO"]) if obj.get("DO") is not None else None,
            "DZ": TvSeasonWatchProviders200ResponseResultsDZ.from_dict(obj["DZ"]) if obj.get("DZ") is not None else None,
            "EC": TvSeasonWatchProviders200ResponseResultsEC.from_dict(obj["EC"]) if obj.get("EC") is not None else None,
            "EG": TvSeasonWatchProviders200ResponseResultsEG.from_dict(obj["EG"]) if obj.get("EG") is not None else None,
            "ES": TvSeasonWatchProviders200ResponseResultsES.from_dict(obj["ES"]) if obj.get("ES") is not None else None,
            "FI": TvSeasonWatchProviders200ResponseResultsFI.from_dict(obj["FI"]) if obj.get("FI") is not None else None,
            "FR": TvSeasonWatchProviders200ResponseResultsFR.from_dict(obj["FR"]) if obj.get("FR") is not None else None,
            "GB": TvSeasonWatchProviders200ResponseResultsGB.from_dict(obj["GB"]) if obj.get("GB") is not None else None,
            "GF": TvSeasonWatchProviders200ResponseResultsGF.from_dict(obj["GF"]) if obj.get("GF") is not None else None,
            "GH": TvSeasonWatchProviders200ResponseResultsGH.from_dict(obj["GH"]) if obj.get("GH") is not None else None,
            "GQ": TvSeasonWatchProviders200ResponseResultsGQ.from_dict(obj["GQ"]) if obj.get("GQ") is not None else None,
            "GT": TvSeasonWatchProviders200ResponseResultsGT.from_dict(obj["GT"]) if obj.get("GT") is not None else None,
            "HK": TvSeasonWatchProviders200ResponseResultsHK.from_dict(obj["HK"]) if obj.get("HK") is not None else None,
            "HN": TvSeasonWatchProviders200ResponseResultsHN.from_dict(obj["HN"]) if obj.get("HN") is not None else None,
            "HR": TvSeasonWatchProviders200ResponseResultsHR.from_dict(obj["HR"]) if obj.get("HR") is not None else None,
            "HU": TvSeasonWatchProviders200ResponseResultsHU.from_dict(obj["HU"]) if obj.get("HU") is not None else None,
            "ID": TvSeasonWatchProviders200ResponseResultsID.from_dict(obj["ID"]) if obj.get("ID") is not None else None,
            "IE": TvSeasonWatchProviders200ResponseResultsIE.from_dict(obj["IE"]) if obj.get("IE") is not None else None,
            "IL": TvSeasonWatchProviders200ResponseResultsIL.from_dict(obj["IL"]) if obj.get("IL") is not None else None,
            "IQ": TvSeasonWatchProviders200ResponseResultsIQ.from_dict(obj["IQ"]) if obj.get("IQ") is not None else None,
            "IT": TvSeasonWatchProviders200ResponseResultsIT.from_dict(obj["IT"]) if obj.get("IT") is not None else None,
            "JM": TvSeasonWatchProviders200ResponseResultsJM.from_dict(obj["JM"]) if obj.get("JM") is not None else None,
            "JP": TvSeasonWatchProviders200ResponseResultsJP.from_dict(obj["JP"]) if obj.get("JP") is not None else None,
            "KE": TvSeasonWatchProviders200ResponseResultsKE.from_dict(obj["KE"]) if obj.get("KE") is not None else None,
            "KR": TvSeasonWatchProviders200ResponseResultsKR.from_dict(obj["KR"]) if obj.get("KR") is not None else None,
            "LB": TvSeasonWatchProviders200ResponseResultsLB.from_dict(obj["LB"]) if obj.get("LB") is not None else None,
            "LY": TvSeasonWatchProviders200ResponseResultsLY.from_dict(obj["LY"]) if obj.get("LY") is not None else None,
            "MD": TvSeasonWatchProviders200ResponseResultsMD.from_dict(obj["MD"]) if obj.get("MD") is not None else None,
            "MK": TvSeasonWatchProviders200ResponseResultsMK.from_dict(obj["MK"]) if obj.get("MK") is not None else None,
            "MU": TvSeasonWatchProviders200ResponseResultsMU.from_dict(obj["MU"]) if obj.get("MU") is not None else None,
            "MX": TvSeasonWatchProviders200ResponseResultsMX.from_dict(obj["MX"]) if obj.get("MX") is not None else None,
            "MY": TvSeasonWatchProviders200ResponseResultsMY.from_dict(obj["MY"]) if obj.get("MY") is not None else None,
            "MZ": TvSeasonWatchProviders200ResponseResultsMZ.from_dict(obj["MZ"]) if obj.get("MZ") is not None else None,
            "NE": TvSeasonWatchProviders200ResponseResultsNE.from_dict(obj["NE"]) if obj.get("NE") is not None else None,
            "NG": TvSeasonWatchProviders200ResponseResultsNG.from_dict(obj["NG"]) if obj.get("NG") is not None else None,
            "NL": TvSeasonWatchProviders200ResponseResultsNL.from_dict(obj["NL"]) if obj.get("NL") is not None else None,
            "NO": TvSeasonWatchProviders200ResponseResultsNO.from_dict(obj["NO"]) if obj.get("NO") is not None else None,
            "NZ": TvSeasonWatchProviders200ResponseResultsNZ.from_dict(obj["NZ"]) if obj.get("NZ") is not None else None,
            "PA": TvSeasonWatchProviders200ResponseResultsPA.from_dict(obj["PA"]) if obj.get("PA") is not None else None,
            "PE": TvSeasonWatchProviders200ResponseResultsPE.from_dict(obj["PE"]) if obj.get("PE") is not None else None,
            "PH": TvSeasonWatchProviders200ResponseResultsPH.from_dict(obj["PH"]) if obj.get("PH") is not None else None,
            "PL": TvSeasonWatchProviders200ResponseResultsPL.from_dict(obj["PL"]) if obj.get("PL") is not None else None,
            "PS": TvSeasonWatchProviders200ResponseResultsPS.from_dict(obj["PS"]) if obj.get("PS") is not None else None,
            "PT": TvSeasonWatchProviders200ResponseResultsPT.from_dict(obj["PT"]) if obj.get("PT") is not None else None,
            "PY": TvSeasonWatchProviders200ResponseResultsPY.from_dict(obj["PY"]) if obj.get("PY") is not None else None,
            "RO": TvSeasonWatchProviders200ResponseResultsRO.from_dict(obj["RO"]) if obj.get("RO") is not None else None,
            "RS": TvSeasonWatchProviders200ResponseResultsRS.from_dict(obj["RS"]) if obj.get("RS") is not None else None,
            "RU": TvSeasonWatchProviders200ResponseResultsRU.from_dict(obj["RU"]) if obj.get("RU") is not None else None,
            "SA": TvSeasonWatchProviders200ResponseResultsSA.from_dict(obj["SA"]) if obj.get("SA") is not None else None,
            "SC": TvSeasonWatchProviders200ResponseResultsSC.from_dict(obj["SC"]) if obj.get("SC") is not None else None,
            "SE": TvSeasonWatchProviders200ResponseResultsSE.from_dict(obj["SE"]) if obj.get("SE") is not None else None,
            "SG": TvSeasonWatchProviders200ResponseResultsSG.from_dict(obj["SG"]) if obj.get("SG") is not None else None,
            "SI": TvSeasonWatchProviders200ResponseResultsSI.from_dict(obj["SI"]) if obj.get("SI") is not None else None,
            "SK": TvSeasonWatchProviders200ResponseResultsSK.from_dict(obj["SK"]) if obj.get("SK") is not None else None,
            "SN": TvSeasonWatchProviders200ResponseResultsSN.from_dict(obj["SN"]) if obj.get("SN") is not None else None,
            "SV": TvSeasonWatchProviders200ResponseResultsSV.from_dict(obj["SV"]) if obj.get("SV") is not None else None,
            "TH": TvSeasonWatchProviders200ResponseResultsTH.from_dict(obj["TH"]) if obj.get("TH") is not None else None,
            "TR": TvSeasonWatchProviders200ResponseResultsTR.from_dict(obj["TR"]) if obj.get("TR") is not None else None,
            "TT": TvSeasonWatchProviders200ResponseResultsTT.from_dict(obj["TT"]) if obj.get("TT") is not None else None,
            "TW": TvSeasonWatchProviders200ResponseResultsTW.from_dict(obj["TW"]) if obj.get("TW") is not None else None,
            "TZ": TvSeasonWatchProviders200ResponseResultsTZ.from_dict(obj["TZ"]) if obj.get("TZ") is not None else None,
            "UG": TvSeasonWatchProviders200ResponseResultsUG.from_dict(obj["UG"]) if obj.get("UG") is not None else None,
            "US": TvSeasonWatchProviders200ResponseResultsUS.from_dict(obj["US"]) if obj.get("US") is not None else None,
            "UY": TvSeasonWatchProviders200ResponseResultsUY.from_dict(obj["UY"]) if obj.get("UY") is not None else None,
            "VE": TvSeasonWatchProviders200ResponseResultsVE.from_dict(obj["VE"]) if obj.get("VE") is not None else None,
            "ZA": TvSeasonWatchProviders200ResponseResultsZA.from_dict(obj["ZA"]) if obj.get("ZA") is not None else None,
            "ZM": TvSeasonWatchProviders200ResponseResultsZM.from_dict(obj["ZM"]) if obj.get("ZM") is not None else None
        })
        return _obj


