# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tmdb_client.models.trending_people200_response_results_inner_known_for_inner import TrendingPeople200ResponseResultsInnerKnownForInner

class TestTrendingPeople200ResponseResultsInnerKnownForInner(unittest.TestCase):
    """TrendingPeople200ResponseResultsInnerKnownForInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrendingPeople200ResponseResultsInnerKnownForInner:
        """Test TrendingPeople200ResponseResultsInnerKnownForInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrendingPeople200ResponseResultsInnerKnownForInner`
        """
        model = TrendingPeople200ResponseResultsInnerKnownForInner()
        if include_optional:
            return TrendingPeople200ResponseResultsInnerKnownForInner(
                adult = False,
                backdrop_path = '/ilRyazdMJwN05exqhwK4tMKBYZs.jpg',
                id = 335984,
                title = 'Blade Runner 2049',
                original_language = 'en',
                original_title = 'Blade Runner 2049',
                overview = 'Thirty years after the events of the first film, a new blade runner, LAPD Officer K, unearths a long-buried secret that has the potential to plunge what's left of society into chaos. K's discovery leads him on a quest to find Rick Deckard, a former LAPD blade runner who has been missing for 30 years.',
                poster_path = '/gajva2L0rPYkEWjzgFlBXCAVBE5.jpg',
                media_type = 'movie',
                genre_ids = [
                    878
                    ],
                popularity = 79.571,
                release_date = '2017-10-04',
                video = False,
                vote_average = 7.531,
                vote_count = 11771
            )
        else:
            return TrendingPeople200ResponseResultsInnerKnownForInner(
        )
        """

    def testTrendingPeople200ResponseResultsInnerKnownForInner(self):
        """Test TrendingPeople200ResponseResultsInnerKnownForInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
