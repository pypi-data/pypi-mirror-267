# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tmdb_client.models.configuration_details200_response import ConfigurationDetails200Response

class TestConfigurationDetails200Response(unittest.TestCase):
    """ConfigurationDetails200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigurationDetails200Response:
        """Test ConfigurationDetails200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigurationDetails200Response`
        """
        model = ConfigurationDetails200Response()
        if include_optional:
            return ConfigurationDetails200Response(
                images = tmdb_client.models.configuration_details_200_response_images.configuration_details_200_response_images(
                    base_url = 'http://image.tmdb.org/t/p/', 
                    secure_base_url = 'https://image.tmdb.org/t/p/', 
                    backdrop_sizes = [
                        'w300'
                        ], 
                    logo_sizes = [
                        'w45'
                        ], 
                    poster_sizes = [
                        'w92'
                        ], 
                    profile_sizes = [
                        'w45'
                        ], 
                    still_sizes = [
                        'w92'
                        ], ),
                change_keys = [
                    'adult'
                    ]
            )
        else:
            return ConfigurationDetails200Response(
        )
        """

    def testConfigurationDetails200Response(self):
        """Test ConfigurationDetails200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
