# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tmdb_client.models.find_by_id200_response_movie_results_inner import FindById200ResponseMovieResultsInner

class TestFindById200ResponseMovieResultsInner(unittest.TestCase):
    """FindById200ResponseMovieResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FindById200ResponseMovieResultsInner:
        """Test FindById200ResponseMovieResultsInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FindById200ResponseMovieResultsInner`
        """
        model = FindById200ResponseMovieResultsInner()
        if include_optional:
            return FindById200ResponseMovieResultsInner(
                adult = False,
                backdrop_path = '/44immBwzhDVyjn87b3x3l9mlhAD.jpg',
                id = 934433,
                title = 'Scream VI',
                original_language = 'en',
                original_title = 'Scream VI',
                overview = 'Following the latest Ghostface killings, the four survivors leave Woodsboro behind and start a fresh chapter.',
                poster_path = '/wDWwtvkRRlgTiUr6TyLSMX8FCuZ.jpg',
                media_type = 'movie',
                genre_ids = [
                    27
                    ],
                popularity = 853.917,
                release_date = '2023-03-08',
                video = False,
                vote_average = 7.388,
                vote_count = 708
            )
        else:
            return FindById200ResponseMovieResultsInner(
        )
        """

    def testFindById200ResponseMovieResultsInner(self):
        """Test FindById200ResponseMovieResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
