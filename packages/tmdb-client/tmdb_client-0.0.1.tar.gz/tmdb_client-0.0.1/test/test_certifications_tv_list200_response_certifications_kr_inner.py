# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tmdb_client.models.certifications_tv_list200_response_certifications_kr_inner import CertificationsTvList200ResponseCertificationsKRInner

class TestCertificationsTvList200ResponseCertificationsKRInner(unittest.TestCase):
    """CertificationsTvList200ResponseCertificationsKRInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CertificationsTvList200ResponseCertificationsKRInner:
        """Test CertificationsTvList200ResponseCertificationsKRInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CertificationsTvList200ResponseCertificationsKRInner`
        """
        model = CertificationsTvList200ResponseCertificationsKRInner()
        if include_optional:
            return CertificationsTvList200ResponseCertificationsKRInner(
                certification = 'Exempt',
                meaning = 'This rating is only for knowledge based game shows; lifestyle shows; documentary shows; news; current topic discussion shows; education/culture shows; sports that excludes MMA or other violent sports; and other programs that Korea Communications Standards Commission recognizes.',
                order = 1
            )
        else:
            return CertificationsTvList200ResponseCertificationsKRInner(
        )
        """

    def testCertificationsTvList200ResponseCertificationsKRInner(self):
        """Test CertificationsTvList200ResponseCertificationsKRInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
