# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tmdb_client.models.tv_season_watch_providers200_response_results_ae import TvSeasonWatchProviders200ResponseResultsAE

class TestTvSeasonWatchProviders200ResponseResultsAE(unittest.TestCase):
    """TvSeasonWatchProviders200ResponseResultsAE unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TvSeasonWatchProviders200ResponseResultsAE:
        """Test TvSeasonWatchProviders200ResponseResultsAE
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TvSeasonWatchProviders200ResponseResultsAE`
        """
        model = TvSeasonWatchProviders200ResponseResultsAE()
        if include_optional:
            return TvSeasonWatchProviders200ResponseResultsAE(
                link = 'https://www.themoviedb.org/tv/1399-game-of-thrones/season/1/watch?locale=AE',
                flatrate = [
                    tmdb_client.models.tv_series_watch_providers_200_response_results_ae_flatrate_inner.tv_series_watch_providers_200_response_results_AE_flatrate_inner(
                        logo_path = '/xEPXbwbfABzPrUTWbgtDFH1NOa.jpg', 
                        provider_id = 629, 
                        provider_name = 'OSN', 
                        display_priority = 11, )
                    ]
            )
        else:
            return TvSeasonWatchProviders200ResponseResultsAE(
        )
        """

    def testTvSeasonWatchProviders200ResponseResultsAE(self):
        """Test TvSeasonWatchProviders200ResponseResultsAE"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
