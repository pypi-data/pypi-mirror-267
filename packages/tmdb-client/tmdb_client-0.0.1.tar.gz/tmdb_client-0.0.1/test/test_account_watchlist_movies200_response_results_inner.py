# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tmdb_client.models.account_watchlist_movies200_response_results_inner import AccountWatchlistMovies200ResponseResultsInner

class TestAccountWatchlistMovies200ResponseResultsInner(unittest.TestCase):
    """AccountWatchlistMovies200ResponseResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountWatchlistMovies200ResponseResultsInner:
        """Test AccountWatchlistMovies200ResponseResultsInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountWatchlistMovies200ResponseResultsInner`
        """
        model = AccountWatchlistMovies200ResponseResultsInner()
        if include_optional:
            return AccountWatchlistMovies200ResponseResultsInner(
                adult = False,
                backdrop_path = '/rgNzvSagnlc32TuMEBa529QFIig.jpg',
                genre_ids = [
                    878
                    ],
                id = 76726,
                original_language = 'en',
                original_title = 'Chronicle',
                overview = 'Three high school students make an incredible discovery, leading to their developing uncanny powers beyond their understanding. As they learn to control their abilities and use them to their advantage, their lives start to spin out of control, and their darker sides begin to take over.',
                popularity = 37.148,
                poster_path = '/xENglsVIIWEEhhB5lgpy33tGcKI.jpg',
                release_date = '2012-02-01',
                title = 'Chronicle',
                video = False,
                vote_average = 6.822,
                vote_count = 4741
            )
        else:
            return AccountWatchlistMovies200ResponseResultsInner(
        )
        """

    def testAccountWatchlistMovies200ResponseResultsInner(self):
        """Test AccountWatchlistMovies200ResponseResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
