# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tmdb_client.models.account_details200_response import AccountDetails200Response

class TestAccountDetails200Response(unittest.TestCase):
    """AccountDetails200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountDetails200Response:
        """Test AccountDetails200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountDetails200Response`
        """
        model = AccountDetails200Response()
        if include_optional:
            return AccountDetails200Response(
                avatar = tmdb_client.models.account_details_200_response_avatar.account_details_200_response_avatar(
                    gravatar = tmdb_client.models.account_details_200_response_avatar_gravatar.account_details_200_response_avatar_gravatar(
                        hash = 'c9e9fc152ee756a900db85757c29815d', ), 
                    tmdb = tmdb_client.models.account_details_200_response_avatar_tmdb.account_details_200_response_avatar_tmdb(
                        avatar_path = '/xy44UvpbTgzs9kWmp4C3fEaCl5h.png', ), ),
                id = 548,
                iso_639_1 = 'en',
                iso_3166_1 = 'CA',
                name = 'Travis Bell',
                include_adult = False,
                username = 'travisbell'
            )
        else:
            return AccountDetails200Response(
        )
        """

    def testAccountDetails200Response(self):
        """Test AccountDetails200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
