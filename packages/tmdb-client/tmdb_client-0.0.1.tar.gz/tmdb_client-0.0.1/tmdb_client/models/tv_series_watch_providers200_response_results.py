# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, List, Optional
from tmdb_client.models.tv_series_watch_providers200_response_results_ae import TvSeriesWatchProviders200ResponseResultsAE
from tmdb_client.models.tv_series_watch_providers200_response_results_ar import TvSeriesWatchProviders200ResponseResultsAR
from tmdb_client.models.tv_series_watch_providers200_response_results_at import TvSeriesWatchProviders200ResponseResultsAT
from tmdb_client.models.tv_series_watch_providers200_response_results_au import TvSeriesWatchProviders200ResponseResultsAU
from tmdb_client.models.tv_series_watch_providers200_response_results_ba import TvSeriesWatchProviders200ResponseResultsBA
from tmdb_client.models.tv_series_watch_providers200_response_results_bb import TvSeriesWatchProviders200ResponseResultsBB
from tmdb_client.models.tv_series_watch_providers200_response_results_be import TvSeriesWatchProviders200ResponseResultsBE
from tmdb_client.models.tv_series_watch_providers200_response_results_bg import TvSeriesWatchProviders200ResponseResultsBG
from tmdb_client.models.tv_series_watch_providers200_response_results_bo import TvSeriesWatchProviders200ResponseResultsBO
from tmdb_client.models.tv_series_watch_providers200_response_results_br import TvSeriesWatchProviders200ResponseResultsBR
from tmdb_client.models.tv_series_watch_providers200_response_results_bs import TvSeriesWatchProviders200ResponseResultsBS
from tmdb_client.models.tv_series_watch_providers200_response_results_ca import TvSeriesWatchProviders200ResponseResultsCA
from tmdb_client.models.tv_series_watch_providers200_response_results_ch import TvSeriesWatchProviders200ResponseResultsCH
from tmdb_client.models.tv_series_watch_providers200_response_results_ci import TvSeriesWatchProviders200ResponseResultsCI
from tmdb_client.models.tv_series_watch_providers200_response_results_cl import TvSeriesWatchProviders200ResponseResultsCL
from tmdb_client.models.tv_series_watch_providers200_response_results_co import TvSeriesWatchProviders200ResponseResultsCO
from tmdb_client.models.tv_series_watch_providers200_response_results_cr import TvSeriesWatchProviders200ResponseResultsCR
from tmdb_client.models.tv_series_watch_providers200_response_results_cz import TvSeriesWatchProviders200ResponseResultsCZ
from tmdb_client.models.tv_series_watch_providers200_response_results_de import TvSeriesWatchProviders200ResponseResultsDE
from tmdb_client.models.tv_series_watch_providers200_response_results_dk import TvSeriesWatchProviders200ResponseResultsDK
from tmdb_client.models.tv_series_watch_providers200_response_results_do import TvSeriesWatchProviders200ResponseResultsDO
from tmdb_client.models.tv_series_watch_providers200_response_results_dz import TvSeriesWatchProviders200ResponseResultsDZ
from tmdb_client.models.tv_series_watch_providers200_response_results_ec import TvSeriesWatchProviders200ResponseResultsEC
from tmdb_client.models.tv_series_watch_providers200_response_results_eg import TvSeriesWatchProviders200ResponseResultsEG
from tmdb_client.models.tv_series_watch_providers200_response_results_es import TvSeriesWatchProviders200ResponseResultsES
from tmdb_client.models.tv_series_watch_providers200_response_results_fi import TvSeriesWatchProviders200ResponseResultsFI
from tmdb_client.models.tv_series_watch_providers200_response_results_fr import TvSeriesWatchProviders200ResponseResultsFR
from tmdb_client.models.tv_series_watch_providers200_response_results_gb import TvSeriesWatchProviders200ResponseResultsGB
from tmdb_client.models.tv_series_watch_providers200_response_results_gf import TvSeriesWatchProviders200ResponseResultsGF
from tmdb_client.models.tv_series_watch_providers200_response_results_gh import TvSeriesWatchProviders200ResponseResultsGH
from tmdb_client.models.tv_series_watch_providers200_response_results_gq import TvSeriesWatchProviders200ResponseResultsGQ
from tmdb_client.models.tv_series_watch_providers200_response_results_gt import TvSeriesWatchProviders200ResponseResultsGT
from tmdb_client.models.tv_series_watch_providers200_response_results_hk import TvSeriesWatchProviders200ResponseResultsHK
from tmdb_client.models.tv_series_watch_providers200_response_results_hn import TvSeriesWatchProviders200ResponseResultsHN
from tmdb_client.models.tv_series_watch_providers200_response_results_hr import TvSeriesWatchProviders200ResponseResultsHR
from tmdb_client.models.tv_series_watch_providers200_response_results_hu import TvSeriesWatchProviders200ResponseResultsHU
from tmdb_client.models.tv_series_watch_providers200_response_results_id import TvSeriesWatchProviders200ResponseResultsID
from tmdb_client.models.tv_series_watch_providers200_response_results_ie import TvSeriesWatchProviders200ResponseResultsIE
from tmdb_client.models.tv_series_watch_providers200_response_results_il import TvSeriesWatchProviders200ResponseResultsIL
from tmdb_client.models.tv_series_watch_providers200_response_results_iq import TvSeriesWatchProviders200ResponseResultsIQ
from tmdb_client.models.tv_series_watch_providers200_response_results_it import TvSeriesWatchProviders200ResponseResultsIT
from tmdb_client.models.tv_series_watch_providers200_response_results_jm import TvSeriesWatchProviders200ResponseResultsJM
from tmdb_client.models.tv_series_watch_providers200_response_results_jp import TvSeriesWatchProviders200ResponseResultsJP
from tmdb_client.models.tv_series_watch_providers200_response_results_ke import TvSeriesWatchProviders200ResponseResultsKE
from tmdb_client.models.tv_series_watch_providers200_response_results_kr import TvSeriesWatchProviders200ResponseResultsKR
from tmdb_client.models.tv_series_watch_providers200_response_results_lb import TvSeriesWatchProviders200ResponseResultsLB
from tmdb_client.models.tv_series_watch_providers200_response_results_lt import TvSeriesWatchProviders200ResponseResultsLT
from tmdb_client.models.tv_series_watch_providers200_response_results_ly import TvSeriesWatchProviders200ResponseResultsLY
from tmdb_client.models.tv_series_watch_providers200_response_results_md import TvSeriesWatchProviders200ResponseResultsMD
from tmdb_client.models.tv_series_watch_providers200_response_results_mk import TvSeriesWatchProviders200ResponseResultsMK
from tmdb_client.models.tv_series_watch_providers200_response_results_mu import TvSeriesWatchProviders200ResponseResultsMU
from tmdb_client.models.tv_series_watch_providers200_response_results_mx import TvSeriesWatchProviders200ResponseResultsMX
from tmdb_client.models.tv_series_watch_providers200_response_results_my import TvSeriesWatchProviders200ResponseResultsMY
from tmdb_client.models.tv_series_watch_providers200_response_results_mz import TvSeriesWatchProviders200ResponseResultsMZ
from tmdb_client.models.tv_series_watch_providers200_response_results_ne import TvSeriesWatchProviders200ResponseResultsNE
from tmdb_client.models.tv_series_watch_providers200_response_results_ng import TvSeriesWatchProviders200ResponseResultsNG
from tmdb_client.models.tv_series_watch_providers200_response_results_nl import TvSeriesWatchProviders200ResponseResultsNL
from tmdb_client.models.tv_series_watch_providers200_response_results_no import TvSeriesWatchProviders200ResponseResultsNO
from tmdb_client.models.tv_series_watch_providers200_response_results_nz import TvSeriesWatchProviders200ResponseResultsNZ
from tmdb_client.models.tv_series_watch_providers200_response_results_pa import TvSeriesWatchProviders200ResponseResultsPA
from tmdb_client.models.tv_series_watch_providers200_response_results_pe import TvSeriesWatchProviders200ResponseResultsPE
from tmdb_client.models.tv_series_watch_providers200_response_results_ph import TvSeriesWatchProviders200ResponseResultsPH
from tmdb_client.models.tv_series_watch_providers200_response_results_pl import TvSeriesWatchProviders200ResponseResultsPL
from tmdb_client.models.tv_series_watch_providers200_response_results_ps import TvSeriesWatchProviders200ResponseResultsPS
from tmdb_client.models.tv_series_watch_providers200_response_results_pt import TvSeriesWatchProviders200ResponseResultsPT
from tmdb_client.models.tv_series_watch_providers200_response_results_py import TvSeriesWatchProviders200ResponseResultsPY
from tmdb_client.models.tv_series_watch_providers200_response_results_ro import TvSeriesWatchProviders200ResponseResultsRO
from tmdb_client.models.tv_series_watch_providers200_response_results_rs import TvSeriesWatchProviders200ResponseResultsRS
from tmdb_client.models.tv_series_watch_providers200_response_results_ru import TvSeriesWatchProviders200ResponseResultsRU
from tmdb_client.models.tv_series_watch_providers200_response_results_sa import TvSeriesWatchProviders200ResponseResultsSA
from tmdb_client.models.tv_series_watch_providers200_response_results_sc import TvSeriesWatchProviders200ResponseResultsSC
from tmdb_client.models.tv_series_watch_providers200_response_results_se import TvSeriesWatchProviders200ResponseResultsSE
from tmdb_client.models.tv_series_watch_providers200_response_results_sg import TvSeriesWatchProviders200ResponseResultsSG
from tmdb_client.models.tv_series_watch_providers200_response_results_si import TvSeriesWatchProviders200ResponseResultsSI
from tmdb_client.models.tv_series_watch_providers200_response_results_sk import TvSeriesWatchProviders200ResponseResultsSK
from tmdb_client.models.tv_series_watch_providers200_response_results_sn import TvSeriesWatchProviders200ResponseResultsSN
from tmdb_client.models.tv_series_watch_providers200_response_results_sv import TvSeriesWatchProviders200ResponseResultsSV
from tmdb_client.models.tv_series_watch_providers200_response_results_th import TvSeriesWatchProviders200ResponseResultsTH
from tmdb_client.models.tv_series_watch_providers200_response_results_tr import TvSeriesWatchProviders200ResponseResultsTR
from tmdb_client.models.tv_series_watch_providers200_response_results_tt import TvSeriesWatchProviders200ResponseResultsTT
from tmdb_client.models.tv_series_watch_providers200_response_results_tw import TvSeriesWatchProviders200ResponseResultsTW
from tmdb_client.models.tv_series_watch_providers200_response_results_tz import TvSeriesWatchProviders200ResponseResultsTZ
from tmdb_client.models.tv_series_watch_providers200_response_results_ug import TvSeriesWatchProviders200ResponseResultsUG
from tmdb_client.models.tv_series_watch_providers200_response_results_us import TvSeriesWatchProviders200ResponseResultsUS
from tmdb_client.models.tv_series_watch_providers200_response_results_uy import TvSeriesWatchProviders200ResponseResultsUY
from tmdb_client.models.tv_series_watch_providers200_response_results_ve import TvSeriesWatchProviders200ResponseResultsVE
from tmdb_client.models.tv_series_watch_providers200_response_results_za import TvSeriesWatchProviders200ResponseResultsZA
from tmdb_client.models.tv_series_watch_providers200_response_results_zm import TvSeriesWatchProviders200ResponseResultsZM
from typing import Optional, Set
from typing_extensions import Self

class TvSeriesWatchProviders200ResponseResults(BaseModel):
    """
    TvSeriesWatchProviders200ResponseResults
    """ # noqa: E501
    ae: Optional[TvSeriesWatchProviders200ResponseResultsAE] = Field(default=None, alias="AE")
    ar: Optional[TvSeriesWatchProviders200ResponseResultsAR] = Field(default=None, alias="AR")
    at: Optional[TvSeriesWatchProviders200ResponseResultsAT] = Field(default=None, alias="AT")
    au: Optional[TvSeriesWatchProviders200ResponseResultsAU] = Field(default=None, alias="AU")
    ba: Optional[TvSeriesWatchProviders200ResponseResultsBA] = Field(default=None, alias="BA")
    bb: Optional[TvSeriesWatchProviders200ResponseResultsBB] = Field(default=None, alias="BB")
    be: Optional[TvSeriesWatchProviders200ResponseResultsBE] = Field(default=None, alias="BE")
    bg: Optional[TvSeriesWatchProviders200ResponseResultsBG] = Field(default=None, alias="BG")
    bo: Optional[TvSeriesWatchProviders200ResponseResultsBO] = Field(default=None, alias="BO")
    br: Optional[TvSeriesWatchProviders200ResponseResultsBR] = Field(default=None, alias="BR")
    bs: Optional[TvSeriesWatchProviders200ResponseResultsBS] = Field(default=None, alias="BS")
    ca: Optional[TvSeriesWatchProviders200ResponseResultsCA] = Field(default=None, alias="CA")
    ch: Optional[TvSeriesWatchProviders200ResponseResultsCH] = Field(default=None, alias="CH")
    ci: Optional[TvSeriesWatchProviders200ResponseResultsCI] = Field(default=None, alias="CI")
    cl: Optional[TvSeriesWatchProviders200ResponseResultsCL] = Field(default=None, alias="CL")
    co: Optional[TvSeriesWatchProviders200ResponseResultsCO] = Field(default=None, alias="CO")
    cr: Optional[TvSeriesWatchProviders200ResponseResultsCR] = Field(default=None, alias="CR")
    cz: Optional[TvSeriesWatchProviders200ResponseResultsCZ] = Field(default=None, alias="CZ")
    de: Optional[TvSeriesWatchProviders200ResponseResultsDE] = Field(default=None, alias="DE")
    dk: Optional[TvSeriesWatchProviders200ResponseResultsDK] = Field(default=None, alias="DK")
    do: Optional[TvSeriesWatchProviders200ResponseResultsDO] = Field(default=None, alias="DO")
    dz: Optional[TvSeriesWatchProviders200ResponseResultsDZ] = Field(default=None, alias="DZ")
    ec: Optional[TvSeriesWatchProviders200ResponseResultsEC] = Field(default=None, alias="EC")
    eg: Optional[TvSeriesWatchProviders200ResponseResultsEG] = Field(default=None, alias="EG")
    es: Optional[TvSeriesWatchProviders200ResponseResultsES] = Field(default=None, alias="ES")
    fi: Optional[TvSeriesWatchProviders200ResponseResultsFI] = Field(default=None, alias="FI")
    fr: Optional[TvSeriesWatchProviders200ResponseResultsFR] = Field(default=None, alias="FR")
    gb: Optional[TvSeriesWatchProviders200ResponseResultsGB] = Field(default=None, alias="GB")
    gf: Optional[TvSeriesWatchProviders200ResponseResultsGF] = Field(default=None, alias="GF")
    gh: Optional[TvSeriesWatchProviders200ResponseResultsGH] = Field(default=None, alias="GH")
    gq: Optional[TvSeriesWatchProviders200ResponseResultsGQ] = Field(default=None, alias="GQ")
    gt: Optional[TvSeriesWatchProviders200ResponseResultsGT] = Field(default=None, alias="GT")
    hk: Optional[TvSeriesWatchProviders200ResponseResultsHK] = Field(default=None, alias="HK")
    hn: Optional[TvSeriesWatchProviders200ResponseResultsHN] = Field(default=None, alias="HN")
    hr: Optional[TvSeriesWatchProviders200ResponseResultsHR] = Field(default=None, alias="HR")
    hu: Optional[TvSeriesWatchProviders200ResponseResultsHU] = Field(default=None, alias="HU")
    id: Optional[TvSeriesWatchProviders200ResponseResultsID] = Field(default=None, alias="ID")
    ie: Optional[TvSeriesWatchProviders200ResponseResultsIE] = Field(default=None, alias="IE")
    il: Optional[TvSeriesWatchProviders200ResponseResultsIL] = Field(default=None, alias="IL")
    iq: Optional[TvSeriesWatchProviders200ResponseResultsIQ] = Field(default=None, alias="IQ")
    it: Optional[TvSeriesWatchProviders200ResponseResultsIT] = Field(default=None, alias="IT")
    jm: Optional[TvSeriesWatchProviders200ResponseResultsJM] = Field(default=None, alias="JM")
    jp: Optional[TvSeriesWatchProviders200ResponseResultsJP] = Field(default=None, alias="JP")
    ke: Optional[TvSeriesWatchProviders200ResponseResultsKE] = Field(default=None, alias="KE")
    kr: Optional[TvSeriesWatchProviders200ResponseResultsKR] = Field(default=None, alias="KR")
    lb: Optional[TvSeriesWatchProviders200ResponseResultsLB] = Field(default=None, alias="LB")
    lt: Optional[TvSeriesWatchProviders200ResponseResultsLT] = Field(default=None, alias="LT")
    ly: Optional[TvSeriesWatchProviders200ResponseResultsLY] = Field(default=None, alias="LY")
    md: Optional[TvSeriesWatchProviders200ResponseResultsMD] = Field(default=None, alias="MD")
    mk: Optional[TvSeriesWatchProviders200ResponseResultsMK] = Field(default=None, alias="MK")
    mu: Optional[TvSeriesWatchProviders200ResponseResultsMU] = Field(default=None, alias="MU")
    mx: Optional[TvSeriesWatchProviders200ResponseResultsMX] = Field(default=None, alias="MX")
    my: Optional[TvSeriesWatchProviders200ResponseResultsMY] = Field(default=None, alias="MY")
    mz: Optional[TvSeriesWatchProviders200ResponseResultsMZ] = Field(default=None, alias="MZ")
    ne: Optional[TvSeriesWatchProviders200ResponseResultsNE] = Field(default=None, alias="NE")
    ng: Optional[TvSeriesWatchProviders200ResponseResultsNG] = Field(default=None, alias="NG")
    nl: Optional[TvSeriesWatchProviders200ResponseResultsNL] = Field(default=None, alias="NL")
    no: Optional[TvSeriesWatchProviders200ResponseResultsNO] = Field(default=None, alias="NO")
    nz: Optional[TvSeriesWatchProviders200ResponseResultsNZ] = Field(default=None, alias="NZ")
    pa: Optional[TvSeriesWatchProviders200ResponseResultsPA] = Field(default=None, alias="PA")
    pe: Optional[TvSeriesWatchProviders200ResponseResultsPE] = Field(default=None, alias="PE")
    ph: Optional[TvSeriesWatchProviders200ResponseResultsPH] = Field(default=None, alias="PH")
    pl: Optional[TvSeriesWatchProviders200ResponseResultsPL] = Field(default=None, alias="PL")
    ps: Optional[TvSeriesWatchProviders200ResponseResultsPS] = Field(default=None, alias="PS")
    pt: Optional[TvSeriesWatchProviders200ResponseResultsPT] = Field(default=None, alias="PT")
    py: Optional[TvSeriesWatchProviders200ResponseResultsPY] = Field(default=None, alias="PY")
    ro: Optional[TvSeriesWatchProviders200ResponseResultsRO] = Field(default=None, alias="RO")
    rs: Optional[TvSeriesWatchProviders200ResponseResultsRS] = Field(default=None, alias="RS")
    ru: Optional[TvSeriesWatchProviders200ResponseResultsRU] = Field(default=None, alias="RU")
    sa: Optional[TvSeriesWatchProviders200ResponseResultsSA] = Field(default=None, alias="SA")
    sc: Optional[TvSeriesWatchProviders200ResponseResultsSC] = Field(default=None, alias="SC")
    se: Optional[TvSeriesWatchProviders200ResponseResultsSE] = Field(default=None, alias="SE")
    sg: Optional[TvSeriesWatchProviders200ResponseResultsSG] = Field(default=None, alias="SG")
    si: Optional[TvSeriesWatchProviders200ResponseResultsSI] = Field(default=None, alias="SI")
    sk: Optional[TvSeriesWatchProviders200ResponseResultsSK] = Field(default=None, alias="SK")
    sn: Optional[TvSeriesWatchProviders200ResponseResultsSN] = Field(default=None, alias="SN")
    sv: Optional[TvSeriesWatchProviders200ResponseResultsSV] = Field(default=None, alias="SV")
    th: Optional[TvSeriesWatchProviders200ResponseResultsTH] = Field(default=None, alias="TH")
    tr: Optional[TvSeriesWatchProviders200ResponseResultsTR] = Field(default=None, alias="TR")
    tt: Optional[TvSeriesWatchProviders200ResponseResultsTT] = Field(default=None, alias="TT")
    tw: Optional[TvSeriesWatchProviders200ResponseResultsTW] = Field(default=None, alias="TW")
    tz: Optional[TvSeriesWatchProviders200ResponseResultsTZ] = Field(default=None, alias="TZ")
    ug: Optional[TvSeriesWatchProviders200ResponseResultsUG] = Field(default=None, alias="UG")
    us: Optional[TvSeriesWatchProviders200ResponseResultsUS] = Field(default=None, alias="US")
    uy: Optional[TvSeriesWatchProviders200ResponseResultsUY] = Field(default=None, alias="UY")
    ve: Optional[TvSeriesWatchProviders200ResponseResultsVE] = Field(default=None, alias="VE")
    za: Optional[TvSeriesWatchProviders200ResponseResultsZA] = Field(default=None, alias="ZA")
    zm: Optional[TvSeriesWatchProviders200ResponseResultsZM] = Field(default=None, alias="ZM")
    __properties: ClassVar[List[str

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of TvSeriesWatchProviders200ResponseResults from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of ae
        if self.ae:
            _dict['AE'] = self.ae.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ar
        if self.ar:
            _dict['AR'] = self.ar.to_dict()
        # override the default output from pydantic by calling `to_dict()` of at
        if self.at:
            _dict['AT'] = self.at.to_dict()
        # override the default output from pydantic by calling `to_dict()` of au
        if self.au:
            _dict['AU'] = self.au.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ba
        if self.ba:
            _dict['BA'] = self.ba.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bb
        if self.bb:
            _dict['BB'] = self.bb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of be
        if self.be:
            _dict['BE'] = self.be.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bg
        if self.bg:
            _dict['BG'] = self.bg.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bo
        if self.bo:
            _dict['BO'] = self.bo.to_dict()
        # override the default output from pydantic by calling `to_dict()` of br
        if self.br:
            _dict['BR'] = self.br.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bs
        if self.bs:
            _dict['BS'] = self.bs.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ca
        if self.ca:
            _dict['CA'] = self.ca.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ch
        if self.ch:
            _dict['CH'] = self.ch.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ci
        if self.ci:
            _dict['CI'] = self.ci.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cl
        if self.cl:
            _dict['CL'] = self.cl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of co
        if self.co:
            _dict['CO'] = self.co.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cr
        if self.cr:
            _dict['CR'] = self.cr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cz
        if self.cz:
            _dict['CZ'] = self.cz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of de
        if self.de:
            _dict['DE'] = self.de.to_dict()
        # override the default output from pydantic by calling `to_dict()` of dk
        if self.dk:
            _dict['DK'] = self.dk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of do
        if self.do:
            _dict['DO'] = self.do.to_dict()
        # override the default output from pydantic by calling `to_dict()` of dz
        if self.dz:
            _dict['DZ'] = self.dz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ec
        if self.ec:
            _dict['EC'] = self.ec.to_dict()
        # override the default output from pydantic by calling `to_dict()` of eg
        if self.eg:
            _dict['EG'] = self.eg.to_dict()
        # override the default output from pydantic by calling `to_dict()` of es
        if self.es:
            _dict['ES'] = self.es.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fi
        if self.fi:
            _dict['FI'] = self.fi.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fr
        if self.fr:
            _dict['FR'] = self.fr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gb
        if self.gb:
            _dict['GB'] = self.gb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gf
        if self.gf:
            _dict['GF'] = self.gf.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gh
        if self.gh:
            _dict['GH'] = self.gh.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gq
        if self.gq:
            _dict['GQ'] = self.gq.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gt
        if self.gt:
            _dict['GT'] = self.gt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hk
        if self.hk:
            _dict['HK'] = self.hk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hn
        if self.hn:
            _dict['HN'] = self.hn.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hr
        if self.hr:
            _dict['HR'] = self.hr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hu
        if self.hu:
            _dict['HU'] = self.hu.to_dict()
        # override the default output from pydantic by calling `to_dict()` of id
        if self.id:
            _dict['ID'] = self.id.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ie
        if self.ie:
            _dict['IE'] = self.ie.to_dict()
        # override the default output from pydantic by calling `to_dict()` of il
        if self.il:
            _dict['IL'] = self.il.to_dict()
        # override the default output from pydantic by calling `to_dict()` of iq
        if self.iq:
            _dict['IQ'] = self.iq.to_dict()
        # override the default output from pydantic by calling `to_dict()` of it
        if self.it:
            _dict['IT'] = self.it.to_dict()
        # override the default output from pydantic by calling `to_dict()` of jm
        if self.jm:
            _dict['JM'] = self.jm.to_dict()
        # override the default output from pydantic by calling `to_dict()` of jp
        if self.jp:
            _dict['JP'] = self.jp.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ke
        if self.ke:
            _dict['KE'] = self.ke.to_dict()
        # override the default output from pydantic by calling `to_dict()` of kr
        if self.kr:
            _dict['KR'] = self.kr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of lb
        if self.lb:
            _dict['LB'] = self.lb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of lt
        if self.lt:
            _dict['LT'] = self.lt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ly
        if self.ly:
            _dict['LY'] = self.ly.to_dict()
        # override the default output from pydantic by calling `to_dict()` of md
        if self.md:
            _dict['MD'] = self.md.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mk
        if self.mk:
            _dict['MK'] = self.mk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mu
        if self.mu:
            _dict['MU'] = self.mu.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mx
        if self.mx:
            _dict['MX'] = self.mx.to_dict()
        # override the default output from pydantic by calling `to_dict()` of my
        if self.my:
            _dict['MY'] = self.my.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mz
        if self.mz:
            _dict['MZ'] = self.mz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ne
        if self.ne:
            _dict['NE'] = self.ne.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ng
        if self.ng:
            _dict['NG'] = self.ng.to_dict()
        # override the default output from pydantic by calling `to_dict()` of nl
        if self.nl:
            _dict['NL'] = self.nl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of no
        if self.no:
            _dict['NO'] = self.no.to_dict()
        # override the default output from pydantic by calling `to_dict()` of nz
        if self.nz:
            _dict['NZ'] = self.nz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pa
        if self.pa:
            _dict['PA'] = self.pa.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pe
        if self.pe:
            _dict['PE'] = self.pe.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ph
        if self.ph:
            _dict['PH'] = self.ph.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pl
        if self.pl:
            _dict['PL'] = self.pl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ps
        if self.ps:
            _dict['PS'] = self.ps.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pt
        if self.pt:
            _dict['PT'] = self.pt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of py
        if self.py:
            _dict['PY'] = self.py.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ro
        if self.ro:
            _dict['RO'] = self.ro.to_dict()
        # override the default output from pydantic by calling `to_dict()` of rs
        if self.rs:
            _dict['RS'] = self.rs.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ru
        if self.ru:
            _dict['RU'] = self.ru.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sa
        if self.sa:
            _dict['SA'] = self.sa.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sc
        if self.sc:
            _dict['SC'] = self.sc.to_dict()
        # override the default output from pydantic by calling `to_dict()` of se
        if self.se:
            _dict['SE'] = self.se.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sg
        if self.sg:
            _dict['SG'] = self.sg.to_dict()
        # override the default output from pydantic by calling `to_dict()` of si
        if self.si:
            _dict['SI'] = self.si.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sk
        if self.sk:
            _dict['SK'] = self.sk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sn
        if self.sn:
            _dict['SN'] = self.sn.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sv
        if self.sv:
            _dict['SV'] = self.sv.to_dict()
        # override the default output from pydantic by calling `to_dict()` of th
        if self.th:
            _dict['TH'] = self.th.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tr
        if self.tr:
            _dict['TR'] = self.tr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tt
        if self.tt:
            _dict['TT'] = self.tt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tw
        if self.tw:
            _dict['TW'] = self.tw.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tz
        if self.tz:
            _dict['TZ'] = self.tz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ug
        if self.ug:
            _dict['UG'] = self.ug.to_dict()
        # override the default output from pydantic by calling `to_dict()` of us
        if self.us:
            _dict['US'] = self.us.to_dict()
        # override the default output from pydantic by calling `to_dict()` of uy
        if self.uy:
            _dict['UY'] = self.uy.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ve
        if self.ve:
            _dict['VE'] = self.ve.to_dict()
        # override the default output from pydantic by calling `to_dict()` of za
        if self.za:
            _dict['ZA'] = self.za.to_dict()
        # override the default output from pydantic by calling `to_dict()` of zm
        if self.zm:
            _dict['ZM'] = self.zm.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of TvSeriesWatchProviders200ResponseResults from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "AE": TvSeriesWatchProviders200ResponseResultsAE.from_dict(obj["AE"]) if obj.get("AE") is not None else None,
            "AR": TvSeriesWatchProviders200ResponseResultsAR.from_dict(obj["AR"]) if obj.get("AR") is not None else None,
            "AT": TvSeriesWatchProviders200ResponseResultsAT.from_dict(obj["AT"]) if obj.get("AT") is not None else None,
            "AU": TvSeriesWatchProviders200ResponseResultsAU.from_dict(obj["AU"]) if obj.get("AU") is not None else None,
            "BA": TvSeriesWatchProviders200ResponseResultsBA.from_dict(obj["BA"]) if obj.get("BA") is not None else None,
            "BB": TvSeriesWatchProviders200ResponseResultsBB.from_dict(obj["BB"]) if obj.get("BB") is not None else None,
            "BE": TvSeriesWatchProviders200ResponseResultsBE.from_dict(obj["BE"]) if obj.get("BE") is not None else None,
            "BG": TvSeriesWatchProviders200ResponseResultsBG.from_dict(obj["BG"]) if obj.get("BG") is not None else None,
            "BO": TvSeriesWatchProviders200ResponseResultsBO.from_dict(obj["BO"]) if obj.get("BO") is not None else None,
            "BR": TvSeriesWatchProviders200ResponseResultsBR.from_dict(obj["BR"]) if obj.get("BR") is not None else None,
            "BS": TvSeriesWatchProviders200ResponseResultsBS.from_dict(obj["BS"]) if obj.get("BS") is not None else None,
            "CA": TvSeriesWatchProviders200ResponseResultsCA.from_dict(obj["CA"]) if obj.get("CA") is not None else None,
            "CH": TvSeriesWatchProviders200ResponseResultsCH.from_dict(obj["CH"]) if obj.get("CH") is not None else None,
            "CI": TvSeriesWatchProviders200ResponseResultsCI.from_dict(obj["CI"]) if obj.get("CI") is not None else None,
            "CL": TvSeriesWatchProviders200ResponseResultsCL.from_dict(obj["CL"]) if obj.get("CL") is not None else None,
            "CO": TvSeriesWatchProviders200ResponseResultsCO.from_dict(obj["CO"]) if obj.get("CO") is not None else None,
            "CR": TvSeriesWatchProviders200ResponseResultsCR.from_dict(obj["CR"]) if obj.get("CR") is not None else None,
            "CZ": TvSeriesWatchProviders200ResponseResultsCZ.from_dict(obj["CZ"]) if obj.get("CZ") is not None else None,
            "DE": TvSeriesWatchProviders200ResponseResultsDE.from_dict(obj["DE"]) if obj.get("DE") is not None else None,
            "DK": TvSeriesWatchProviders200ResponseResultsDK.from_dict(obj["DK"]) if obj.get("DK") is not None else None,
            "DO": TvSeriesWatchProviders200ResponseResultsDO.from_dict(obj["DO"]) if obj.get("DO") is not None else None,
            "DZ": TvSeriesWatchProviders200ResponseResultsDZ.from_dict(obj["DZ"]) if obj.get("DZ") is not None else None,
            "EC": TvSeriesWatchProviders200ResponseResultsEC.from_dict(obj["EC"]) if obj.get("EC") is not None else None,
            "EG": TvSeriesWatchProviders200ResponseResultsEG.from_dict(obj["EG"]) if obj.get("EG") is not None else None,
            "ES": TvSeriesWatchProviders200ResponseResultsES.from_dict(obj["ES"]) if obj.get("ES") is not None else None,
            "FI": TvSeriesWatchProviders200ResponseResultsFI.from_dict(obj["FI"]) if obj.get("FI") is not None else None,
            "FR": TvSeriesWatchProviders200ResponseResultsFR.from_dict(obj["FR"]) if obj.get("FR") is not None else None,
            "GB": TvSeriesWatchProviders200ResponseResultsGB.from_dict(obj["GB"]) if obj.get("GB") is not None else None,
            "GF": TvSeriesWatchProviders200ResponseResultsGF.from_dict(obj["GF"]) if obj.get("GF") is not None else None,
            "GH": TvSeriesWatchProviders200ResponseResultsGH.from_dict(obj["GH"]) if obj.get("GH") is not None else None,
            "GQ": TvSeriesWatchProviders200ResponseResultsGQ.from_dict(obj["GQ"]) if obj.get("GQ") is not None else None,
            "GT": TvSeriesWatchProviders200ResponseResultsGT.from_dict(obj["GT"]) if obj.get("GT") is not None else None,
            "HK": TvSeriesWatchProviders200ResponseResultsHK.from_dict(obj["HK"]) if obj.get("HK") is not None else None,
            "HN": TvSeriesWatchProviders200ResponseResultsHN.from_dict(obj["HN"]) if obj.get("HN") is not None else None,
            "HR": TvSeriesWatchProviders200ResponseResultsHR.from_dict(obj["HR"]) if obj.get("HR") is not None else None,
            "HU": TvSeriesWatchProviders200ResponseResultsHU.from_dict(obj["HU"]) if obj.get("HU") is not None else None,
            "ID": TvSeriesWatchProviders200ResponseResultsID.from_dict(obj["ID"]) if obj.get("ID") is not None else None,
            "IE": TvSeriesWatchProviders200ResponseResultsIE.from_dict(obj["IE"]) if obj.get("IE") is not None else None,
            "IL": TvSeriesWatchProviders200ResponseResultsIL.from_dict(obj["IL"]) if obj.get("IL") is not None else None,
            "IQ": TvSeriesWatchProviders200ResponseResultsIQ.from_dict(obj["IQ"]) if obj.get("IQ") is not None else None,
            "IT": TvSeriesWatchProviders200ResponseResultsIT.from_dict(obj["IT"]) if obj.get("IT") is not None else None,
            "JM": TvSeriesWatchProviders200ResponseResultsJM.from_dict(obj["JM"]) if obj.get("JM") is not None else None,
            "JP": TvSeriesWatchProviders200ResponseResultsJP.from_dict(obj["JP"]) if obj.get("JP") is not None else None,
            "KE": TvSeriesWatchProviders200ResponseResultsKE.from_dict(obj["KE"]) if obj.get("KE") is not None else None,
            "KR": TvSeriesWatchProviders200ResponseResultsKR.from_dict(obj["KR"]) if obj.get("KR") is not None else None,
            "LB": TvSeriesWatchProviders200ResponseResultsLB.from_dict(obj["LB"]) if obj.get("LB") is not None else None,
            "LT": TvSeriesWatchProviders200ResponseResultsLT.from_dict(obj["LT"]) if obj.get("LT") is not None else None,
            "LY": TvSeriesWatchProviders200ResponseResultsLY.from_dict(obj["LY"]) if obj.get("LY") is not None else None,
            "MD": TvSeriesWatchProviders200ResponseResultsMD.from_dict(obj["MD"]) if obj.get("MD") is not None else None,
            "MK": TvSeriesWatchProviders200ResponseResultsMK.from_dict(obj["MK"]) if obj.get("MK") is not None else None,
            "MU": TvSeriesWatchProviders200ResponseResultsMU.from_dict(obj["MU"]) if obj.get("MU") is not None else None,
            "MX": TvSeriesWatchProviders200ResponseResultsMX.from_dict(obj["MX"]) if obj.get("MX") is not None else None,
            "MY": TvSeriesWatchProviders200ResponseResultsMY.from_dict(obj["MY"]) if obj.get("MY") is not None else None,
            "MZ": TvSeriesWatchProviders200ResponseResultsMZ.from_dict(obj["MZ"]) if obj.get("MZ") is not None else None,
            "NE": TvSeriesWatchProviders200ResponseResultsNE.from_dict(obj["NE"]) if obj.get("NE") is not None else None,
            "NG": TvSeriesWatchProviders200ResponseResultsNG.from_dict(obj["NG"]) if obj.get("NG") is not None else None,
            "NL": TvSeriesWatchProviders200ResponseResultsNL.from_dict(obj["NL"]) if obj.get("NL") is not None else None,
            "NO": TvSeriesWatchProviders200ResponseResultsNO.from_dict(obj["NO"]) if obj.get("NO") is not None else None,
            "NZ": TvSeriesWatchProviders200ResponseResultsNZ.from_dict(obj["NZ"]) if obj.get("NZ") is not None else None,
            "PA": TvSeriesWatchProviders200ResponseResultsPA.from_dict(obj["PA"]) if obj.get("PA") is not None else None,
            "PE": TvSeriesWatchProviders200ResponseResultsPE.from_dict(obj["PE"]) if obj.get("PE") is not None else None,
            "PH": TvSeriesWatchProviders200ResponseResultsPH.from_dict(obj["PH"]) if obj.get("PH") is not None else None,
            "PL": TvSeriesWatchProviders200ResponseResultsPL.from_dict(obj["PL"]) if obj.get("PL") is not None else None,
            "PS": TvSeriesWatchProviders200ResponseResultsPS.from_dict(obj["PS"]) if obj.get("PS") is not None else None,
            "PT": TvSeriesWatchProviders200ResponseResultsPT.from_dict(obj["PT"]) if obj.get("PT") is not None else None,
            "PY": TvSeriesWatchProviders200ResponseResultsPY.from_dict(obj["PY"]) if obj.get("PY") is not None else None,
            "RO": TvSeriesWatchProviders200ResponseResultsRO.from_dict(obj["RO"]) if obj.get("RO") is not None else None,
            "RS": TvSeriesWatchProviders200ResponseResultsRS.from_dict(obj["RS"]) if obj.get("RS") is not None else None,
            "RU": TvSeriesWatchProviders200ResponseResultsRU.from_dict(obj["RU"]) if obj.get("RU") is not None else None,
            "SA": TvSeriesWatchProviders200ResponseResultsSA.from_dict(obj["SA"]) if obj.get("SA") is not None else None,
            "SC": TvSeriesWatchProviders200ResponseResultsSC.from_dict(obj["SC"]) if obj.get("SC") is not None else None,
            "SE": TvSeriesWatchProviders200ResponseResultsSE.from_dict(obj["SE"]) if obj.get("SE") is not None else None,
            "SG": TvSeriesWatchProviders200ResponseResultsSG.from_dict(obj["SG"]) if obj.get("SG") is not None else None,
            "SI": TvSeriesWatchProviders200ResponseResultsSI.from_dict(obj["SI"]) if obj.get("SI") is not None else None,
            "SK": TvSeriesWatchProviders200ResponseResultsSK.from_dict(obj["SK"]) if obj.get("SK") is not None else None,
            "SN": TvSeriesWatchProviders200ResponseResultsSN.from_dict(obj["SN"]) if obj.get("SN") is not None else None,
            "SV": TvSeriesWatchProviders200ResponseResultsSV.from_dict(obj["SV"]) if obj.get("SV") is not None else None,
            "TH": TvSeriesWatchProviders200ResponseResultsTH.from_dict(obj["TH"]) if obj.get("TH") is not None else None,
            "TR": TvSeriesWatchProviders200ResponseResultsTR.from_dict(obj["TR"]) if obj.get("TR") is not None else None,
            "TT": TvSeriesWatchProviders200ResponseResultsTT.from_dict(obj["TT"]) if obj.get("TT") is not None else None,
            "TW": TvSeriesWatchProviders200ResponseResultsTW.from_dict(obj["TW"]) if obj.get("TW") is not None else None,
            "TZ": TvSeriesWatchProviders200ResponseResultsTZ.from_dict(obj["TZ"]) if obj.get("TZ") is not None else None,
            "UG": TvSeriesWatchProviders200ResponseResultsUG.from_dict(obj["UG"]) if obj.get("UG") is not None else None,
            "US": TvSeriesWatchProviders200ResponseResultsUS.from_dict(obj["US"]) if obj.get("US") is not None else None,
            "UY": TvSeriesWatchProviders200ResponseResultsUY.from_dict(obj["UY"]) if obj.get("UY") is not None else None,
            "VE": TvSeriesWatchProviders200ResponseResultsVE.from_dict(obj["VE"]) if obj.get("VE") is not None else None,
            "ZA": TvSeriesWatchProviders200ResponseResultsZA.from_dict(obj["ZA"]) if obj.get("ZA") is not None else None,
            "ZM": TvSeriesWatchProviders200ResponseResultsZM.from_dict(obj["ZM"]) if obj.get("ZM") is not None else None
        })
        return _obj


