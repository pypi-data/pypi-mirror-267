# coding: utf-8

"""
    TMDB API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, List, Optional
from tmdb_client.models.movie_watch_providers200_response_results_ae import MovieWatchProviders200ResponseResultsAE
from tmdb_client.models.movie_watch_providers200_response_results_al import MovieWatchProviders200ResponseResultsAL
from tmdb_client.models.movie_watch_providers200_response_results_ar import MovieWatchProviders200ResponseResultsAR
from tmdb_client.models.movie_watch_providers200_response_results_at import MovieWatchProviders200ResponseResultsAT
from tmdb_client.models.movie_watch_providers200_response_results_au import MovieWatchProviders200ResponseResultsAU
from tmdb_client.models.movie_watch_providers200_response_results_ba import MovieWatchProviders200ResponseResultsBA
from tmdb_client.models.movie_watch_providers200_response_results_bb import MovieWatchProviders200ResponseResultsBB
from tmdb_client.models.movie_watch_providers200_response_results_be import MovieWatchProviders200ResponseResultsBE
from tmdb_client.models.movie_watch_providers200_response_results_bg import MovieWatchProviders200ResponseResultsBG
from tmdb_client.models.movie_watch_providers200_response_results_bh import MovieWatchProviders200ResponseResultsBH
from tmdb_client.models.movie_watch_providers200_response_results_bo import MovieWatchProviders200ResponseResultsBO
from tmdb_client.models.movie_watch_providers200_response_results_br import MovieWatchProviders200ResponseResultsBR
from tmdb_client.models.movie_watch_providers200_response_results_bs import MovieWatchProviders200ResponseResultsBS
from tmdb_client.models.movie_watch_providers200_response_results_ca import MovieWatchProviders200ResponseResultsCA
from tmdb_client.models.movie_watch_providers200_response_results_ch import MovieWatchProviders200ResponseResultsCH
from tmdb_client.models.movie_watch_providers200_response_results_cl import MovieWatchProviders200ResponseResultsCL
from tmdb_client.models.movie_watch_providers200_response_results_co import MovieWatchProviders200ResponseResultsCO
from tmdb_client.models.movie_watch_providers200_response_results_cr import MovieWatchProviders200ResponseResultsCR
from tmdb_client.models.movie_watch_providers200_response_results_cv import MovieWatchProviders200ResponseResultsCV
from tmdb_client.models.movie_watch_providers200_response_results_cz import MovieWatchProviders200ResponseResultsCZ
from tmdb_client.models.movie_watch_providers200_response_results_de import MovieWatchProviders200ResponseResultsDE
from tmdb_client.models.movie_watch_providers200_response_results_dk import MovieWatchProviders200ResponseResultsDK
from tmdb_client.models.movie_watch_providers200_response_results_do import MovieWatchProviders200ResponseResultsDO
from tmdb_client.models.movie_watch_providers200_response_results_ec import MovieWatchProviders200ResponseResultsEC
from tmdb_client.models.movie_watch_providers200_response_results_ee import MovieWatchProviders200ResponseResultsEE
from tmdb_client.models.movie_watch_providers200_response_results_eg import MovieWatchProviders200ResponseResultsEG
from tmdb_client.models.movie_watch_providers200_response_results_es import MovieWatchProviders200ResponseResultsES
from tmdb_client.models.movie_watch_providers200_response_results_fi import MovieWatchProviders200ResponseResultsFI
from tmdb_client.models.movie_watch_providers200_response_results_fj import MovieWatchProviders200ResponseResultsFJ
from tmdb_client.models.movie_watch_providers200_response_results_fr import MovieWatchProviders200ResponseResultsFR
from tmdb_client.models.movie_watch_providers200_response_results_gb import MovieWatchProviders200ResponseResultsGB
from tmdb_client.models.movie_watch_providers200_response_results_gf import MovieWatchProviders200ResponseResultsGF
from tmdb_client.models.movie_watch_providers200_response_results_gi import MovieWatchProviders200ResponseResultsGI
from tmdb_client.models.movie_watch_providers200_response_results_gr import MovieWatchProviders200ResponseResultsGR
from tmdb_client.models.movie_watch_providers200_response_results_gt import MovieWatchProviders200ResponseResultsGT
from tmdb_client.models.movie_watch_providers200_response_results_hk import MovieWatchProviders200ResponseResultsHK
from tmdb_client.models.movie_watch_providers200_response_results_hn import MovieWatchProviders200ResponseResultsHN
from tmdb_client.models.movie_watch_providers200_response_results_hr import MovieWatchProviders200ResponseResultsHR
from tmdb_client.models.movie_watch_providers200_response_results_hu import MovieWatchProviders200ResponseResultsHU
from tmdb_client.models.movie_watch_providers200_response_results_id import MovieWatchProviders200ResponseResultsID
from tmdb_client.models.movie_watch_providers200_response_results_ie import MovieWatchProviders200ResponseResultsIE
from tmdb_client.models.movie_watch_providers200_response_results_il import MovieWatchProviders200ResponseResultsIL
from tmdb_client.models.movie_watch_providers200_response_results_in import MovieWatchProviders200ResponseResultsIN
from tmdb_client.models.movie_watch_providers200_response_results_iq import MovieWatchProviders200ResponseResultsIQ
from tmdb_client.models.movie_watch_providers200_response_results_is import MovieWatchProviders200ResponseResultsIS
from tmdb_client.models.movie_watch_providers200_response_results_it import MovieWatchProviders200ResponseResultsIT
from tmdb_client.models.movie_watch_providers200_response_results_jm import MovieWatchProviders200ResponseResultsJM
from tmdb_client.models.movie_watch_providers200_response_results_jo import MovieWatchProviders200ResponseResultsJO
from tmdb_client.models.movie_watch_providers200_response_results_jp import MovieWatchProviders200ResponseResultsJP
from tmdb_client.models.movie_watch_providers200_response_results_kr import MovieWatchProviders200ResponseResultsKR
from tmdb_client.models.movie_watch_providers200_response_results_kw import MovieWatchProviders200ResponseResultsKW
from tmdb_client.models.movie_watch_providers200_response_results_lb import MovieWatchProviders200ResponseResultsLB
from tmdb_client.models.movie_watch_providers200_response_results_li import MovieWatchProviders200ResponseResultsLI
from tmdb_client.models.movie_watch_providers200_response_results_lt import MovieWatchProviders200ResponseResultsLT
from tmdb_client.models.movie_watch_providers200_response_results_lv import MovieWatchProviders200ResponseResultsLV
from tmdb_client.models.movie_watch_providers200_response_results_md import MovieWatchProviders200ResponseResultsMD
from tmdb_client.models.movie_watch_providers200_response_results_mk import MovieWatchProviders200ResponseResultsMK
from tmdb_client.models.movie_watch_providers200_response_results_mt import MovieWatchProviders200ResponseResultsMT
from tmdb_client.models.movie_watch_providers200_response_results_mu import MovieWatchProviders200ResponseResultsMU
from tmdb_client.models.movie_watch_providers200_response_results_mx import MovieWatchProviders200ResponseResultsMX
from tmdb_client.models.movie_watch_providers200_response_results_my import MovieWatchProviders200ResponseResultsMY
from tmdb_client.models.movie_watch_providers200_response_results_mz import MovieWatchProviders200ResponseResultsMZ
from tmdb_client.models.movie_watch_providers200_response_results_nl import MovieWatchProviders200ResponseResultsNL
from tmdb_client.models.movie_watch_providers200_response_results_no import MovieWatchProviders200ResponseResultsNO
from tmdb_client.models.movie_watch_providers200_response_results_nz import MovieWatchProviders200ResponseResultsNZ
from tmdb_client.models.movie_watch_providers200_response_results_om import MovieWatchProviders200ResponseResultsOM
from tmdb_client.models.movie_watch_providers200_response_results_pa import MovieWatchProviders200ResponseResultsPA
from tmdb_client.models.movie_watch_providers200_response_results_pe import MovieWatchProviders200ResponseResultsPE
from tmdb_client.models.movie_watch_providers200_response_results_ph import MovieWatchProviders200ResponseResultsPH
from tmdb_client.models.movie_watch_providers200_response_results_pk import MovieWatchProviders200ResponseResultsPK
from tmdb_client.models.movie_watch_providers200_response_results_pl import MovieWatchProviders200ResponseResultsPL
from tmdb_client.models.movie_watch_providers200_response_results_ps import MovieWatchProviders200ResponseResultsPS
from tmdb_client.models.movie_watch_providers200_response_results_pt import MovieWatchProviders200ResponseResultsPT
from tmdb_client.models.movie_watch_providers200_response_results_py import MovieWatchProviders200ResponseResultsPY
from tmdb_client.models.movie_watch_providers200_response_results_qa import MovieWatchProviders200ResponseResultsQA
from tmdb_client.models.movie_watch_providers200_response_results_ro import MovieWatchProviders200ResponseResultsRO
from tmdb_client.models.movie_watch_providers200_response_results_rs import MovieWatchProviders200ResponseResultsRS
from tmdb_client.models.movie_watch_providers200_response_results_ru import MovieWatchProviders200ResponseResultsRU
from tmdb_client.models.movie_watch_providers200_response_results_sa import MovieWatchProviders200ResponseResultsSA
from tmdb_client.models.movie_watch_providers200_response_results_se import MovieWatchProviders200ResponseResultsSE
from tmdb_client.models.movie_watch_providers200_response_results_sg import MovieWatchProviders200ResponseResultsSG
from tmdb_client.models.movie_watch_providers200_response_results_si import MovieWatchProviders200ResponseResultsSI
from tmdb_client.models.movie_watch_providers200_response_results_sk import MovieWatchProviders200ResponseResultsSK
from tmdb_client.models.movie_watch_providers200_response_results_sm import MovieWatchProviders200ResponseResultsSM
from tmdb_client.models.movie_watch_providers200_response_results_sv import MovieWatchProviders200ResponseResultsSV
from tmdb_client.models.movie_watch_providers200_response_results_th import MovieWatchProviders200ResponseResultsTH
from tmdb_client.models.movie_watch_providers200_response_results_tr import MovieWatchProviders200ResponseResultsTR
from tmdb_client.models.movie_watch_providers200_response_results_tt import MovieWatchProviders200ResponseResultsTT
from tmdb_client.models.movie_watch_providers200_response_results_tw import MovieWatchProviders200ResponseResultsTW
from tmdb_client.models.movie_watch_providers200_response_results_ug import MovieWatchProviders200ResponseResultsUG
from tmdb_client.models.movie_watch_providers200_response_results_us import MovieWatchProviders200ResponseResultsUS
from tmdb_client.models.movie_watch_providers200_response_results_uy import MovieWatchProviders200ResponseResultsUY
from tmdb_client.models.movie_watch_providers200_response_results_ve import MovieWatchProviders200ResponseResultsVE
from tmdb_client.models.movie_watch_providers200_response_results_ye import MovieWatchProviders200ResponseResultsYE
from tmdb_client.models.movie_watch_providers200_response_results_za import MovieWatchProviders200ResponseResultsZA
from typing import Optional, Set
from typing_extensions import Self

class MovieWatchProviders200ResponseResults(BaseModel):
    """
    MovieWatchProviders200ResponseResults
    """ # noqa: E501
    ae: Optional[MovieWatchProviders200ResponseResultsAE] = Field(default=None, alias="AE")
    al: Optional[MovieWatchProviders200ResponseResultsAL] = Field(default=None, alias="AL")
    ar: Optional[MovieWatchProviders200ResponseResultsAR] = Field(default=None, alias="AR")
    at: Optional[MovieWatchProviders200ResponseResultsAT] = Field(default=None, alias="AT")
    au: Optional[MovieWatchProviders200ResponseResultsAU] = Field(default=None, alias="AU")
    ba: Optional[MovieWatchProviders200ResponseResultsBA] = Field(default=None, alias="BA")
    bb: Optional[MovieWatchProviders200ResponseResultsBB] = Field(default=None, alias="BB")
    be: Optional[MovieWatchProviders200ResponseResultsBE] = Field(default=None, alias="BE")
    bg: Optional[MovieWatchProviders200ResponseResultsBG] = Field(default=None, alias="BG")
    bh: Optional[MovieWatchProviders200ResponseResultsBH] = Field(default=None, alias="BH")
    bo: Optional[MovieWatchProviders200ResponseResultsBO] = Field(default=None, alias="BO")
    br: Optional[MovieWatchProviders200ResponseResultsBR] = Field(default=None, alias="BR")
    bs: Optional[MovieWatchProviders200ResponseResultsBS] = Field(default=None, alias="BS")
    ca: Optional[MovieWatchProviders200ResponseResultsCA] = Field(default=None, alias="CA")
    ch: Optional[MovieWatchProviders200ResponseResultsCH] = Field(default=None, alias="CH")
    cl: Optional[MovieWatchProviders200ResponseResultsCL] = Field(default=None, alias="CL")
    co: Optional[MovieWatchProviders200ResponseResultsCO] = Field(default=None, alias="CO")
    cr: Optional[MovieWatchProviders200ResponseResultsCR] = Field(default=None, alias="CR")
    cv: Optional[MovieWatchProviders200ResponseResultsCV] = Field(default=None, alias="CV")
    cz: Optional[MovieWatchProviders200ResponseResultsCZ] = Field(default=None, alias="CZ")
    de: Optional[MovieWatchProviders200ResponseResultsDE] = Field(default=None, alias="DE")
    dk: Optional[MovieWatchProviders200ResponseResultsDK] = Field(default=None, alias="DK")
    do: Optional[MovieWatchProviders200ResponseResultsDO] = Field(default=None, alias="DO")
    ec: Optional[MovieWatchProviders200ResponseResultsEC] = Field(default=None, alias="EC")
    ee: Optional[MovieWatchProviders200ResponseResultsEE] = Field(default=None, alias="EE")
    eg: Optional[MovieWatchProviders200ResponseResultsEG] = Field(default=None, alias="EG")
    es: Optional[MovieWatchProviders200ResponseResultsES] = Field(default=None, alias="ES")
    fi: Optional[MovieWatchProviders200ResponseResultsFI] = Field(default=None, alias="FI")
    fj: Optional[MovieWatchProviders200ResponseResultsFJ] = Field(default=None, alias="FJ")
    fr: Optional[MovieWatchProviders200ResponseResultsFR] = Field(default=None, alias="FR")
    gb: Optional[MovieWatchProviders200ResponseResultsGB] = Field(default=None, alias="GB")
    gf: Optional[MovieWatchProviders200ResponseResultsGF] = Field(default=None, alias="GF")
    gi: Optional[MovieWatchProviders200ResponseResultsGI] = Field(default=None, alias="GI")
    gr: Optional[MovieWatchProviders200ResponseResultsGR] = Field(default=None, alias="GR")
    gt: Optional[MovieWatchProviders200ResponseResultsGT] = Field(default=None, alias="GT")
    hk: Optional[MovieWatchProviders200ResponseResultsHK] = Field(default=None, alias="HK")
    hn: Optional[MovieWatchProviders200ResponseResultsHN] = Field(default=None, alias="HN")
    hr: Optional[MovieWatchProviders200ResponseResultsHR] = Field(default=None, alias="HR")
    hu: Optional[MovieWatchProviders200ResponseResultsHU] = Field(default=None, alias="HU")
    id: Optional[MovieWatchProviders200ResponseResultsID] = Field(default=None, alias="ID")
    ie: Optional[MovieWatchProviders200ResponseResultsIE] = Field(default=None, alias="IE")
    il: Optional[MovieWatchProviders200ResponseResultsIL] = Field(default=None, alias="IL")
    var_in: Optional[MovieWatchProviders200ResponseResultsIN] = Field(default=None, alias="IN")
    iq: Optional[MovieWatchProviders200ResponseResultsIQ] = Field(default=None, alias="IQ")
    var_is: Optional[MovieWatchProviders200ResponseResultsIS] = Field(default=None, alias="IS")
    it: Optional[MovieWatchProviders200ResponseResultsIT] = Field(default=None, alias="IT")
    jm: Optional[MovieWatchProviders200ResponseResultsJM] = Field(default=None, alias="JM")
    jo: Optional[MovieWatchProviders200ResponseResultsJO] = Field(default=None, alias="JO")
    jp: Optional[MovieWatchProviders200ResponseResultsJP] = Field(default=None, alias="JP")
    kr: Optional[MovieWatchProviders200ResponseResultsKR] = Field(default=None, alias="KR")
    kw: Optional[MovieWatchProviders200ResponseResultsKW] = Field(default=None, alias="KW")
    lb: Optional[MovieWatchProviders200ResponseResultsLB] = Field(default=None, alias="LB")
    li: Optional[MovieWatchProviders200ResponseResultsLI] = Field(default=None, alias="LI")
    lt: Optional[MovieWatchProviders200ResponseResultsLT] = Field(default=None, alias="LT")
    lv: Optional[MovieWatchProviders200ResponseResultsLV] = Field(default=None, alias="LV")
    md: Optional[MovieWatchProviders200ResponseResultsMD] = Field(default=None, alias="MD")
    mk: Optional[MovieWatchProviders200ResponseResultsMK] = Field(default=None, alias="MK")
    mt: Optional[MovieWatchProviders200ResponseResultsMT] = Field(default=None, alias="MT")
    mu: Optional[MovieWatchProviders200ResponseResultsMU] = Field(default=None, alias="MU")
    mx: Optional[MovieWatchProviders200ResponseResultsMX] = Field(default=None, alias="MX")
    my: Optional[MovieWatchProviders200ResponseResultsMY] = Field(default=None, alias="MY")
    mz: Optional[MovieWatchProviders200ResponseResultsMZ] = Field(default=None, alias="MZ")
    nl: Optional[MovieWatchProviders200ResponseResultsNL] = Field(default=None, alias="NL")
    no: Optional[MovieWatchProviders200ResponseResultsNO] = Field(default=None, alias="NO")
    nz: Optional[MovieWatchProviders200ResponseResultsNZ] = Field(default=None, alias="NZ")
    om: Optional[MovieWatchProviders200ResponseResultsOM] = Field(default=None, alias="OM")
    pa: Optional[MovieWatchProviders200ResponseResultsPA] = Field(default=None, alias="PA")
    pe: Optional[MovieWatchProviders200ResponseResultsPE] = Field(default=None, alias="PE")
    ph: Optional[MovieWatchProviders200ResponseResultsPH] = Field(default=None, alias="PH")
    pk: Optional[MovieWatchProviders200ResponseResultsPK] = Field(default=None, alias="PK")
    pl: Optional[MovieWatchProviders200ResponseResultsPL] = Field(default=None, alias="PL")
    ps: Optional[MovieWatchProviders200ResponseResultsPS] = Field(default=None, alias="PS")
    pt: Optional[MovieWatchProviders200ResponseResultsPT] = Field(default=None, alias="PT")
    py: Optional[MovieWatchProviders200ResponseResultsPY] = Field(default=None, alias="PY")
    qa: Optional[MovieWatchProviders200ResponseResultsQA] = Field(default=None, alias="QA")
    ro: Optional[MovieWatchProviders200ResponseResultsRO] = Field(default=None, alias="RO")
    rs: Optional[MovieWatchProviders200ResponseResultsRS] = Field(default=None, alias="RS")
    ru: Optional[MovieWatchProviders200ResponseResultsRU] = Field(default=None, alias="RU")
    sa: Optional[MovieWatchProviders200ResponseResultsSA] = Field(default=None, alias="SA")
    se: Optional[MovieWatchProviders200ResponseResultsSE] = Field(default=None, alias="SE")
    sg: Optional[MovieWatchProviders200ResponseResultsSG] = Field(default=None, alias="SG")
    si: Optional[MovieWatchProviders200ResponseResultsSI] = Field(default=None, alias="SI")
    sk: Optional[MovieWatchProviders200ResponseResultsSK] = Field(default=None, alias="SK")
    sm: Optional[MovieWatchProviders200ResponseResultsSM] = Field(default=None, alias="SM")
    sv: Optional[MovieWatchProviders200ResponseResultsSV] = Field(default=None, alias="SV")
    th: Optional[MovieWatchProviders200ResponseResultsTH] = Field(default=None, alias="TH")
    tr: Optional[MovieWatchProviders200ResponseResultsTR] = Field(default=None, alias="TR")
    tt: Optional[MovieWatchProviders200ResponseResultsTT] = Field(default=None, alias="TT")
    tw: Optional[MovieWatchProviders200ResponseResultsTW] = Field(default=None, alias="TW")
    ug: Optional[MovieWatchProviders200ResponseResultsUG] = Field(default=None, alias="UG")
    us: Optional[MovieWatchProviders200ResponseResultsUS] = Field(default=None, alias="US")
    uy: Optional[MovieWatchProviders200ResponseResultsUY] = Field(default=None, alias="UY")
    ve: Optional[MovieWatchProviders200ResponseResultsVE] = Field(default=None, alias="VE")
    ye: Optional[MovieWatchProviders200ResponseResultsYE] = Field(default=None, alias="YE")
    za: Optional[MovieWatchProviders200ResponseResultsZA] = Field(default=None, alias="ZA")
    __properties: ClassVar[List[str

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of MovieWatchProviders200ResponseResults from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of ae
        if self.ae:
            _dict['AE'] = self.ae.to_dict()
        # override the default output from pydantic by calling `to_dict()` of al
        if self.al:
            _dict['AL'] = self.al.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ar
        if self.ar:
            _dict['AR'] = self.ar.to_dict()
        # override the default output from pydantic by calling `to_dict()` of at
        if self.at:
            _dict['AT'] = self.at.to_dict()
        # override the default output from pydantic by calling `to_dict()` of au
        if self.au:
            _dict['AU'] = self.au.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ba
        if self.ba:
            _dict['BA'] = self.ba.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bb
        if self.bb:
            _dict['BB'] = self.bb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of be
        if self.be:
            _dict['BE'] = self.be.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bg
        if self.bg:
            _dict['BG'] = self.bg.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bh
        if self.bh:
            _dict['BH'] = self.bh.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bo
        if self.bo:
            _dict['BO'] = self.bo.to_dict()
        # override the default output from pydantic by calling `to_dict()` of br
        if self.br:
            _dict['BR'] = self.br.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bs
        if self.bs:
            _dict['BS'] = self.bs.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ca
        if self.ca:
            _dict['CA'] = self.ca.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ch
        if self.ch:
            _dict['CH'] = self.ch.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cl
        if self.cl:
            _dict['CL'] = self.cl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of co
        if self.co:
            _dict['CO'] = self.co.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cr
        if self.cr:
            _dict['CR'] = self.cr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cv
        if self.cv:
            _dict['CV'] = self.cv.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cz
        if self.cz:
            _dict['CZ'] = self.cz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of de
        if self.de:
            _dict['DE'] = self.de.to_dict()
        # override the default output from pydantic by calling `to_dict()` of dk
        if self.dk:
            _dict['DK'] = self.dk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of do
        if self.do:
            _dict['DO'] = self.do.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ec
        if self.ec:
            _dict['EC'] = self.ec.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ee
        if self.ee:
            _dict['EE'] = self.ee.to_dict()
        # override the default output from pydantic by calling `to_dict()` of eg
        if self.eg:
            _dict['EG'] = self.eg.to_dict()
        # override the default output from pydantic by calling `to_dict()` of es
        if self.es:
            _dict['ES'] = self.es.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fi
        if self.fi:
            _dict['FI'] = self.fi.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fj
        if self.fj:
            _dict['FJ'] = self.fj.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fr
        if self.fr:
            _dict['FR'] = self.fr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gb
        if self.gb:
            _dict['GB'] = self.gb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gf
        if self.gf:
            _dict['GF'] = self.gf.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gi
        if self.gi:
            _dict['GI'] = self.gi.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gr
        if self.gr:
            _dict['GR'] = self.gr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gt
        if self.gt:
            _dict['GT'] = self.gt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hk
        if self.hk:
            _dict['HK'] = self.hk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hn
        if self.hn:
            _dict['HN'] = self.hn.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hr
        if self.hr:
            _dict['HR'] = self.hr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of hu
        if self.hu:
            _dict['HU'] = self.hu.to_dict()
        # override the default output from pydantic by calling `to_dict()` of id
        if self.id:
            _dict['ID'] = self.id.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ie
        if self.ie:
            _dict['IE'] = self.ie.to_dict()
        # override the default output from pydantic by calling `to_dict()` of il
        if self.il:
            _dict['IL'] = self.il.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_in
        if self.var_in:
            _dict['IN'] = self.var_in.to_dict()
        # override the default output from pydantic by calling `to_dict()` of iq
        if self.iq:
            _dict['IQ'] = self.iq.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_is
        if self.var_is:
            _dict['IS'] = self.var_is.to_dict()
        # override the default output from pydantic by calling `to_dict()` of it
        if self.it:
            _dict['IT'] = self.it.to_dict()
        # override the default output from pydantic by calling `to_dict()` of jm
        if self.jm:
            _dict['JM'] = self.jm.to_dict()
        # override the default output from pydantic by calling `to_dict()` of jo
        if self.jo:
            _dict['JO'] = self.jo.to_dict()
        # override the default output from pydantic by calling `to_dict()` of jp
        if self.jp:
            _dict['JP'] = self.jp.to_dict()
        # override the default output from pydantic by calling `to_dict()` of kr
        if self.kr:
            _dict['KR'] = self.kr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of kw
        if self.kw:
            _dict['KW'] = self.kw.to_dict()
        # override the default output from pydantic by calling `to_dict()` of lb
        if self.lb:
            _dict['LB'] = self.lb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of li
        if self.li:
            _dict['LI'] = self.li.to_dict()
        # override the default output from pydantic by calling `to_dict()` of lt
        if self.lt:
            _dict['LT'] = self.lt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of lv
        if self.lv:
            _dict['LV'] = self.lv.to_dict()
        # override the default output from pydantic by calling `to_dict()` of md
        if self.md:
            _dict['MD'] = self.md.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mk
        if self.mk:
            _dict['MK'] = self.mk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mt
        if self.mt:
            _dict['MT'] = self.mt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mu
        if self.mu:
            _dict['MU'] = self.mu.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mx
        if self.mx:
            _dict['MX'] = self.mx.to_dict()
        # override the default output from pydantic by calling `to_dict()` of my
        if self.my:
            _dict['MY'] = self.my.to_dict()
        # override the default output from pydantic by calling `to_dict()` of mz
        if self.mz:
            _dict['MZ'] = self.mz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of nl
        if self.nl:
            _dict['NL'] = self.nl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of no
        if self.no:
            _dict['NO'] = self.no.to_dict()
        # override the default output from pydantic by calling `to_dict()` of nz
        if self.nz:
            _dict['NZ'] = self.nz.to_dict()
        # override the default output from pydantic by calling `to_dict()` of om
        if self.om:
            _dict['OM'] = self.om.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pa
        if self.pa:
            _dict['PA'] = self.pa.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pe
        if self.pe:
            _dict['PE'] = self.pe.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ph
        if self.ph:
            _dict['PH'] = self.ph.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pk
        if self.pk:
            _dict['PK'] = self.pk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pl
        if self.pl:
            _dict['PL'] = self.pl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ps
        if self.ps:
            _dict['PS'] = self.ps.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pt
        if self.pt:
            _dict['PT'] = self.pt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of py
        if self.py:
            _dict['PY'] = self.py.to_dict()
        # override the default output from pydantic by calling `to_dict()` of qa
        if self.qa:
            _dict['QA'] = self.qa.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ro
        if self.ro:
            _dict['RO'] = self.ro.to_dict()
        # override the default output from pydantic by calling `to_dict()` of rs
        if self.rs:
            _dict['RS'] = self.rs.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ru
        if self.ru:
            _dict['RU'] = self.ru.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sa
        if self.sa:
            _dict['SA'] = self.sa.to_dict()
        # override the default output from pydantic by calling `to_dict()` of se
        if self.se:
            _dict['SE'] = self.se.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sg
        if self.sg:
            _dict['SG'] = self.sg.to_dict()
        # override the default output from pydantic by calling `to_dict()` of si
        if self.si:
            _dict['SI'] = self.si.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sk
        if self.sk:
            _dict['SK'] = self.sk.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sm
        if self.sm:
            _dict['SM'] = self.sm.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sv
        if self.sv:
            _dict['SV'] = self.sv.to_dict()
        # override the default output from pydantic by calling `to_dict()` of th
        if self.th:
            _dict['TH'] = self.th.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tr
        if self.tr:
            _dict['TR'] = self.tr.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tt
        if self.tt:
            _dict['TT'] = self.tt.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tw
        if self.tw:
            _dict['TW'] = self.tw.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ug
        if self.ug:
            _dict['UG'] = self.ug.to_dict()
        # override the default output from pydantic by calling `to_dict()` of us
        if self.us:
            _dict['US'] = self.us.to_dict()
        # override the default output from pydantic by calling `to_dict()` of uy
        if self.uy:
            _dict['UY'] = self.uy.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ve
        if self.ve:
            _dict['VE'] = self.ve.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ye
        if self.ye:
            _dict['YE'] = self.ye.to_dict()
        # override the default output from pydantic by calling `to_dict()` of za
        if self.za:
            _dict['ZA'] = self.za.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of MovieWatchProviders200ResponseResults from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "AE": MovieWatchProviders200ResponseResultsAE.from_dict(obj["AE"]) if obj.get("AE") is not None else None,
            "AL": MovieWatchProviders200ResponseResultsAL.from_dict(obj["AL"]) if obj.get("AL") is not None else None,
            "AR": MovieWatchProviders200ResponseResultsAR.from_dict(obj["AR"]) if obj.get("AR") is not None else None,
            "AT": MovieWatchProviders200ResponseResultsAT.from_dict(obj["AT"]) if obj.get("AT") is not None else None,
            "AU": MovieWatchProviders200ResponseResultsAU.from_dict(obj["AU"]) if obj.get("AU") is not None else None,
            "BA": MovieWatchProviders200ResponseResultsBA.from_dict(obj["BA"]) if obj.get("BA") is not None else None,
            "BB": MovieWatchProviders200ResponseResultsBB.from_dict(obj["BB"]) if obj.get("BB") is not None else None,
            "BE": MovieWatchProviders200ResponseResultsBE.from_dict(obj["BE"]) if obj.get("BE") is not None else None,
            "BG": MovieWatchProviders200ResponseResultsBG.from_dict(obj["BG"]) if obj.get("BG") is not None else None,
            "BH": MovieWatchProviders200ResponseResultsBH.from_dict(obj["BH"]) if obj.get("BH") is not None else None,
            "BO": MovieWatchProviders200ResponseResultsBO.from_dict(obj["BO"]) if obj.get("BO") is not None else None,
            "BR": MovieWatchProviders200ResponseResultsBR.from_dict(obj["BR"]) if obj.get("BR") is not None else None,
            "BS": MovieWatchProviders200ResponseResultsBS.from_dict(obj["BS"]) if obj.get("BS") is not None else None,
            "CA": MovieWatchProviders200ResponseResultsCA.from_dict(obj["CA"]) if obj.get("CA") is not None else None,
            "CH": MovieWatchProviders200ResponseResultsCH.from_dict(obj["CH"]) if obj.get("CH") is not None else None,
            "CL": MovieWatchProviders200ResponseResultsCL.from_dict(obj["CL"]) if obj.get("CL") is not None else None,
            "CO": MovieWatchProviders200ResponseResultsCO.from_dict(obj["CO"]) if obj.get("CO") is not None else None,
            "CR": MovieWatchProviders200ResponseResultsCR.from_dict(obj["CR"]) if obj.get("CR") is not None else None,
            "CV": MovieWatchProviders200ResponseResultsCV.from_dict(obj["CV"]) if obj.get("CV") is not None else None,
            "CZ": MovieWatchProviders200ResponseResultsCZ.from_dict(obj["CZ"]) if obj.get("CZ") is not None else None,
            "DE": MovieWatchProviders200ResponseResultsDE.from_dict(obj["DE"]) if obj.get("DE") is not None else None,
            "DK": MovieWatchProviders200ResponseResultsDK.from_dict(obj["DK"]) if obj.get("DK") is not None else None,
            "DO": MovieWatchProviders200ResponseResultsDO.from_dict(obj["DO"]) if obj.get("DO") is not None else None,
            "EC": MovieWatchProviders200ResponseResultsEC.from_dict(obj["EC"]) if obj.get("EC") is not None else None,
            "EE": MovieWatchProviders200ResponseResultsEE.from_dict(obj["EE"]) if obj.get("EE") is not None else None,
            "EG": MovieWatchProviders200ResponseResultsEG.from_dict(obj["EG"]) if obj.get("EG") is not None else None,
            "ES": MovieWatchProviders200ResponseResultsES.from_dict(obj["ES"]) if obj.get("ES") is not None else None,
            "FI": MovieWatchProviders200ResponseResultsFI.from_dict(obj["FI"]) if obj.get("FI") is not None else None,
            "FJ": MovieWatchProviders200ResponseResultsFJ.from_dict(obj["FJ"]) if obj.get("FJ") is not None else None,
            "FR": MovieWatchProviders200ResponseResultsFR.from_dict(obj["FR"]) if obj.get("FR") is not None else None,
            "GB": MovieWatchProviders200ResponseResultsGB.from_dict(obj["GB"]) if obj.get("GB") is not None else None,
            "GF": MovieWatchProviders200ResponseResultsGF.from_dict(obj["GF"]) if obj.get("GF") is not None else None,
            "GI": MovieWatchProviders200ResponseResultsGI.from_dict(obj["GI"]) if obj.get("GI") is not None else None,
            "GR": MovieWatchProviders200ResponseResultsGR.from_dict(obj["GR"]) if obj.get("GR") is not None else None,
            "GT": MovieWatchProviders200ResponseResultsGT.from_dict(obj["GT"]) if obj.get("GT") is not None else None,
            "HK": MovieWatchProviders200ResponseResultsHK.from_dict(obj["HK"]) if obj.get("HK") is not None else None,
            "HN": MovieWatchProviders200ResponseResultsHN.from_dict(obj["HN"]) if obj.get("HN") is not None else None,
            "HR": MovieWatchProviders200ResponseResultsHR.from_dict(obj["HR"]) if obj.get("HR") is not None else None,
            "HU": MovieWatchProviders200ResponseResultsHU.from_dict(obj["HU"]) if obj.get("HU") is not None else None,
            "ID": MovieWatchProviders200ResponseResultsID.from_dict(obj["ID"]) if obj.get("ID") is not None else None,
            "IE": MovieWatchProviders200ResponseResultsIE.from_dict(obj["IE"]) if obj.get("IE") is not None else None,
            "IL": MovieWatchProviders200ResponseResultsIL.from_dict(obj["IL"]) if obj.get("IL") is not None else None,
            "IN": MovieWatchProviders200ResponseResultsIN.from_dict(obj["IN"]) if obj.get("IN") is not None else None,
            "IQ": MovieWatchProviders200ResponseResultsIQ.from_dict(obj["IQ"]) if obj.get("IQ") is not None else None,
            "IS": MovieWatchProviders200ResponseResultsIS.from_dict(obj["IS"]) if obj.get("IS") is not None else None,
            "IT": MovieWatchProviders200ResponseResultsIT.from_dict(obj["IT"]) if obj.get("IT") is not None else None,
            "JM": MovieWatchProviders200ResponseResultsJM.from_dict(obj["JM"]) if obj.get("JM") is not None else None,
            "JO": MovieWatchProviders200ResponseResultsJO.from_dict(obj["JO"]) if obj.get("JO") is not None else None,
            "JP": MovieWatchProviders200ResponseResultsJP.from_dict(obj["JP"]) if obj.get("JP") is not None else None,
            "KR": MovieWatchProviders200ResponseResultsKR.from_dict(obj["KR"]) if obj.get("KR") is not None else None,
            "KW": MovieWatchProviders200ResponseResultsKW.from_dict(obj["KW"]) if obj.get("KW") is not None else None,
            "LB": MovieWatchProviders200ResponseResultsLB.from_dict(obj["LB"]) if obj.get("LB") is not None else None,
            "LI": MovieWatchProviders200ResponseResultsLI.from_dict(obj["LI"]) if obj.get("LI") is not None else None,
            "LT": MovieWatchProviders200ResponseResultsLT.from_dict(obj["LT"]) if obj.get("LT") is not None else None,
            "LV": MovieWatchProviders200ResponseResultsLV.from_dict(obj["LV"]) if obj.get("LV") is not None else None,
            "MD": MovieWatchProviders200ResponseResultsMD.from_dict(obj["MD"]) if obj.get("MD") is not None else None,
            "MK": MovieWatchProviders200ResponseResultsMK.from_dict(obj["MK"]) if obj.get("MK") is not None else None,
            "MT": MovieWatchProviders200ResponseResultsMT.from_dict(obj["MT"]) if obj.get("MT") is not None else None,
            "MU": MovieWatchProviders200ResponseResultsMU.from_dict(obj["MU"]) if obj.get("MU") is not None else None,
            "MX": MovieWatchProviders200ResponseResultsMX.from_dict(obj["MX"]) if obj.get("MX") is not None else None,
            "MY": MovieWatchProviders200ResponseResultsMY.from_dict(obj["MY"]) if obj.get("MY") is not None else None,
            "MZ": MovieWatchProviders200ResponseResultsMZ.from_dict(obj["MZ"]) if obj.get("MZ") is not None else None,
            "NL": MovieWatchProviders200ResponseResultsNL.from_dict(obj["NL"]) if obj.get("NL") is not None else None,
            "NO": MovieWatchProviders200ResponseResultsNO.from_dict(obj["NO"]) if obj.get("NO") is not None else None,
            "NZ": MovieWatchProviders200ResponseResultsNZ.from_dict(obj["NZ"]) if obj.get("NZ") is not None else None,
            "OM": MovieWatchProviders200ResponseResultsOM.from_dict(obj["OM"]) if obj.get("OM") is not None else None,
            "PA": MovieWatchProviders200ResponseResultsPA.from_dict(obj["PA"]) if obj.get("PA") is not None else None,
            "PE": MovieWatchProviders200ResponseResultsPE.from_dict(obj["PE"]) if obj.get("PE") is not None else None,
            "PH": MovieWatchProviders200ResponseResultsPH.from_dict(obj["PH"]) if obj.get("PH") is not None else None,
            "PK": MovieWatchProviders200ResponseResultsPK.from_dict(obj["PK"]) if obj.get("PK") is not None else None,
            "PL": MovieWatchProviders200ResponseResultsPL.from_dict(obj["PL"]) if obj.get("PL") is not None else None,
            "PS": MovieWatchProviders200ResponseResultsPS.from_dict(obj["PS"]) if obj.get("PS") is not None else None,
            "PT": MovieWatchProviders200ResponseResultsPT.from_dict(obj["PT"]) if obj.get("PT") is not None else None,
            "PY": MovieWatchProviders200ResponseResultsPY.from_dict(obj["PY"]) if obj.get("PY") is not None else None,
            "QA": MovieWatchProviders200ResponseResultsQA.from_dict(obj["QA"]) if obj.get("QA") is not None else None,
            "RO": MovieWatchProviders200ResponseResultsRO.from_dict(obj["RO"]) if obj.get("RO") is not None else None,
            "RS": MovieWatchProviders200ResponseResultsRS.from_dict(obj["RS"]) if obj.get("RS") is not None else None,
            "RU": MovieWatchProviders200ResponseResultsRU.from_dict(obj["RU"]) if obj.get("RU") is not None else None,
            "SA": MovieWatchProviders200ResponseResultsSA.from_dict(obj["SA"]) if obj.get("SA") is not None else None,
            "SE": MovieWatchProviders200ResponseResultsSE.from_dict(obj["SE"]) if obj.get("SE") is not None else None,
            "SG": MovieWatchProviders200ResponseResultsSG.from_dict(obj["SG"]) if obj.get("SG") is not None else None,
            "SI": MovieWatchProviders200ResponseResultsSI.from_dict(obj["SI"]) if obj.get("SI") is not None else None,
            "SK": MovieWatchProviders200ResponseResultsSK.from_dict(obj["SK"]) if obj.get("SK") is not None else None,
            "SM": MovieWatchProviders200ResponseResultsSM.from_dict(obj["SM"]) if obj.get("SM") is not None else None,
            "SV": MovieWatchProviders200ResponseResultsSV.from_dict(obj["SV"]) if obj.get("SV") is not None else None,
            "TH": MovieWatchProviders200ResponseResultsTH.from_dict(obj["TH"]) if obj.get("TH") is not None else None,
            "TR": MovieWatchProviders200ResponseResultsTR.from_dict(obj["TR"]) if obj.get("TR") is not None else None,
            "TT": MovieWatchProviders200ResponseResultsTT.from_dict(obj["TT"]) if obj.get("TT") is not None else None,
            "TW": MovieWatchProviders200ResponseResultsTW.from_dict(obj["TW"]) if obj.get("TW") is not None else None,
            "UG": MovieWatchProviders200ResponseResultsUG.from_dict(obj["UG"]) if obj.get("UG") is not None else None,
            "US": MovieWatchProviders200ResponseResultsUS.from_dict(obj["US"]) if obj.get("US") is not None else None,
            "UY": MovieWatchProviders200ResponseResultsUY.from_dict(obj["UY"]) if obj.get("UY") is not None else None,
            "VE": MovieWatchProviders200ResponseResultsVE.from_dict(obj["VE"]) if obj.get("VE") is not None else None,
            "YE": MovieWatchProviders200ResponseResultsYE.from_dict(obj["YE"]) if obj.get("YE") is not None else None,
            "ZA": MovieWatchProviders200ResponseResultsZA.from_dict(obj["ZA"]) if obj.get("ZA") is not None else None
        })
        return _obj


