# SPDX-FileCopyrightText: 2014 Jason W. DeGraw <jason.degraw@gmail.com>
# SPDX-FileCopyrightText: 2023-present Oak Ridge National Laboratory, managed by UT-Battelle
#
# SPDX-License-Identifier: BSD-3-Clause
import hippogryph
import exodusii
import numpy as np
import os

def dev_null(mesg):
    pass

pts = [[0.0, -0.75], [0.5, -0.75], [1.0, -0.75], [1.5, -0.75], [2.0, -0.75],
       [2.5, -0.75], [3.0, -0.75], [3.5, -0.75], [4.0, -0.75], [4.5, -0.75],
       [5.0, -0.75], [5.5, -0.75], [6.0, -0.75], [6.5, -0.75], [7.0, -0.75],
       [7.5, -0.75], [8.0, -0.75], [8.5, -0.75], [9.0, -0.75], [9.5, -0.75],
       [10.0, -0.75], [10.5, -0.75], [11.0, -0.75], [11.5, -0.75], [12.0, -0.75],
       [12.5, -0.75], [13.0, -0.75], [13.5, -0.75], [14.0, -0.75], [14.5, -0.75],
       [15.0, -0.75], [15.5, -0.75], [16.0, -0.75], [16.5, -0.75], [32.0, -0.75],
       [0.0, -0.25], [0.5, -0.25], [1.0, -0.25], [1.5, -0.25], [2.0, -0.25],
       [2.5, -0.25], [3.0, -0.25], [3.5, -0.25], [4.0, -0.25], [4.5, -0.25],
       [5.0, -0.25], [5.5, -0.25], [6.0, -0.25], [6.5, -0.25], [7.0, -0.25],
       [7.5, -0.25], [8.0, -0.25], [8.5, -0.25], [9.0, -0.25], [9.5, -0.25],
       [10.0, -0.25], [10.5, -0.25], [11.0, -0.25], [11.5, -0.25], [12.0, -0.25],
       [12.5, -0.25], [13.0, -0.25], [13.5, -0.25], [14.0, -0.25], [14.5, -0.25],
       [15.0, -0.25], [15.5, -0.25], [16.0, -0.25], [16.5, -0.25], [32.0, -0.25],
       [0.0, 0.25], [0.5, 0.25], [1.0, 0.25], [1.5, 0.25], [2.0, 0.25],
       [2.5, 0.25], [3.0, 0.25], [3.5, 0.25], [4.0, 0.25], [4.5, 0.25],
       [5.0, 0.25], [5.5, 0.25], [6.0, 0.25], [6.5, 0.25], [7.0, 0.25],
       [7.5, 0.25], [8.0, 0.25], [8.5, 0.25], [9.0, 0.25], [9.5, 0.25],
       [10.0, 0.25], [10.5, 0.25], [11.0, 0.25], [11.5, 0.25], [12.0, 0.25],
       [12.5, 0.25], [13.0, 0.25], [13.5, 0.25], [14.0, 0.25], [14.5, 0.25],
       [15.0, 0.25], [15.5, 0.25], [16.0, 0.25], [16.5, 0.25], [32.0, 0.25]]

def test_bfs(tmpdir):
    mesh = hippogryph.backward_step(1)
    fullpath = os.path.join(tmpdir,'bfs.exo')
    mesh.write_exodusii(fullpath)
    with exodusii.File(fullpath, mode="r") as exof:
        domain = exof.get_element_block(1)
        assert domain.name == 'domain'
        coords = exof.get_coords()
        assert np.allclose(coords, pts)
        assert len(coords) == 105
        conn = exof.get_element_connectivity(1).elem_conn
        assert len(conn) == 68
        
