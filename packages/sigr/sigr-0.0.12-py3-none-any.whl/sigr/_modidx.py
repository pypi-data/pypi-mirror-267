# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/sigr',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/sigr',
                'lib_path': 'sigr'},
  'syms': { 'sigr.attr': { 'sigr.attr.applyfns': ('attr.html#applyfns', 'sigr/attr.py'),
                           'sigr.attr.attrfunc': ('attr.html#attrfunc', 'sigr/attr.py'),
                           'sigr.attr.callattr': ('attr.html#callattr', 'sigr/attr.py')},
            'sigr.bcls': { 'sigr.bcls.binder': ('bcls.html#binder', 'sigr/bcls.py'),
                           'sigr.bcls.binder.__init_subclass__': ('bcls.html#binder.__init_subclass__', 'sigr/bcls.py'),
                           'sigr.bcls.bindermeta': ('bcls.html#bindermeta', 'sigr/bcls.py'),
                           'sigr.bcls.bindermeta.__call__': ('bcls.html#bindermeta.__call__', 'sigr/bcls.py'),
                           'sigr.bcls.bindermeta.__new__': ('bcls.html#bindermeta.__new__', 'sigr/bcls.py'),
                           'sigr.bcls.bindermeta.setvars': ('bcls.html#bindermeta.setvars', 'sigr/bcls.py')},
            'sigr.bnds': { 'sigr.bnds._bind': ('bnds.html#_bind', 'sigr/bnds.py'),
                           'sigr.bnds._bind_scopes': ('bnds.html#_bind_scopes', 'sigr/bnds.py'),
                           'sigr.bnds._bind_scopes_explicitly': ('bnds.html#_bind_scopes_explicitly', 'sigr/bnds.py'),
                           'sigr.bnds.bind': ('bnds.html#bind', 'sigr/bnds.py'),
                           'sigr.bnds.bind_safe': ('bnds.html#bind_safe', 'sigr/bnds.py'),
                           'sigr.bnds.bind_scopes': ('bnds.html#bind_scopes', 'sigr/bnds.py'),
                           'sigr.bnds.bind_scopes_explicitly': ('bnds.html#bind_scopes_explicitly', 'sigr/bnds.py')},
            'sigr.cons': {},
            'sigr.deco': { 'sigr.deco._callwith': ('deco.html#_callwith', 'sigr/deco.py'),
                           'sigr.deco._decowith': ('deco.html#_decowith', 'sigr/deco.py'),
                           'sigr.deco.bindsome': ('deco.html#bindsome', 'sigr/deco.py'),
                           'sigr.deco.callwith': ('deco.html#callwith', 'sigr/deco.py'),
                           'sigr.deco.decowith': ('deco.html#decowith', 'sigr/deco.py'),
                           'sigr.deco.setpartial': ('deco.html#setpartial', 'sigr/deco.py'),
                           'sigr.deco.setsig': ('deco.html#setsig', 'sigr/deco.py'),
                           'sigr.deco.setsignature': ('deco.html#setsignature', 'sigr/deco.py')},
            'sigr.enum': { 'sigr.enum.BoundFormat': ('enum.html#boundformat', 'sigr/enum.py'),
                           'sigr.enum.BoundFormat.format': ('enum.html#boundformat.format', 'sigr/enum.py'),
                           'sigr.enum.DecoratedFormat': ('enum.html#decoratedformat', 'sigr/enum.py'),
                           'sigr.enum.DecoratedFormat.format': ('enum.html#decoratedformat.format', 'sigr/enum.py'),
                           'sigr.enum.DecoratedFormat.infer': ('enum.html#decoratedformat.infer', 'sigr/enum.py'),
                           'sigr.enum.Direction': ('enum.html#direction', 'sigr/enum.py'),
                           'sigr.enum.ResolutionOrder': ('enum.html#resolutionorder', 'sigr/enum.py'),
                           'sigr.enum.Scope': ('enum.html#scope', 'sigr/enum.py'),
                           'sigr.enum.Scope.perm_dict': ('enum.html#scope.perm_dict', 'sigr/enum.py'),
                           'sigr.enum.Scope.permutation_key': ('enum.html#scope.permutation_key', 'sigr/enum.py'),
                           'sigr.enum.Scope.permutation_keys': ('enum.html#scope.permutation_keys', 'sigr/enum.py'),
                           'sigr.enum.Scope.permutations': ('enum.html#scope.permutations', 'sigr/enum.py'),
                           'sigr.enum.safe': ('enum.html#safe', 'sigr/enum.py')},
            'sigr.grds': { 'sigr.grds.is_optional': ('grds.html#is_optional', 'sigr/grds.py'),
                           'sigr.grds.is_optional_ducktype': ('grds.html#is_optional_ducktype', 'sigr/grds.py'),
                           'sigr.grds.isbool': ('grds.html#isbool', 'sigr/grds.py'),
                           'sigr.grds.iscallattr': ('grds.html#iscallattr', 'sigr/grds.py'),
                           'sigr.grds.isdict': ('grds.html#isdict', 'sigr/grds.py'),
                           'sigr.grds.isempty': ('grds.html#isempty', 'sigr/grds.py'),
                           'sigr.grds.isemptyparam': ('grds.html#isemptyparam', 'sigr/grds.py'),
                           'sigr.grds.isenum': ('grds.html#isenum', 'sigr/grds.py'),
                           'sigr.grds.isnone': ('grds.html#isnone', 'sigr/grds.py'),
                           'sigr.grds.isoptional': ('grds.html#isoptional', 'sigr/grds.py'),
                           'sigr.grds.isparam': ('grds.html#isparam', 'sigr/grds.py'),
                           'sigr.grds.ispsa': ('grds.html#ispsa', 'sigr/grds.py'),
                           'sigr.grds.ispsk': ('grds.html#ispsk', 'sigr/grds.py'),
                           'sigr.grds.issig': ('grds.html#issig', 'sigr/grds.py'),
                           'sigr.grds.isstr': ('grds.html#isstr', 'sigr/grds.py'),
                           'sigr.grds.istuple': ('grds.html#istuple', 'sigr/grds.py'),
                           'sigr.grds.istype': ('grds.html#istype', 'sigr/grds.py'),
                           'sigr.grds.isvarg': ('grds.html#isvarg', 'sigr/grds.py'),
                           'sigr.grds.isvkwo': ('grds.html#isvkwo', 'sigr/grds.py'),
                           'sigr.grds.isvkws': ('grds.html#isvkws', 'sigr/grds.py'),
                           'sigr.grds.isvpok': ('grds.html#isvpok', 'sigr/grds.py'),
                           'sigr.grds.isvpos': ('grds.html#isvpos', 'sigr/grds.py'),
                           'sigr.grds.notempty': ('grds.html#notempty', 'sigr/grds.py'),
                           'sigr.grds.notnone': ('grds.html#notnone', 'sigr/grds.py')},
            'sigr.sigs': { 'sigr.sigs._extract_mangled_keywords': ('sigs.html#_extract_mangled_keywords', 'sigr/sigs.py'),
                           'sigr.sigs._should_replace': ('sigs.html#_should_replace', 'sigr/sigs.py'),
                           'sigr.sigs._update_mangled_keywords': ('sigs.html#_update_mangled_keywords', 'sigr/sigs.py'),
                           'sigr.sigs.get_keywords_from_attributes': ('sigs.html#get_keywords_from_attributes', 'sigr/sigs.py'),
                           'sigr.sigs.get_keywords_from_reference': ('sigs.html#get_keywords_from_reference', 'sigr/sigs.py'),
                           'sigr.sigs.get_signature_defaults': ('sigs.html#get_signature_defaults', 'sigr/sigs.py'),
                           'sigr.sigs.in_lookup': ('sigs.html#in_lookup', 'sigr/sigs.py'),
                           'sigr.sigs.init_from_annot': ('sigs.html#init_from_annot', 'sigr/sigs.py'),
                           'sigr.sigs.prep_parameter': ('sigs.html#prep_parameter', 'sigr/sigs.py'),
                           'sigr.sigs.put_var_in_parameters': ('sigs.html#put_var_in_parameters', 'sigr/sigs.py'),
                           'sigr.sigs.put_var_in_signature': ('sigs.html#put_var_in_signature', 'sigr/sigs.py'),
                           'sigr.sigs.signature_from_annotations': ('sigs.html#signature_from_annotations', 'sigr/sigs.py'),
                           'sigr.sigs.signature_from_bound': ('sigs.html#signature_from_bound', 'sigr/sigs.py'),
                           'sigr.sigs.signature_from_callable': ('sigs.html#signature_from_callable', 'sigr/sigs.py')},
            'sigr.type': { 'sigr.type.AnnotationSignatureOptions': ('type.html#annotationsignatureoptions', 'sigr/type.py'),
                           'sigr.type.BindOptions': ('type.html#bindoptions', 'sigr/type.py'),
                           'sigr.type.BindScopes': ('type.html#bindscopes', 'sigr/type.py'),
                           'sigr.type.BoundReturnFormat': ('type.html#boundreturnformat', 'sigr/type.py'),
                           'sigr.type.BoundSignatureOptions': ('type.html#boundsignatureoptions', 'sigr/type.py'),
                           'sigr.type.CallableSignatureOptions': ('type.html#callablesignatureoptions', 'sigr/type.py'),
                           'sigr.type.FoundArgument': ('type.html#foundargument', 'sigr/type.py'),
                           'sigr.type.MethodOptions': ('type.html#methodoptions', 'sigr/type.py'),
                           'sigr.type.OptionsDict': ('type.html#optionsdict', 'sigr/type.py'),
                           'sigr.type._is_kw_in_annots': ('type.html#_is_kw_in_annots', 'sigr/type.py'),
                           'sigr.type.get_typed_dict_options': ('type.html#get_typed_dict_options', 'sigr/type.py'),
                           'sigr.type.prune_type_dict_keywords': ('type.html#prune_type_dict_keywords', 'sigr/type.py')},
            'sigr.util': { 'sigr.util.bind_unbound_args': ('util.html#bind_unbound_args', 'sigr/util.py'),
                           'sigr.util.bind_unbound_kwargs': ('util.html#bind_unbound_kwargs', 'sigr/util.py'),
                           'sigr.util.bound_arguments_format': ('util.html#bound_arguments_format', 'sigr/util.py'),
                           'sigr.util.decorated_format': ('util.html#decorated_format', 'sigr/util.py'),
                           'sigr.util.decorated_format_from_func': ('util.html#decorated_format_from_func', 'sigr/util.py'),
                           'sigr.util.get_mangled_keywords': ('util.html#get_mangled_keywords', 'sigr/util.py'),
                           'sigr.util.get_option': ('util.html#get_option', 'sigr/util.py'),
                           'sigr.util.getname': ('util.html#getname', 'sigr/util.py'),
                           'sigr.util.getorpop': ('util.html#getorpop', 'sigr/util.py'),
                           'sigr.util.getpopkw': ('util.html#getpopkw', 'sigr/util.py'),
                           'sigr.util.handle_bound_methods': ('util.html#handle_bound_methods', 'sigr/util.py'),
                           'sigr.util.handle_bound_variadic': ('util.html#handle_bound_variadic', 'sigr/util.py'),
                           'sigr.util.hasvarg': ('util.html#hasvarg', 'sigr/util.py'),
                           'sigr.util.hasvkws': ('util.html#hasvkws', 'sigr/util.py'),
                           'sigr.util.hasvpok': ('util.html#hasvpok', 'sigr/util.py'),
                           'sigr.util.init_enum': ('util.html#init_enum', 'sigr/util.py'),
                           'sigr.util.join': ('util.html#join', 'sigr/util.py'),
                           'sigr.util.mangled': ('util.html#mangled', 'sigr/util.py'),
                           'sigr.util.nextnone': ('util.html#nextnone', 'sigr/util.py'),
                           'sigr.util.nones': ('util.html#nones', 'sigr/util.py'),
                           'sigr.util.overload_keyword': ('util.html#overload_keyword', 'sigr/util.py'),
                           'sigr.util.parameter_as_sort_tuple': ('util.html#parameter_as_sort_tuple', 'sigr/util.py'),
                           'sigr.util.parameter_defaults': ('util.html#parameter_defaults', 'sigr/util.py'),
                           'sigr.util.passthrough': ('util.html#passthrough', 'sigr/util.py'),
                           'sigr.util.private': ('util.html#private', 'sigr/util.py'),
                           'sigr.util.resolve_args': ('util.html#resolve_args', 'sigr/util.py'),
                           'sigr.util.resolve_kwargs': ('util.html#resolve_kwargs', 'sigr/util.py'),
                           'sigr.util.sort_parameters': ('util.html#sort_parameters', 'sigr/util.py'),
                           'sigr.util.tuple_arg1st': ('util.html#tuple_arg1st', 'sigr/util.py'),
                           'sigr.util.tuple_extend': ('util.html#tuple_extend', 'sigr/util.py'),
                           'sigr.util.unbound_args': ('util.html#unbound_args', 'sigr/util.py'),
                           'sigr.util.unbound_kwargs': ('util.html#unbound_kwargs', 'sigr/util.py'),
                           'sigr.util.unmangle': ('util.html#unmangle', 'sigr/util.py')}}}
