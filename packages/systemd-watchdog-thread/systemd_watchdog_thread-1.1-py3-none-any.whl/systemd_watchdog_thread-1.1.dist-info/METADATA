Metadata-Version: 2.1
Name: systemd-watchdog-thread
Version: 1.1
Author: Gerard
Author-email: gweatherby@uchc.edu
License: MIT License
        
        Copyright (c) 2023 NMRhub
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/NMRhub/systemd-watchdog-thread
Project-URL: Issues, https://github.com/NMRhub/systemd-watchdog-thread/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: sdnotify

# systemd-watchdog-thread
Runs [systemd](https://en.wikipedia.org/wiki/Systemdwatchdog) notifies in thread.

When *run()* is called it sends the READY message to systemd and then
sends WATCHDOG messages at one-half the interval set by the WATCHDOG_USEC
environment variable.

It runs as a daemon [thread](https://docs.python.org/3/library/threading.html#thread-objects),
so it will exit when the main program exits.

## usage

    from systemd_watchdog_thread import WatchdogThread

    wdt = WatchdogThread()
    t = wdt.run()

or

    from systemd_watchdog_thread import run_watchdog 

    run_watchdog()

## testing
*finish()* may be called to stop sending READY messages. This is provided to test
the systemd watchdog functionality.
