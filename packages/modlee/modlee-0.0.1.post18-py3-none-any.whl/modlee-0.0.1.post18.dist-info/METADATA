Metadata-Version: 2.1
Name: modlee
Version: 0.0.1.post18
Summary: modlee package
Author-email: modlee <michael@modlee.ai>
License: 
                                         Apache License
                                   Version 2.0, January 2004
                                http://www.apache.org/licenses/
        
           TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        
           1. Definitions.
        
              "License" shall mean the terms and conditions for use, reproduction,
              and distribution as defined by Sections 1 through 9 of this document.
        
              "Licensor" shall mean the copyright owner or entity authorized by
              the copyright owner that is granting the License.
        
              "Legal Entity" shall mean the union of the acting entity and all
              other entities that control, are controlled by, or are under common
              control with that entity. For the purposes of this definition,
              "control" means (i) the power, direct or indirect, to cause the
              direction or management of such entity, whether by contract or
              otherwise, or (ii) ownership of fifty percent (50%) or more of the
              outstanding shares, or (iii) beneficial ownership of such entity.
        
              "You" (or "Your") shall mean an individual or Legal Entity
              exercising permissions granted by this License.
        
              "Source" form shall mean the preferred form for making modifications,
              including but not limited to software source code, documentation
              source, and configuration files.
        
              "Object" form shall mean any form resulting from mechanical
              transformation or translation of a Source form, including but
              not limited to compiled object code, generated documentation,
              and conversions to other media types.
        
              "Work" shall mean the work of authorship, whether in Source or
              Object form, made available under the License, as indicated by a
              copyright notice that is included in or attached to the work
              (an example is provided in the Appendix below).
        
              "Derivative Works" shall mean any work, whether in Source or Object
              form, that is based on (or derived from) the Work and for which the
              editorial revisions, annotations, elaborations, or other modifications
              represent, as a whole, an original work of authorship. For the purposes
              of this License, Derivative Works shall not include works that remain
              separable from, or merely link (or bind by name) to the interfaces of,
              the Work and Derivative Works thereof.
        
              "Contribution" shall mean any work of authorship, including
              the original version of the Work and any modifications or additions
              to that Work or Derivative Works thereof, that is intentionally
              submitted to Licensor for inclusion in the Work by the copyright owner
              or by an individual or Legal Entity authorized to submit on behalf of
              the copyright owner. For the purposes of this definition, "submitted"
              means any form of electronic, verbal, or written communication sent
              to the Licensor or its representatives, including but not limited to
              communication on electronic mailing lists, source code control systems,
              and issue tracking systems that are managed by, or on behalf of, the
              Licensor for the purpose of discussing and improving the Work, but
              excluding communication that is conspicuously marked or otherwise
              designated in writing by the copyright owner as "Not a Contribution."
        
              "Contributor" shall mean Licensor and any individual or Legal Entity
              on behalf of whom a Contribution has been received by Licensor and
              subsequently incorporated within the Work.
        
           2. Grant of Copyright License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              copyright license to reproduce, prepare Derivative Works of,
              publicly display, publicly perform, sublicense, and distribute the
              Work and such Derivative Works in Source or Object form.
        
           3. Grant of Patent License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              (except as stated in this section) patent license to make, have made,
              use, offer to sell, sell, import, and otherwise transfer the Work,
              where such license applies only to those patent claims licensable
              by such Contributor that are necessarily infringed by their
              Contribution(s) alone or by combination of their Contribution(s)
              with the Work to which such Contribution(s) was submitted. If You
              institute patent litigation against any entity (including a
              cross-claim or counterclaim in a lawsuit) alleging that the Work
              or a Contribution incorporated within the Work constitutes direct
              or contributory patent infringement, then any patent licenses
              granted to You under this License for that Work shall terminate
              as of the date such litigation is filed.
        
           4. Redistribution. You may reproduce and distribute copies of the
              Work or Derivative Works thereof in any medium, with or without
              modifications, and in Source or Object form, provided that You
              meet the following conditions:
        
              (a) You must give any other recipients of the Work or
                  Derivative Works a copy of this License; and
        
              (b) You must cause any modified files to carry prominent notices
                  stating that You changed the files; and
        
              (c) You must retain, in the Source form of any Derivative Works
                  that You distribute, all copyright, patent, trademark, and
                  attribution notices from the Source form of the Work,
                  excluding those notices that do not pertain to any part of
                  the Derivative Works; and
        
              (d) If the Work includes a "NOTICE" text file as part of its
                  distribution, then any Derivative Works that You distribute must
                  include a readable copy of the attribution notices contained
                  within such NOTICE file, excluding those notices that do not
                  pertain to any part of the Derivative Works, in at least one
                  of the following places: within a NOTICE text file distributed
                  as part of the Derivative Works; within the Source form or
                  documentation, if provided along with the Derivative Works; or,
                  within a display generated by the Derivative Works, if and
                  wherever such third-party notices normally appear. The contents
                  of the NOTICE file are for informational purposes only and
                  do not modify the License. You may add Your own attribution
                  notices within Derivative Works that You distribute, alongside
                  or as an addendum to the NOTICE text from the Work, provided
                  that such additional attribution notices cannot be construed
                  as modifying the License.
        
              You may add Your own copyright statement to Your modifications and
              may provide additional or different license terms and conditions
              for use, reproduction, or distribution of Your modifications, or
              for any such Derivative Works as a whole, provided Your use,
              reproduction, and distribution of the Work otherwise complies with
              the conditions stated in this License.
        
           5. Submission of Contributions. Unless You explicitly state otherwise,
              any Contribution intentionally submitted for inclusion in the Work
              by You to the Licensor shall be under the terms and conditions of
              this License, without any additional terms or conditions.
              Notwithstanding the above, nothing herein shall supersede or modify
              the terms of any separate license agreement you may have executed
              with Licensor regarding such Contributions.
        
           6. Trademarks. This License does not grant permission to use the trade
              names, trademarks, service marks, or product names of the Licensor,
              except as required for reasonable and customary use in describing the
              origin of the Work and reproducing the content of the NOTICE file.
        
           7. Disclaimer of Warranty. Unless required by applicable law or
              agreed to in writing, Licensor provides the Work (and each
              Contributor provides its Contributions) on an "AS IS" BASIS,
              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
              implied, including, without limitation, any warranties or conditions
              of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
              PARTICULAR PURPOSE. You are solely responsible for determining the
              appropriateness of using or redistributing the Work and assume any
              risks associated with Your exercise of permissions under this License.
        
           8. Limitation of Liability. In no event and under no legal theory,
              whether in tort (including negligence), contract, or otherwise,
              unless required by applicable law (such as deliberate and grossly
              negligent acts) or agreed to in writing, shall any Contributor be
              liable to You for damages, including any direct, indirect, special,
              incidental, or consequential damages of any character arising as a
              result of this License or out of the use or inability to use the
              Work (including but not limited to damages for loss of goodwill,
              work stoppage, computer failure or malfunction, or any and all
              other commercial damages or losses), even if such Contributor
              has been advised of the possibility of such damages.
        
           9. Accepting Warranty or Additional Liability. While redistributing
              the Work or Derivative Works thereof, You may choose to offer,
              and charge a fee for, acceptance of support, warranty, indemnity,
              or other liability obligations and/or rights consistent with this
              License. However, in accepting such obligations, You may act only
              on Your own behalf and on Your sole responsibility, not on behalf
              of any other Contributor, and only if You agree to indemnify,
              defend, and hold each Contributor harmless for any liability
              incurred by, or claims asserted against, such Contributor by reason
              of your accepting any such warranty or additional liability.
        
           END OF TERMS AND CONDITIONS
        
           APPENDIX: How to apply the Apache License to your work.
        
              To apply the Apache License to your work, attach the following
              boilerplate notice, with the fields enclosed by brackets "[]"
              replaced with your own identifying information. (Don't include
              the brackets!)  The text should be enclosed in the appropriate
              comment syntax for the file format. We also recommend that a
              file or class name and description of purpose be included on the
              same "printed page" as the copyright notice for easier
              identification within third-party archives.
        
           Copyright [yyyy] [name of copyright owner]
        
           Licensed under the Apache License, Version 2.0 (the "License");
           you may not use this file except in compliance with the License.
           You may obtain a copy of the License at
        
               http://www.apache.org/licenses/LICENSE-2.0
        
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
Project-URL: Homepage, https://www.modlee.ai
Project-URL: Source, https://www.github.com/modlee-ai/modlee
Requires-Python: !=3.12.*,<3.12,>=3.10
Description-Content-Type: text/markdown
Requires-Dist: lightning ==2.0.7
Requires-Dist: mlflow >=2.6.0
Requires-Dist: numpy ==1.26.4
Requires-Dist: pydantic ==1.10.12
Requires-Dist: setuptools >=68.0.0
Requires-Dist: torch >=2.0.1
Requires-Dist: torchmetrics >=1.0.0
Requires-Dist: torchvision >=0.15.2
Requires-Dist: onnx ==1.14.1
Requires-Dist: torchsummary ==1.5.1
Requires-Dist: modlee-onnx2torch ==1.5.12
Requires-Dist: modlee-onnx-graphsurgeon ==0.3.27
Requires-Dist: pymfe ==0.4.2
Requires-Dist: pytest ==8.1.1
Requires-Dist: nbsphinx
Requires-Dist: sphinx-rtd-theme

# modlee

*Until now, ML R&D has been ...*

- **Isolated**: Even with community resources, critical knowledge often remains overlooked or neglected.
- **Tedious**: Training and evaluating many models is often boring, slow and wastes precious time.
- **Messy**: Months of model experimentation can often feel like navigating through an endless maze.

*We've developed a better way ...* Our Python package seemlessly connects you to your collaborators and recommends model architectures for your datatasets based on the experiments shared between you. At Modlee we’ve built a flywheel that allows the ML R&D community to work together in new ways and guide each other to better ML solutions.

You can **use Modlee's Python package** to more easily define high performing ML models in three simple steps using **our tools**:

- **1. Connect with our Automated Experiment Collaboration**: Embrace the opportunity to collaborate effortlessly with developers & colleagues worldwide.
- **2. Benchmark with our Model Architecture Recommendations**: Train a high-quality benchmark ML solution faster and easier, regardless of your expertise.
- **3. Explore with our Automated Experiment Documentation**: Improve upon your benchmark solution and contribute with your Modlee collaborators.


## Installation


We have developed the package in Python 3.10. Please [raise an issue](https://github.com/modlee-ai/modlee/blob/main/issues) if you experience environment errors.

### PyPI

Install `modlee` from PyPI:
```shell
pip install modlee
```

Our package is built on top of PyTorch, PyTorch-lightning, MLFlow and more to ensure you can continue developing ML with frameworks that you are familiar with.


### Source

Alternatively, you can build the package from the source by cloning this repository and installing from the `pyproject.toml` configuration file:
```shell
git clone https://github.com/modlee-ai/modlee
cd modlee
pip install .
```

### API key

To use all of features of Modlee, you'll need to [Sign up](https://www.dashboard.modlee.ai?signUp) and generate an API Key: *Modlee Purple is free, always.*


#### Features that require an API key

- Automated Experiment Collaboration - *Connect*
- Modle Architecture Recommendations - *Benchmark*

#### Features that work without an API key

- Automated Experiment Documentation (local) - *Explore*


### Set API key
Either save your API key to an environment variable: 
```shell
export MODLEE_API_KEY="my-api-key"
```
Or pass directly to the  `modlee.init` function (less recommended):
```python
# your_experiment_script.py
import modlee
modlee.init(api_key="my-api-key")
```

## Usage

### Prerequisites


Modlee is built on top of [PyTorch Lightning](https://lightning.ai/docs/pytorch/stable/) and [MLFlow](https://mlflow.org).
While you do not have to be an expert in either framework to use Modlee, we recommend being familiar with machine learning concepts and techniques.
This documentation page does not cover the frameworks; we recommend referencing the [Lightning](https://lightning.ai/docs/overview/getting-started) and [MLFlow](https://mlflow.org/docs/latest/index.html) documentation directly.



### Model Architecture Recommendations

Obtain a better benchmark ML solution faster and easier, by using our ML Model Architecture Recommendations.  We recommend model architectures based on your data modality, task, and data meta-features, and deliver a trainable model within your python script, all within a few lines of code.

```python
# Import and initialize
import modlee, lightning
modlee.init(api_key="my-api-key")

# Create your dataloaders
train_dataloader, val_dataloader = your_function_to_get_dataloaders()

# Create a recommender object and fit to the training dataloader
recommender = modlee.recommender.from_modality_task(
    modality='image',
    task='classification',
    )

# Fit the recommender to the data meta-features
recommender.fit(train_dataloader)

```

Modlee analyzed your dataset locally and extracted meta-features, which are needed for us to recommend a model architecture. Learn more about how we do this in our [docs](https://docs.modlee.ai/modules/modlee.data_metafeatures.html).


```python

# Get the model from the recommender and train
model = recommender.model
with modlee.start_run() as run:
    trainer = modlee.Trainer(max_epochs=10)
    trainer.fit(
        model=model,
        train_dataloaders=train_dataloader,
        val_dataloaders=val_dataloader
    )
```

We formatted your recommended model as a `ModleeModel`, which allows us to automatically document your experiment locally and share it with your Modlee collaborators. If you're signed up for Modlee Purple, that's the entire Modlee community! Learn more in our [docs](https://docs.modlee.ai/modules/modlee.client.html#modlee.client.ModleeClient.post_run).

In training a Modlee recommended model, and sharing key information about your experiment automatically, you've contributed to a powerful flywheel that will allow the ML R&D community to work together in new ways and guide one another to better ML solutions over time.

#### Supported use cases

At the moment we support modalities of `images` and `text`, and tasks of `classification`, with more coming soon. Let us know which modalities and tasks you'd prefer on our [Discord](https://discord.com/invite/m8YDbWDvrF) in the package-feature-brainstorming channel. If you're excited about what we're building, help us support your use case by contributing to our [Github](https://github.com/modlee-ai/modlee/blob/main/docs/CONTRIBUTING.md).

#### Next steps

Build your own Modlee model recommendation pipeline and connect your data today or go through a full recommendation example in more detail: [Benchmark with model recommendations](https://docs.modlee.ai/notebooks/recommend.html).

### Automated Experiment Documentation

Using Modlee to obtain a benchmark solution is an easy way to determine a great starting point for future model exploration. To explore further define a custom `ModleeModel`, which will automatically share key information about your experiment and help guide your collaborators towards better solutions. No need to share code, repos, or set up a meeting.

Modlee supports documentation for Lightning experiments.
Guides for structuring PyTorch Lightning projects are available [here](https://lightning.ai/docs/pytorch/stable/starter/converting.html) and [here](https://towardsdatascience.com/from-pytorch-to-pytorch-lightning-a-gentle-introduction-b371b7caaf09).
Once you have created your experiment script, simply follow the four "I's":

```python
# Import the package
import modlee, lightning

# Initialize with your API key
modlee.init(api_key="my-api-key")

# Inherit the ModleeModel class for your model module,
# instead of lightning.pytorch.LightningModule
class MyModel(modlee.model.ModleeModel):
    # Define the model
model = MyModel()

# Insert the modlee context manager before training
with modlee.start_run() as run:
    trainer = modlee.trainer(max_epochs=10)
    trainer.fit(
        model=model,
        train_dataloaders=train_dataloader,
    )
```
For the sake of illustration, we did not define `train_dataloader` and `MyModel` above. Read through our [Dataset guidelines](https://docs.modlee.ai/notebooks/dataset_guidelines.html) and  [Model definition guidelines](https://docs.modlee.ai/notebooks/model_definition_guidelines.html) to learn our guidelines for creating custom datasets and models, to ensure your experiment is documented correctly.

Modlee automatically documents experiment assets in a new `./mlruns/` directory, relative to wherever the script was called.
Among the assets is a `model_graph.py` module that recreates the model as a graph, including the `forward()` pass:

```python
import torch, onnx2torch
from torch import tensor

class Model(torch.nn.Module):
    
    def __init__(self):
        ''' Rebuild the model from its base components. '''
        super().__init__()
        setattr(self,'Shape', Shape(**{'start':0,'end':None}))
        setattr(self,'Constant', Constant(**{'value':torch.ones(())*2}))
        setattr(self,'Gather', Gather(**{'axis':0}))
        setattr(self,'Shape_1', Shape(**{'start':0,'end':None}))
        setattr(self,'Constant_1', Constant(**{'value':torch.ones(())*3}))
        setattr(self,'Gather_1', Gather(**{'axis':0}))
        setattr(self,'Conv', torch.nn.modules.conv.Conv2d(**{
            'in_channels':3,
            'out_channels':64,
            'kernel_size':(7, 7),
            'stride':(2, 2),
            'padding':(3, 3),
            'dilation':(1, 1),
            'groups':1,
            'padding_mode':'zeros'}))
        ...
    
    def forward(self, input_1):
        ''' Forward pass an input through the network '''
        shape = self.Shape(input_1)
        constant = self.Constant()
        gather = self.Gather(shape, constant.type(torch.int64))
        shape_1 = self.Shape_1(input_1)
        constant_1 = self.Constant_1()
        gather_1 = self.Gather_1(shape_1, constant_1.type(torch.int64))
        conv = self.Conv(input_1)
        ...

```

#### Supported use cases

At the moment we support modalities of `images` and `text`, and tasks of `classification`, with more coming soon. As with recommendation, use [Discord](https://discord.com/invite/m8YDbWDvrF) to let us know which modalities and tasks you'd prefer or help make these changes on our [Github](https://github.com/modlee-ai/modlee/blob/main/docs/CONTRIBUTING.md).


#### Next steps

Start implementing Modlee to continue your own model experimentation or go through a full documentation example in more detail to learn more: [Explore and document](https://docs.modlee.ai/notebooks/document.html).


## Roadmap

#### Open source

- [ ] Add more data modalities and ML tasks: a great way to 
- [ ] Client-side features needed by the community: 

#### Modlee internal

We're working hard on exciting new features to help you build better together! - *(Modlee Silver and Gold)*

- [ ] Improvements to model architecture recommendations
- [ ] Control how you're connected to Modlee
- [ ] Query and search your own and collaborators experiments backed up to Modlee
- [ ] Personalized model architecture recommendations, based on your own and collaborators experiments


## Support

### Community
[Join our Discord server](https://discord.com/invite/m8YDbWDvrF) to discuss and contribute with other Modlee users. 

### Contributing

Modlee is designed and maintained by developers passionate about AI innovation, infrastructure and meta learning. For those like us, we welcome contributions of any kind: bug reports, feature requests, tutorials, etc.

Before submitting a pull request, [please read the contribution guidelines](https://github.com/modlee-ai/modlee/blob/main/docs/CONTRIBUTING.md).

### Issues
If you encounter errors, [please raise an issue in this repository](https://github.com/modlee-ai/modlee/issues).

