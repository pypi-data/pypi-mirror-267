Metadata-Version: 2.1
Name: oil_reservoir_synthesizer
Version: 0.2.1b0
Summary: A generator for synthetic oil reservoir values
Author-email: Equinor <fg_sib-scout@equinor.com>
Maintainer-email: Eivind Jahren <ejah@equinor.com>
License: GPL-3.0
Project-URL: Homepage, https://github.com/equinor/oil_reservoir_synthesizer
Project-URL: Repository, https://github.com/equinor/oil_reservoir_synthesizer
Project-URL: Bug Tracker, https://github.com/equinor/oil_reservoir_synthesizer/issues
Classifier: Development Status :: 1 - Planning
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Description-Content-Type: text/markdown
License-File: COPYING
Requires-Dist: numpy
Provides-Extra: dev
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: tox ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'

# Oil Reservoir Synthesizer

A generator for synthetic oil reservoir simulator results based
on [Perlin noise](https://en.wikipedia.org/wiki/Perlin_noise). The
values generated are pseudo-random but retains the nice properties
of Perlin noise.

The values generated have names (such as fopr) that are derived from oil
simulators such as [opm-flow](opm-project.org).

## Example

The code exposes one class, `OilSimulator` which is a builder of
the oil reservoir model and the generator of the values.

```python

from oil_reservoir_synthesizer import OilSimulator

simulator = OilSimulator()

# Build a model with one well and block
simulator.add_well("wellName", seed=997)
simulator.add_block("5,5,5", seed=31)

# Run simulation
num_steps = 10
fopr_values = []  # oil production rate for each time step
for time_steps in range(num_steps):
    simulator.step(scale=1.0 / num_steps)
    fopr_values.append(simulator.fopr())

```

## Building

```sh
pip install .
```

## Testing

```sh
pip install -e .[dev]
tox test
```

## History

This project was split out of [ERT](https://github.com/equinor/ert) and
[libres](https://github.com/equinor/libres).
