# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/etrc',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/etrc',
                'lib_path': 'etrc'},
  'syms': { 'etrc.atyp': {},
            'etrc.cons': {},
            'etrc.emod': { 'etrc.emod.ModuleEnum': ('emod.html#moduleenum', 'etrc/emod.py'),
                           'etrc.emod.ModuleEnum._missing_': ('emod.html#moduleenum._missing_', 'etrc/emod.py'),
                           'etrc.emod.ModuleEnum.get': ('emod.html#moduleenum.get', 'etrc/emod.py'),
                           'etrc.emod.ModuleEnum.imp': ('emod.html#moduleenum.imp', 'etrc/emod.py'),
                           'etrc.emod.ModuleEnum.init': ('emod.html#moduleenum.init', 'etrc/emod.py'),
                           'etrc.emod.ModuleEnum.make': ('emod.html#moduleenum.make', 'etrc/emod.py'),
                           'etrc.emod.ModuleEnum.module': ('emod.html#moduleenum.module', 'etrc/emod.py'),
                           'etrc.emod.ModuleEnum.safe': ('emod.html#moduleenum.safe', 'etrc/emod.py')},
            'etrc.enum': { 'etrc.enum.BatchReturn': ('enum.html#batchreturn', 'etrc/enum.py'),
                           'etrc.enum.CatOrder': ('enum.html#catorder', 'etrc/enum.py'),
                           'etrc.enum.CatOrder._missing_': ('enum.html#catorder._missing_', 'etrc/enum.py'),
                           'etrc.enum.CatOrder.aidx': ('enum.html#catorder.aidx', 'etrc/enum.py'),
                           'etrc.enum.CatOrder.aug': ('enum.html#catorder.aug', 'etrc/enum.py'),
                           'etrc.enum.CatOrder.augsize': ('enum.html#catorder.augsize', 'etrc/enum.py'),
                           'etrc.enum.CatOrder.augzeros': ('enum.html#catorder.augzeros', 'etrc/enum.py'),
                           'etrc.enum.CatOrder.cat': ('enum.html#catorder.cat', 'etrc/enum.py'),
                           'etrc.enum.CatOrder.iasdim': ('enum.html#catorder.iasdim', 'etrc/enum.py'),
                           'etrc.enum.CatOrder.iindims': ('enum.html#catorder.iindims', 'etrc/enum.py'),
                           'etrc.enum.CatOrder.safe': ('enum.html#catorder.safe', 'etrc/enum.py'),
                           'etrc.enum.Channels': ('enum.html#channels', 'etrc/enum.py'),
                           'etrc.enum.Channels._missing_': ('enum.html#channels._missing_', 'etrc/enum.py'),
                           'etrc.enum.Channels.cidx': ('enum.html#channels.cidx', 'etrc/enum.py'),
                           'etrc.enum.Channels.flip': ('enum.html#channels.flip', 'etrc/enum.py'),
                           'etrc.enum.Channels.resize': ('enum.html#channels.resize', 'etrc/enum.py'),
                           'etrc.enum.Channels.safe': ('enum.html#channels.safe', 'etrc/enum.py'),
                           'etrc.enum.Channels.to': ('enum.html#channels.to', 'etrc/enum.py'),
                           'etrc.enum.DataFormat': ('enum.html#dataformat', 'etrc/enum.py'),
                           'etrc.enum.DiffusionMethod': ('enum.html#diffusionmethod', 'etrc/enum.py'),
                           'etrc.enum.DiffusionMethod._missing_': ('enum.html#diffusionmethod._missing_', 'etrc/enum.py'),
                           'etrc.enum.DiffusionMethod.imp': ('enum.html#diffusionmethod.imp', 'etrc/enum.py'),
                           'etrc.enum.DynamicsMethod': ('enum.html#dynamicsmethod', 'etrc/enum.py'),
                           'etrc.enum.Framework': ('enum.html#framework', 'etrc/enum.py'),
                           'etrc.enum.Framework._missing_': ('enum.html#framework._missing_', 'etrc/enum.py'),
                           'etrc.enum.Framework.safe': ('enum.html#framework.safe', 'etrc/enum.py'),
                           'etrc.enum.Framework.swap': ('enum.html#framework.swap', 'etrc/enum.py'),
                           'etrc.enum.Geodesic': ('enum.html#geodesic', 'etrc/enum.py'),
                           'etrc.enum.Geodesic.imp': ('enum.html#geodesic.imp', 'etrc/enum.py'),
                           'etrc.enum.InitMethod': ('enum.html#initmethod', 'etrc/enum.py'),
                           'etrc.enum.InitMethod.imp': ('enum.html#initmethod.imp', 'etrc/enum.py'),
                           'etrc.enum.LocReturn': ('enum.html#locreturn', 'etrc/enum.py'),
                           'etrc.enum.NonLinearity': ('enum.html#nonlinearity', 'etrc/enum.py'),
                           'etrc.enum.ODETypes': ('enum.html#odetypes', 'etrc/enum.py'),
                           'etrc.enum.ODETypes._missing_': ('enum.html#odetypes._missing_', 'etrc/enum.py'),
                           'etrc.enum.OTMethod': ('enum.html#otmethod', 'etrc/enum.py'),
                           'etrc.enum.OTMethod._missing_': ('enum.html#otmethod._missing_', 'etrc/enum.py'),
                           'etrc.enum.OTMethod.calc': ('enum.html#otmethod.calc', 'etrc/enum.py'),
                           'etrc.enum.OTMethod.imp': ('enum.html#otmethod.imp', 'etrc/enum.py'),
                           'etrc.enum.OTMethod.loss': ('enum.html#otmethod.loss', 'etrc/enum.py'),
                           'etrc.enum.RecurrentLayer': ('enum.html#recurrentlayer', 'etrc/enum.py'),
                           'etrc.enum.SDENoiseType': ('enum.html#sdenoisetype', 'etrc/enum.py'),
                           'etrc.enum.SDENoiseType._missing_': ('enum.html#sdenoisetype._missing_', 'etrc/enum.py'),
                           'etrc.enum.SDETypes': ('enum.html#sdetypes', 'etrc/enum.py'),
                           'etrc.enum.SDETypes._missing_': ('enum.html#sdetypes._missing_', 'etrc/enum.py'),
                           'etrc.enum.SampleCategoriesMethod': ('enum.html#samplecategoriesmethod', 'etrc/enum.py'),
                           'etrc.enum.SliceFormat': ('enum.html#sliceformat', 'etrc/enum.py'),
                           'etrc.enum.SliceFormat.flip': ('enum.html#sliceformat.flip', 'etrc/enum.py'),
                           'etrc.enum.SliceFormat.guess': ('enum.html#sliceformat.guess', 'etrc/enum.py'),
                           'etrc.enum.SliceFormat.safe': ('enum.html#sliceformat.safe', 'etrc/enum.py'),
                           'etrc.enum.SliceFormat.safeflip': ('enum.html#sliceformat.safeflip', 'etrc/enum.py'),
                           'etrc.enum.SliceFormat.to': ('enum.html#sliceformat.to', 'etrc/enum.py'),
                           'etrc.enum.Solver': ('enum.html#solver', 'etrc/enum.py'),
                           'etrc.enum.Solver._missing_': ('enum.html#solver._missing_', 'etrc/enum.py'),
                           'etrc.enum.Stage': ('enum.html#stage', 'etrc/enum.py'),
                           'etrc.enum.Stage._missing_': ('enum.html#stage._missing_', 'etrc/enum.py'),
                           'etrc.enum.Stage.at': ('enum.html#stage.at', 'etrc/enum.py'),
                           'etrc.enum.Stage.isat': ('enum.html#stage.isat', 'etrc/enum.py'),
                           'etrc.enum.Stage.safe': ('enum.html#stage.safe', 'etrc/enum.py'),
                           'etrc.enum.augidx': ('enum.html#augidx', 'etrc/enum.py'),
                           'etrc.enum.augsize': ('enum.html#augsize', 'etrc/enum.py'),
                           'etrc.enum.augzeros': ('enum.html#augzeros', 'etrc/enum.py'),
                           'etrc.enum.iasdim': ('enum.html#iasdim', 'etrc/enum.py'),
                           'etrc.enum.iindims': ('enum.html#iindims', 'etrc/enum.py')},
            'etrc.kwds': { 'etrc.kwds.diffusion_kwds': ('kwds.html#diffusion_kwds', 'etrc/kwds.py'),
                           'etrc.kwds.recurrent_decoder_kwds': ('kwds.html#recurrent_decoder_kwds', 'etrc/kwds.py'),
                           'etrc.kwds.recurrent_encoder_kwds': ('kwds.html#recurrent_encoder_kwds', 'etrc/kwds.py'),
                           'etrc.kwds.recurrent_kwds': ('kwds.html#recurrent_kwds', 'etrc/kwds.py')},
            'etrc.meta': { 'etrc.meta.ModuleEnumMeta': ('meta.html#moduleenummeta', 'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta.__call__': ('meta.html#moduleenummeta.__call__', 'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta.__contains__': ('meta.html#moduleenummeta.__contains__', 'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta.__copydict__': ('meta.html#moduleenummeta.__copydict__', 'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta.__new__': ('meta.html#moduleenummeta.__new__', 'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta.__prepare__': ('meta.html#moduleenummeta.__prepare__', 'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta._check_for_existing_members_': ( 'meta.html#moduleenummeta._check_for_existing_members_',
                                                                                      'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta._default_': ('meta.html#moduleenummeta._default_', 'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta._missing_': ('meta.html#moduleenummeta._missing_', 'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta._module_': ('meta.html#moduleenummeta._module_', 'etrc/meta.py'),
                           'etrc.meta.ModuleEnumMeta.duplicate': ('meta.html#moduleenummeta.duplicate', 'etrc/meta.py')},
            'etrc.solv': { 'etrc.solv.BaseODE': ('solv.html#baseode', 'etrc/solv.py'),
                           'etrc.solv.BaseSDE': ('solv.html#basesde', 'etrc/solv.py'),
                           'etrc.solv.SolverKind': ('solv.html#solverkind', 'etrc/solv.py'),
                           'etrc.solv.SolverKind._missing_': ('solv.html#solverkind._missing_', 'etrc/solv.py'),
                           'etrc.solv.SolverModule': ('solv.html#solvermodule', 'etrc/solv.py'),
                           'etrc.solv.SolverModule._missing_': ('solv.html#solvermodule._missing_', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification': ('solv.html#solverspecification', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.__contains__': ('solv.html#solverspecification.__contains__', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.__eq__': ('solv.html#solverspecification.__eq__', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.__init__': ('solv.html#solverspecification.__init__', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.__repr__': ('solv.html#solverspecification.__repr__', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.__str__': ('solv.html#solverspecification.__str__', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.asattr': ('solv.html#solverspecification.asattr', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.askey': ('solv.html#solverspecification.askey', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.lib': ('solv.html#solverspecification.lib', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.load': ('solv.html#solverspecification.load', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.match': ('solv.html#solverspecification.match', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.names': ('solv.html#solverspecification.names', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.regattr': ('solv.html#solverspecification.regattr', 'etrc/solv.py'),
                           'etrc.solv.SolverSpecification.regkey': ('solv.html#solverspecification.regkey', 'etrc/solv.py'),
                           'etrc.solv.SolverSystem': ('solv.html#solversystem', 'etrc/solv.py'),
                           'etrc.solv.SolverSystem._missing_': ('solv.html#solversystem._missing_', 'etrc/solv.py'),
                           'etrc.solv.Solvers': ('solv.html#solvers', 'etrc/solv.py'),
                           'etrc.solv.Solvers.__contains__': ('solv.html#solvers.__contains__', 'etrc/solv.py'),
                           'etrc.solv.Solvers.__str__': ('solv.html#solvers.__str__', 'etrc/solv.py'),
                           'etrc.solv.Solvers.all': ('solv.html#solvers.all', 'etrc/solv.py'),
                           'etrc.solv.Solvers.asattr': ('solv.html#solvers.asattr', 'etrc/solv.py'),
                           'etrc.solv.Solvers.askey': ('solv.html#solvers.askey', 'etrc/solv.py'),
                           'etrc.solv.Solvers.attrs': ('solv.html#solvers.attrs', 'etrc/solv.py'),
                           'etrc.solv.Solvers.get': ('solv.html#solvers.get', 'etrc/solv.py'),
                           'etrc.solv.Solvers.items': ('solv.html#solvers.items', 'etrc/solv.py'),
                           'etrc.solv.Solvers.keys': ('solv.html#solvers.keys', 'etrc/solv.py'),
                           'etrc.solv.Solvers.lienent_equality': ('solv.html#solvers.lienent_equality', 'etrc/solv.py'),
                           'etrc.solv.Solvers.matchdict': ('solv.html#solvers.matchdict', 'etrc/solv.py'),
                           'etrc.solv.Solvers.matchtuple': ('solv.html#solvers.matchtuple', 'etrc/solv.py'),
                           'etrc.solv.Solvers.odes': ('solv.html#solvers.odes', 'etrc/solv.py'),
                           'etrc.solv.Solvers.register': ('solv.html#solvers.register', 'etrc/solv.py'),
                           'etrc.solv.Solvers.sdes': ('solv.html#solvers.sdes', 'etrc/solv.py'),
                           'etrc.solv.Solvers.values': ('solv.html#solvers.values', 'etrc/solv.py')},
            'etrc.util': { 'etrc.util.enumdict': ('util.html#enumdict', 'etrc/util.py'),
                           'etrc.util.evalue': ('util.html#evalue', 'etrc/util.py'),
                           'etrc.util.get_torch_module': ('util.html#get_torch_module', 'etrc/util.py'),
                           'etrc.util.missing': ('util.html#missing', 'etrc/util.py'),
                           'etrc.util.nextv': ('util.html#nextv', 'etrc/util.py')}}}
