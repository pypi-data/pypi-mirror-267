[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "arkindex-base-worker"
version = "0.3.7rc10"
description = "Base Worker to easily build Arkindex ML workflows"
license = { file = "LICENSE" }
dependencies = [
    "peewee==3.17.0",
    "Pillow==10.2.0",
    "pymdown-extensions==10.7",
    "python-gnupg==0.5.2",
    "shapely==2.0.3",
    "teklia-toolbox==0.1.4",
    "zstandard==0.22.0",
]
authors = [
    { name = "Teklia", email = "contact@teklia.com" },
]
maintainers = [
    { name = "Teklia", email = "contact@teklia.com" },
]
requires-python = ">=3.10"
readme = { file = "README.md", content-type = "text/markdown" }
keywords = ["python"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    # Topics
    "Topic :: Text Processing :: Linguistic",
]

[project.urls]
Homepage = "https://workers.arkindex.org"
Documentation = "https://workers.arkindex.org"
Repository = "https://gitlab.teklia.com/workers/base-worker"
"Bug Tracker" = "https://gitlab.teklia.com/workers/base-worker/issues"
Authors = "https://teklia.com"

[project.optional-dependencies]
docs = [
    "black==24.2.0",
    "doc8==1.1.1",
    "mkdocs==1.5.3",
    "mkdocs-material==9.5.10",
    "mkdocstrings==0.24.0",
    "mkdocstrings-python==1.8.0",
    "recommonmark==0.7.1",
]
tests = [
    "pytest==8.0.1",
    "pytest-mock==3.12.0",
    "pytest-responses==0.5.1",
]

[tool.setuptools.packages]
find = {}

[tool.ruff]
exclude = [".git", "__pycache__"]

[tool.ruff.lint]
ignore = ["E501"]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # Flake8 Debugger
    "T1",
    # Isort
    "I",
    # Implicit Optional
    "RUF013",
    #Â Invalid pyproject.toml
    "RUF200",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # flake8-pytest-style
    "PT",
    # flake8-use-pathlib
    "PTH",
]

[tool.ruff.lint.per-file-ignores]
# Ignore `pytest-composite-assertion` rules of `flake8-pytest-style` linter for non-test files
"arkindex_worker/**/*.py" = ["PT018"]

[tool.ruff.lint.isort]
known-first-party = ["arkindex", "arkindex_common", "arkindex_worker", "teklia_toolbox"]
known-third-party = [
    "PIL",
    "apistar",
    "gnupg",
    "peewee",
    "playhouse",
    "pytest",
    "requests",
    "responses",
    "setuptools",
    "shapely",
    "tenacity",
    "yaml",
    "zstandard",
]

[tool.doc8]
ignore-path=["*.egg-info", "public", ".git"]
extensions=[".md"]
