stages:
  - build
  - test
  - publish

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

sast:
  stage: test

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

build-package:
  image: python:3.10
  stage: build
  script:
    - pip install hatch
    - hatch build
  artifacts:
    paths:
      - dist
    expire_in: 300 seconds
  rules:
    - if: $CI_PIPELINE_SOURCE != 'schedule'
  interruptible: true

build-docs:
  image: python:3.10
  stage: build
  script:
    - pip install hatch
    - hatch run docs --all
    - cd docs/_build
    - tar -jcf docs.tar.bz2 html
  artifacts:
    paths:
      - docs/_build
    expire_in: 300 seconds
  rules:
    - if: $CI_PIPELINE_SOURCE != 'schedule'
  interruptible: true

demo-tests:
  image: docker:latest
  stage: test
  services:
    - docker:dind
  before_script:
    - until docker info; do sleep 1; done
    - apk add --no-cache python3 py3-pip curl
    - pip install dist/*.whl
  script:
    - cd tests/demos
    - ./demo-tests.sh $DEMO
  parallel:
    matrix:
      - DEMO:
          - code_server
          - custom_apt_key_dearmor
          - jupyterlab/v3
          - jupyterlab/v4
          - openrefine
  dependencies:
    - build-package
  needs:
    - build-package
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  interruptible: true

tests:
  image: python:${PYTHON_VERSION}
  stage: test
  script:
    - pip install hatch
    - hatch run cov-auto
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.10", "3.11"]
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  interruptible: true

code-style:
  image: python:3.10
  stage: test
  script:
    - pip install hatch
    - hatch run lint:all
  interruptible: true

publish-docs:
  image: quay.io/curl/curl:latest
  stage: publish
  script:
    - cd docs/_build
    - 'curl -X PUT -H "Authorization: Bearer $DOCS_TOKEN" -F "archive=@docs.tar.bz2" https://docs-api.ocl.open.ac.uk/upload/container-builder/v3'
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == "v3"
  interruptible: true

publish-package:
  image: python:3.10
  stage: publish
  script:
    - pip install hatch
    - hatch publish -u __token__ -a "$PYPI_TOKEN"
  dependencies:
    - build-package
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+(b[0-9]+)?$/
