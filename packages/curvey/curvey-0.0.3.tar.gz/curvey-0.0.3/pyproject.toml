[project]
name = "curvey"
version = "0.0.3"
authors = [
    {name = "Darik Gamble", email = "darik.gamble@gmail.com"},
]
maintainers = [
    {name = "Darik Gamble", email = "darik.gamble@gmail.com"}
]
description = "Pythonic geometric processing of discrete planar closed curves"
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    '2d',
    'curvature',
    'curvature flow',
    'curve',
    'geometry',
    'geometry processing',
    'numpy',
    'planar',
    'plotting',
    'shape',
    'shape blending',
    'shape interpolation',
]

requires-python = ">= 3.9"

classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Topic :: Scientific/Engineering :: Visualization",
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Information Analysis',
    'License :: OSI Approved :: MIT License',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX',
    'Operating System :: MacOS',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]

dependencies = [
    "matplotlib",
    "networkx",
    "numpy",
    "scipy",
    "shapely",
    "sortedcontainers",
    "triangle",
    "typing_extensions",
]

[project.optional-dependencies]
dev = [
    "precommit",
    "mypy",
    "ruff",
    "sortedcontainers-stubs",
    "sybil",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]>=0.18",
    "mkdocs-jupyter",
]
test = [
    "pytest",
    "sybil",
]

[project.urls]
"Homepage" = "https://github.com/darikg/curvey/"
"Documentation" = 'https://darikg.github.io/curvey/'
"Source Code" = 'https://github.com/darikg/curvey/'

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "-p no:doctest",  # handled by sybil
]

[tool.mypy]
packages = ['curvey']
mypy_path = 'src'
warn_unused_ignores = true
ignore_missing_imports = true
warn_redundant_casts = true
# strict = true  # Way too many numpy typing errors
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.ruff]
# extend-include = ['*.ipynb']  # Too annoying to tweak tutorial line-widths etc
src = ["src"]
line-length = 100
target-version = 'py39'

[tool.ruff.lint]
extend-select = [
    "B",        # flake8-bugbear
    "I",        # isort
    "ARG",      # flake8-unused-arguments
    "C4",       # flake8-comprehensions
    "EM",       # flake8-errmsg
    "ICN",      # flake8-import-conventions
    "G",        # flake8-logging-format
    "PGH",      # pygrep-hooks
    "PIE",      # flake8-pie
    "PL",       # pylint
    "PT",       # flake8-pytest-style
    "PTH",      # flake8-use-pathlib
    "RET",      # flake8-return
    "RUF",      # Ruff-specific
    "SIM",      # flake8-simplify
    "T20",      # flake8-print
    "UP",       # pyupgrade
    "YTT",      # flake8-2020
    "EXE",      # flake8-executable
    "NPY",      # NumPy specific rules
    "PD",       # pandas-vet
    "PYI",      # flake8-pyi
]
ignore = [
    "PLR09",    # Too many <...>
    "PLR2004",  # Magic value used in comparison
    "ISC001",   # Conflicts with formatter
    "RUF003",   # unicode too useful in math comments
]
typing-modules = ["mypackage._compat.typing"]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
