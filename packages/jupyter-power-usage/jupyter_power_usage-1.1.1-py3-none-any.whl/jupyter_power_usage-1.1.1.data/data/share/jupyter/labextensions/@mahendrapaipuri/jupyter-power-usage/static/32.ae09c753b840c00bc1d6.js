"use strict";(self.webpackChunk_mahendrapaipuri_jupyter_power_usage=self.webpackChunk_mahendrapaipuri_jupyter_power_usage||[]).push([[32],{32:(e,t,n)=>{n.r(t),n.d(t,{default:()=>z});var s=n(464),r=n(99),i=n(29),a=n.n(i),o=n(496);const c=({percentage:e,color:t})=>a().createElement("div",{className:"jp-IndicatorFiller",style:{width:100*e+"%",background:`${t}`}}),l=({values:e,percentage:t,baseColor:n})=>{const[s,r]=(0,i.useState)(!1),l=t>.5?t>.8?"red":"orange":n;return a().createElement("div",{className:"jp-IndicatorBar",onClick:()=>{r(!s)}},s&&a().createElement(o.Sparklines,{data:e,min:0,max:1,limit:e.length,margin:0},a().createElement(o.SparklinesLine,{style:{stroke:l,strokeWidth:4,fill:l,fillOpacity:1}}),a().createElement(o.SparklinesSpots,null)),!s&&a().createElement(c,{percentage:t,color:l}))},u=({enabled:e,values:t,label:n,color:s,text:r})=>{const i=t[t.length-1];return e&&a().createElement("div",{className:"jp-IndicatorContainer"},a().createElement("div",{className:"jp-IndicatorText"},n),null!==i&&a().createElement("div",{className:"jp-IndicatorWrapper"},a().createElement(l,{values:t,percentage:i,baseColor:s})),a().createElement("div",{className:"jp-IndicatorText"},r))},p=({model:e,label:t})=>{const[n,s]=(0,i.useState)(""),[r,o]=(0,i.useState)([]),c=()=>{const{currentCpuPower:t,currentCpuPowerLimit:n}=e,r=`${t.toFixed(2)} ${n?"/ "+n.toFixed(0):""} W`,i=e.values.map((e=>e.cpuPowerShare));s(r),o(i)};return(0,i.useEffect)((()=>(e.changed.connect(c),()=>{e.changed.disconnect(c)})),[e]),a().createElement(u,{enabled:e.cpuPowerAvailable,values:r,label:t,color:"#1AB7AE",text:n})};var d;!function(e){e.createPowerView=(e,t)=>s.ReactWidget.create(a().createElement(p,{model:e,label:t}))}(d||(d={}));const h=({model:e,label:t})=>{const[n,s]=(0,i.useState)(""),[r,o]=(0,i.useState)([]),c=()=>{const{currentGpuPower:t,currentGpuLimit:n}=e,r=`${t.toFixed(2)} ${n?"/ "+n.toFixed(0):""} W`,i=e.values.map((e=>e.gpuPowerShare));s(r),o(i)};return(0,i.useEffect)((()=>(e.changed.connect(c),()=>{e.changed.disconnect(c)})),[e]),a().createElement(u,{enabled:e.gpuPowerAvailable,values:r,label:t,color:"#76B900",text:n})};var m;!function(e){e.createPowerView=(e,t)=>s.ReactWidget.create(a().createElement(h,{model:e,label:t}))}(m||(m={}));const g=({enabled:e,text:t})=>e&&a().createElement("div",{className:"jp-IndicatorContainer"},a().createElement("div",{className:"jp-IndicatorText"},a().createElement("span",null,"eCO",a().createElement("sub",null,"2"),":")),a().createElement("div",{className:"jp-IndicatorText"},t)),f=({model:e})=>{const[t,n]=(0,i.useState)(""),s=()=>{const{currentEmissions:t,emissionsUnits:s}=e,r=["mg","g","kg"].indexOf(s)>0?0:2,i=`${t.toFixed(r)} ${e.emissionsUnits}`;n(i)};return(0,i.useEffect)((()=>(e.changed.connect(s),()=>{e.changed.disconnect(s)})),[e]),a().createElement(g,{enabled:e.emissionsAvailable,text:t})};var v;!function(e){e.createEmissionsView=e=>s.ReactWidget.create(a().createElement(f,{model:e}))}(v||(v={}));var w=n(671),_=n(818),b=n(797),y=n(901);const P=1e3,E=1e6;var x,A;!function(e){e.getOpenDataSoftEmissionFactor=async()=>{var e,t;const n={dataset:"eco2mix-national-tr",facet:"date_heure",start:"0",rows:"1",sort:"date_heure",timezone:"Europe/Paris",q:`date_heure:[${(new Date).toISOString().split("T")[0]} TO #now()] AND NOT #null(taux_co2)`},s=w.URLExt.objectToQueryString(n),r=w.URLExt.join("https://odre.opendatasoft.com","/api/records/1.0/search/",s);try{const n=await fetch(r,{method:"GET"});if(!n.ok)return console.debug("Request to Opendatasoft API failed"),null;const s=await n.json();if(s&&s.records&&s.records.length>0)return(null===(t=null===(e=s.records[0])||void 0===e?void 0:e.fields)||void 0===t?void 0:t.taux_co2)||0}catch(e){return console.info(`Request to Opendatasoft API failed due to ${e}`),null}return null}}(x||(x={})),function(e){const t="/v3/carbon-intensity/latest",n=_.ServerConnection.makeSettings();e.getElectricityMapsEmissionFactor=async(e,s,r)=>{const i={zone:r.toUpperCase()},a=w.URLExt.objectToQueryString(i);try{let r;const i=new Headers;s.length>0&&i.set("auth-token",s),r=e?w.URLExt.join(n.baseUrl,"api/metrics/v1/emission_factor/emaps",t,a):w.URLExt.join("https://api.electricitymap.org",t,a);const o=await fetch(r,{method:"GET",headers:i});if(!o.ok)return console.debug("Request to Electricity Maps API failed"),null;const c=await o.json();if(c&&c.carbonIntensity)return c.carbonIntensity||0}catch(e){return console.info(`Request to Electricity Maps failed due to ${e}`),null}return null}}(A||(A={}));const F=async function(e,t,n,s){return"rte"===e?await x.getOpenDataSoftEmissionFactor():"emaps"===e?await A.getElectricityMapsEmissionFactor(t,n.emaps,s):null};var U,C,S;!function(e){class t extends s.VDomModel{constructor(e,t){super(),this._cpuPowerUsageAvailable=!1,this._gpuPowerUsageAvailable=!1,this._emissionsAvailable=!1,this._currentCpuPowerLimit=null,this._currentCpuPowerUsage=null,this._currentGpuPowerUsage=null,this._currentGpuPowerLimit=null,this._currentEmissions=null,this._lastEmissionReading=Date.now(),this._lastEmissionFactor=null,this._totalEmissions=0,this._values=[],this._emissionModel=e;for(let e=0;e<20;e++)this._values.push({cpuPowerShare:0,gpuPowerShare:0});this._poll=new b.Poll({factory:()=>S.powerUsageFactory(),frequency:{interval:t.refreshRate,backoff:!0},name:"jupyter-power-usage:PowerUsage#metrics"}),this._poll.ticked.connect((e=>{const{payload:t,phase:n}=e.state;if("resolved"!==n){if("rejected"===n){const e=this._cpuPowerUsageAvailable;return this._cpuPowerUsageAvailable=!1,this._gpuPowerUsageAvailable=!1,this._emissionsAvailable=!1,this._currentCpuPowerLimit=null,this._currentCpuPowerUsage=null,this._currentGpuPowerUsage=null,this._currentGpuPowerLimit=null,this._currentEmissions=null,void(e&&this.stateChanged.emit())}}else this._updateMetricsValues(t)}))}async refresh(){await this._poll.refresh(),await this._poll.tick}get cpuPowerAvailable(){return this._cpuPowerUsageAvailable}get gpuPowerAvailable(){return this._gpuPowerUsageAvailable}get emissionsAvailable(){return this._emissionsAvailable&&(this._cpuPowerUsageAvailable||this._gpuPowerUsageAvailable)}get currentCpuPower(){return this._currentCpuPowerUsage}get currentCpuPowerLimit(){return this._currentCpuPowerLimit}get currentGpuPower(){return this._currentGpuPowerUsage}get currentGpuLimit(){return this._currentGpuPowerLimit}get currentEmissions(){return this._currentEmissions}get totalEmissions(){return this._totalEmissions}get emissionsUnits(){return this._emissionsUnits}get changed(){return this.stateChanged}get values(){return this._values}dispose(){this._poll.dispose()}_updateMetricsValues(e){if(null===e)return this._cpuPowerUsageAvailable=!1,this._gpuPowerUsageAvailable=!1,this._emissionsAvailable=!1,this._currentCpuPowerLimit=null,this._currentCpuPowerUsage=null,this._currentGpuPowerUsage=null,this._currentGpuPowerLimit=null,void(this._currentEmissions=null);const t=e.cpu?e.cpu.usage:null,n=e.cpu?e.cpu.limit:null;this._cpuPowerUsageAvailable=!!t,this._currentCpuPowerUsage=t,this._currentCpuPowerLimit=n;const s=e.gpu?e.gpu.usage:null,r=e.gpu?e.gpu.limit:null;this._gpuPowerUsageAvailable=!!s,this._currentGpuPowerUsage=s,this._currentGpuPowerLimit=r;const{emissionFactorAvailable:i,currentEmissionFactor:a}=this._emissionModel;if(this._lastEmissionFactor=i?a:this._lastEmissionFactor,this._emissionsAvailable=null!==this._lastEmissionFactor,this._emissionsAvailable){const e=Date.now()-this._lastEmissionReading,n=(t||0)+(s||0),r=this._lastEmissionFactor*n*e/1e3;this._lastEmissionReading=Date.now();const i=this._totalEmissions+r,[a,c]=(o=i)?o<P?[o,"mg"]:P===o||o<E?[o/P,"g"]:[o/E,"kg"]:[0,"mg"];this._currentEmissions=a,this._emissionsUnits=c,this._totalEmissions=i}var o;const c=this._currentCpuPowerLimit?Math.min(this._currentCpuPowerUsage/this._currentCpuPowerLimit,1):null,l=this._currentGpuPowerUsage&&this._currentGpuPowerLimit?Math.min(this._currentGpuPowerUsage/this._currentGpuPowerLimit,1):null;this._values.push({cpuPowerShare:c,gpuPowerShare:l}),this._values.shift(),this.stateChanged.emit(void 0)}}e.Model=t}(U||(U={})),function(e){e.Model=class{constructor(e){this._emissionFactorAvailable=!1,this._useProxy=!1,this._currentEmissionFactor=null,this._changed=new y.Signal(this),"emaps"===e.emissionFactorSource&&new Promise((()=>{F(e.emissionFactorSource,!0,e.accessTokens,e.countryCode).then((e=>{this._useProxy=!!e})).catch((()=>{console.warn("Emission factor from Electricity maps will be fetched by making API requests directly from the browser. If a access token has been set, this can pose security risks. Please configure the access token on Jupyter server extension."),this._useProxy=!1}))})),this._poll=new b.Poll({factory:()=>S.emissionsFactory(e.emissionFactorSource,this._useProxy,e.accessTokens,e.countryCode,e.defaultEmissionFactor),frequency:{interval:e.refreshRate,backoff:!0},name:"jupyter-power-usage:EmissionFactor#metrics"}),this._poll.ticked.connect((e=>{const{payload:t,phase:n}=e.state;if("resolved"!==n){if("rejected"===n){const e=this._emissionFactorAvailable;return this._emissionFactorAvailable=!1,this._currentEmissionFactor=null,void(e&&this._changed.emit())}}else this._updateMetricsValues(t)}))}async refresh(){await this._poll.refresh(),await this._poll.tick}get emissionFactorAvailable(){return this._emissionFactorAvailable}get currentEmissionFactor(){return this._currentEmissionFactor}dispose(){this._poll.dispose()}_updateMetricsValues(e){if(null===e)return this._emissionFactorAvailable=!1,void(this._currentEmissionFactor=null);const t=e;this._emissionFactorAvailable=null!==t,this._currentEmissionFactor=t,this._changed.emit(void 0)}}}(C||(C={})),function(e){const t=_.ServerConnection.makeSettings(),n=w.URLExt.join(t.baseUrl,"api/metrics/v1/power_usage");e.powerUsageFactory=async()=>{const e=_.ServerConnection.makeRequest(n,{},t),s=await e;return s.ok?await s.json():null},e.emissionsFactory=async(e,t,n,s,r)=>{const i=await F(e,t,n,s);return i?i/3600:r/3600}}(S||(S={}));var j=n(379),k=n.n(j),I=n(795),T=n.n(I),L=n(569),R=n.n(L),M=n(565),G=n.n(M),N=n(216),q=n.n(N),O=n(589),V=n.n(O),$=n(760),D={};D.styleTagTransform=V(),D.setAttributes=G(),D.insert=R().bind(null,"head"),D.domAPI=T(),D.insertStyleElement=q(),k()($.Z,D),$.Z&&$.Z.locals&&$.Z.locals;const W=5e3,B=18e5,Z={id:"@mahendrapaipuri/jupyter-power-usage:plugin",autoStart:!0,requires:[s.IToolbarWidgetRegistry],optional:[r.ISettingRegistry],activate:async(e,t,n)=>{console.log("@mahendrapaipuri/jupyter-power-usage extension is activated");let s=W,r="CPU Power: ",i="GPU Power: ",a=B,o="rte",c="",l="fr",u=475;if(n){const e=await n.load(Z.id);s=e.get("refreshRate").composite,s<W&&(console.log("Refresh rate is floored at 5000 ms"),s=W);const t=e.get("emissions").composite;o=t.source,c=t.emapsAccessToken,l=t.countryCode,a=t.refreshRate,u=t.factor,a<B&&(console.log("Emissions update interval is floored at 1800000 ms"),a=B);const p=e.get("cpu").composite;r=p.label;const d=e.get("gpu").composite;i=d.label}const p=new C.Model({refreshRate:a,emissionFactorSource:o,accessTokens:{emaps:c},countryCode:l,defaultEmissionFactor:u});await p.refresh();const h=new U.Model(p,{refreshRate:s});await h.refresh(),h.cpuPowerAvailable||h.gpuPowerAvailable||(console.log("Power metrics are not available..."),h.dispose(),p.dispose()),h.cpuPowerAvailable&&t.addFactory("TopBar","cpu_power",(()=>d.createPowerView(h,r))),h.gpuPowerAvailable&&t.addFactory("TopBar","gpu_power",(()=>m.createPowerView(h,i))),h.emissionsAvailable&&t.addFactory("TopBar","emissions",(()=>v.createEmissionsView(h)))}},z=Z},150:(e,t,n)=>{n.d(t,{Z:()=>o});var s=n(81),r=n.n(s),i=n(645),a=n.n(i)()(r());a.push([e.id,".jp-IndicatorContainer {\n  display: flex;\n  flex-direction: row;\n}\n\n.jp-IndicatorFiller {\n  height: 100%;\n}\n\n.jp-IndicatorText {\n  display: flex;\n  min-width: 35px;\n  flex-direction: column;\n  justify-content: center;\n  text-align: right;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.jp-IndicatorWrapper {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  width: 75px;\n}\n\n.jp-IndicatorBar {\n  height: 75%;\n  outline: 1px solid black;\n}\n\n.jp-IndicatorBar svg {\n  max-width: 100%;\n  height: 100%;\n}\n\n/* To center the subscript in the text */\nsub {\n  top: 0;\n  bottom: 0;\n  line-height: 1;\n  font-size: 0.5em;\n}\n",""]);const o=a},760:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(81),r=n.n(s),i=n(645),a=n.n(i),o=n(150),c=a()(r());c.i(o.Z),c.push([e.id,"\n",""]);const l=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",s=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),s&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),s&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,s,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(s)for(var o=0;o<this.length;o++){var c=this[o][0];null!=c&&(a[c]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);s&&a[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},81:e=>{e.exports=function(e){return e[1]}},379:e=>{var t=[];function n(e){for(var n=-1,s=0;s<t.length;s++)if(t[s].identifier===e){n=s;break}return n}function s(e,s){for(var i={},a=[],o=0;o<e.length;o++){var c=e[o],l=s.base?c[0]+s.base:c[0],u=i[l]||0,p="".concat(l," ").concat(u);i[l]=u+1;var d=n(p),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)t[d].references++,t[d].updater(h);else{var m=r(h,s);s.byIndex=o,t.splice(o,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=s(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var o=n(i[a]);t[o].references--}for(var c=s(e,r),l=0;l<i.length;l++){var u=n(i[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var s=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,r&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(s,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}}]);