"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Pcm:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PcmEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Pcm.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PCM_16: _Pcm.ValueType  # 0
    """16-bit pulse-code modulation."""

    PCM_24: _Pcm.ValueType  # 1
    """24-bit pulse-code modulation."""

    PCM_32: _Pcm.ValueType  # 2
    """32-bit pulse-code modulation."""

    PCM_S8: _Pcm.ValueType  # 3
    """Signed 8-bit pulse-code modulation."""

    PCM_U8: _Pcm.ValueType  # 4
    """Unsigned 8-bit pulse-code modulation."""

    FLOAT: _Pcm.ValueType  # 5
    """Floating-point (32-bit) pulse-code modulation."""

    DOUBLE: _Pcm.ValueType  # 6
    """Floating-point (64-bit) pulse-code modulation."""

class Pcm(_Pcm, metaclass=_PcmEnumTypeWrapper):
    """Represents a pulse-code modulation technique."""
    pass

PCM_16: Pcm.ValueType  # 0
"""16-bit pulse-code modulation."""

PCM_24: Pcm.ValueType  # 1
"""24-bit pulse-code modulation."""

PCM_32: Pcm.ValueType  # 2
"""32-bit pulse-code modulation."""

PCM_S8: Pcm.ValueType  # 3
"""Signed 8-bit pulse-code modulation."""

PCM_U8: Pcm.ValueType  # 4
"""Unsigned 8-bit pulse-code modulation."""

FLOAT: Pcm.ValueType  # 5
"""Floating-point (32-bit) pulse-code modulation."""

DOUBLE: Pcm.ValueType  # 6
"""Floating-point (64-bit) pulse-code modulation."""

global___Pcm = Pcm


class _AudioFormat:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _AudioFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AudioFormat.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    wav: _AudioFormat.ValueType  # 0
    """Waveform Audio File Format (WAV)"""

    flac: _AudioFormat.ValueType  # 1
    """Free Lossless Audio Codec (FLAC)"""

    caf: _AudioFormat.ValueType  # 2
    """Core Audio Format (CAF)"""

    mp3: _AudioFormat.ValueType  # 3
    """MPEG Audio Layer III (MP3)"""

    aac: _AudioFormat.ValueType  # 4
    """Advanced Audio Coding (AAC)"""

    ogg: _AudioFormat.ValueType  # 5
    """Ogg Vorbis (OGG)"""

    wma: _AudioFormat.ValueType  # 6
    """Windows Media Audio (WMA)"""

class AudioFormat(_AudioFormat, metaclass=_AudioFormatEnumTypeWrapper):
    """AudioFormat enum represents various audio file formats for storing digital audio data."""
    pass

wav: AudioFormat.ValueType  # 0
"""Waveform Audio File Format (WAV)"""

flac: AudioFormat.ValueType  # 1
"""Free Lossless Audio Codec (FLAC)"""

caf: AudioFormat.ValueType  # 2
"""Core Audio Format (CAF)"""

mp3: AudioFormat.ValueType  # 3
"""MPEG Audio Layer III (MP3)"""

aac: AudioFormat.ValueType  # 4
"""Advanced Audio Coding (AAC)"""

ogg: AudioFormat.ValueType  # 5
"""Ogg Vorbis (OGG)"""

wma: AudioFormat.ValueType  # 6
"""Windows Media Audio (WMA)"""

global___AudioFormat = AudioFormat


class SynthesizeRequest(google.protobuf.message.Message):
    """Represents a Synthesize Request.
    A Synthesize Request contains the information need to perform a text to speech conversion.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    text: typing.Text
    """Required. Represents the text that will be transformed to speech.

    <p> Synthesize text: </p>

    - Simple text: <pre><code>Hello, how are you?</code></pre>

    <p>Examples to modulate the voice based on SSML tags and Arpabet phonemes:</p>

    - SSML Tag Phone: <pre><code>&lt;say-as interpret-as="phone">+12354321&lt;/say-as&gt;</code></pre>

    - SSML Tag Email: <pre><code>&lt;say-as interpret-as="email">voices@ondewo.com&lt;/say-as&gt;</code></pre>

    - SSML Tag URL: <pre><code>&lt;say-as interpret-as="url">ondewo.com/en/&lt;/say-as&gt;</code></pre>

    - SSML Tag Spell: <pre><code>&lt;say-as interpret-as="spell">AP732&lt;/say-as&gt;</code></pre>

    - SSML Tag Spell With Names: <pre><code>&lt;say-as interpret-as="spell-with-names">AHO32&lt;/say-as&gt;</code></pre>

    - SSML Tag Callsigns Short: <pre><code>&lt;say-as interpret-as="callsign-short">AUA439&lt;/say-as&gt;</code></pre>

    - SSML Tag Callsigns Long: <pre><code>&lt;say-as interpret-as="callsign-long">AAL439&lt;/say-as&gt;</code></pre>

    - SSML Tag Break Tag: <pre><code>I am going to take a 2 seconds break <break time="2.0"/> done</code></pre>

    - Arpabet Phonemes: <pre><code>Hello I am {AE2 L EH0 G Z AE1 N D R AH0}</code></pre>
    """

    @property
    def config(self) -> global___RequestConfig:
        """Required. Represents the specifications needed to do the text to speech transformation."""
        pass
    def __init__(self,
        *,
        text: typing.Text = ...,
        config: typing.Optional[global___RequestConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config",b"config","text",b"text"]) -> None: ...
global___SynthesizeRequest = SynthesizeRequest

class BatchSynthesizeRequest(google.protobuf.message.Message):
    """BatchSynthesizeRequest message is used to send a batch request for synthesis."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BATCH_REQUEST_FIELD_NUMBER: builtins.int
    @property
    def batch_request(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SynthesizeRequest]:
        """Repeated field holding individual synthesis requests that make up the batch request."""
        pass
    def __init__(self,
        *,
        batch_request: typing.Optional[typing.Iterable[global___SynthesizeRequest]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_request",b"batch_request"]) -> None: ...
global___BatchSynthesizeRequest = BatchSynthesizeRequest

class BatchSynthesizeResponse(google.protobuf.message.Message):
    """BatchSynthesizeResponse message is used to store the responses for a batch synthesis request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BATCH_RESPONSE_FIELD_NUMBER: builtins.int
    @property
    def batch_response(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SynthesizeResponse]:
        """Repeated field holding individual synthesis responses that correspond to the input requests in the batch."""
        pass
    def __init__(self,
        *,
        batch_response: typing.Optional[typing.Iterable[global___SynthesizeResponse]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_response",b"batch_response"]) -> None: ...
global___BatchSynthesizeResponse = BatchSynthesizeResponse

class RequestConfig(google.protobuf.message.Message):
    """Represents a Configuration for the text to speech conversion."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    T2S_PIPELINE_ID_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_FIELD_NUMBER: builtins.int
    PCM_FIELD_NUMBER: builtins.int
    AUDIO_FORMAT_FIELD_NUMBER: builtins.int
    USE_CACHE_FIELD_NUMBER: builtins.int
    NORMALIZER_FIELD_NUMBER: builtins.int
    t2s_pipeline_id: typing.Text
    """Required. Represents the pipeline id of the model configuration that will be used."""

    length_scale: builtins.float
    """Optional. This parameter is used for time stretching which is the process of
    changing the speed or duration of an audio.
    It should be much more than 1.0. O is not a valid number for this variable.
    The default value is 1.
    """

    noise_scale: builtins.float
    """Optional. Defines the noise in the generated audio.
    It should be between 0.0 and 1.
    The default value is 0.0
    """

    sample_rate: builtins.int
    """Optional. Defines the sample rate of the generated wav file.
    The default value is 22050.
    """

    pcm: global___Pcm.ValueType
    """Optional. Defines the pulse-code modulation of the wav file.
    The default value is PCM_16.
    """

    audio_format: global___AudioFormat.ValueType
    """Optional. Defines the format of the desired audio.
    The default value is wav.
    """

    use_cache: builtins.bool
    """Optional. Define if cache should be used or not.
    The default value is False.
    """

    normalizer: typing.Text
    """Optional. Define what normalizer to synthesize the text with.
    The default value is the language of the pipeline.
    """

    def __init__(self,
        *,
        t2s_pipeline_id: typing.Text = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        sample_rate: builtins.int = ...,
        pcm: global___Pcm.ValueType = ...,
        audio_format: global___AudioFormat.ValueType = ...,
        use_cache: builtins.bool = ...,
        normalizer: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["audio_format",b"audio_format","length_scale",b"length_scale","noise_scale",b"noise_scale","normalizer",b"normalizer","oneof_AudioFormat",b"oneof_AudioFormat","oneof_Pcm",b"oneof_Pcm","oneof_length_scale",b"oneof_length_scale","oneof_noise_scale",b"oneof_noise_scale","oneof_normalizer",b"oneof_normalizer","oneof_sample_rate",b"oneof_sample_rate","oneof_use_cache",b"oneof_use_cache","pcm",b"pcm","sample_rate",b"sample_rate","use_cache",b"use_cache"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_format",b"audio_format","length_scale",b"length_scale","noise_scale",b"noise_scale","normalizer",b"normalizer","oneof_AudioFormat",b"oneof_AudioFormat","oneof_Pcm",b"oneof_Pcm","oneof_length_scale",b"oneof_length_scale","oneof_noise_scale",b"oneof_noise_scale","oneof_normalizer",b"oneof_normalizer","oneof_sample_rate",b"oneof_sample_rate","oneof_use_cache",b"oneof_use_cache","pcm",b"pcm","sample_rate",b"sample_rate","t2s_pipeline_id",b"t2s_pipeline_id","use_cache",b"use_cache"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["oneof_AudioFormat",b"oneof_AudioFormat"]) -> typing.Optional[typing_extensions.Literal["audio_format"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["oneof_Pcm",b"oneof_Pcm"]) -> typing.Optional[typing_extensions.Literal["pcm"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["oneof_length_scale",b"oneof_length_scale"]) -> typing.Optional[typing_extensions.Literal["length_scale"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["oneof_noise_scale",b"oneof_noise_scale"]) -> typing.Optional[typing_extensions.Literal["noise_scale"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["oneof_normalizer",b"oneof_normalizer"]) -> typing.Optional[typing_extensions.Literal["normalizer"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["oneof_sample_rate",b"oneof_sample_rate"]) -> typing.Optional[typing_extensions.Literal["sample_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["oneof_use_cache",b"oneof_use_cache"]) -> typing.Optional[typing_extensions.Literal["use_cache"]]: ...
global___RequestConfig = RequestConfig

class SynthesizeResponse(google.protobuf.message.Message):
    """Represents a Synthesize Response.
    A Synthesize Request contains the converted text to audio and the requested configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    AUDIO_UUID_FIELD_NUMBER: builtins.int
    AUDIO_FIELD_NUMBER: builtins.int
    GENERATION_TIME_FIELD_NUMBER: builtins.int
    AUDIO_LENGTH_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    NORMALIZED_TEXT_FIELD_NUMBER: builtins.int
    audio_uuid: typing.Text
    """Required. Represents the pipeline id of the model configuration that will be used."""

    audio: builtins.bytes
    """Required. Generated file with the parameters described in request."""

    generation_time: builtins.float
    """Required. Time to generate audio."""

    audio_length: builtins.float
    """Required. Audio length."""

    text: typing.Text
    """Required. Text from which audio was generated."""

    @property
    def config(self) -> global___RequestConfig:
        """Required. Configuration from which audio was generated."""
        pass
    normalized_text: typing.Text
    """Optional. Normalized text."""

    def __init__(self,
        *,
        audio_uuid: typing.Text = ...,
        audio: builtins.bytes = ...,
        generation_time: builtins.float = ...,
        audio_length: builtins.float = ...,
        text: typing.Text = ...,
        config: typing.Optional[global___RequestConfig] = ...,
        normalized_text: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio",b"audio","audio_length",b"audio_length","audio_uuid",b"audio_uuid","config",b"config","generation_time",b"generation_time","normalized_text",b"normalized_text","text",b"text"]) -> None: ...
global___SynthesizeResponse = SynthesizeResponse

class NormalizeTextRequest(google.protobuf.message.Message):
    """/////////////
    NORMALIZE //
    /////////////

    NormalizeTextRequest message is used to request text normalization.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    T2S_PIPELINE_ID_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    t2s_pipeline_id: typing.Text
    """The ID of the text-to-speech pipeline."""

    text: typing.Text
    """The text to be normalized."""

    def __init__(self,
        *,
        t2s_pipeline_id: typing.Text = ...,
        text: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["t2s_pipeline_id",b"t2s_pipeline_id","text",b"text"]) -> None: ...
global___NormalizeTextRequest = NormalizeTextRequest

class NormalizeTextResponse(google.protobuf.message.Message):
    """NormalizeTextResponse message is used to store the normalized text response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NORMALIZED_TEXT_FIELD_NUMBER: builtins.int
    normalized_text: typing.Text
    """The normalized text."""

    def __init__(self,
        *,
        normalized_text: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["normalized_text",b"normalized_text"]) -> None: ...
global___NormalizeTextResponse = NormalizeTextResponse

class T2SGetServiceInfoResponse(google.protobuf.message.Message):
    """////////////////////
    GET SERVICE INFO //
    ////////////////////

    Version information of the service
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VERSION_FIELD_NUMBER: builtins.int
    version: typing.Text
    """version number"""

    def __init__(self,
        *,
        version: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["version",b"version"]) -> None: ...
global___T2SGetServiceInfoResponse = T2SGetServiceInfoResponse

class ListT2sPipelinesRequest(google.protobuf.message.Message):
    """//////////////////////
    LIST T2S PIPELINES //
    //////////////////////

    Pipeline Request representation.
    The request message for ListT2sPipelines.
    Filter pipelines by attributed in request.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LANGUAGES_FIELD_NUMBER: builtins.int
    SPEAKER_SEXES_FIELD_NUMBER: builtins.int
    PIPELINE_OWNERS_FIELD_NUMBER: builtins.int
    SPEAKER_NAMES_FIELD_NUMBER: builtins.int
    DOMAINS_FIELD_NUMBER: builtins.int
    @property
    def languages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the language/ languages."""
        pass
    @property
    def speaker_sexes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the speaker sex."""
        pass
    @property
    def pipeline_owners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the pipeline owner/ owners."""
        pass
    @property
    def speaker_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the speaker name/ names."""
        pass
    @property
    def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the domain/ domains."""
        pass
    def __init__(self,
        *,
        languages: typing.Optional[typing.Iterable[typing.Text]] = ...,
        speaker_sexes: typing.Optional[typing.Iterable[typing.Text]] = ...,
        pipeline_owners: typing.Optional[typing.Iterable[typing.Text]] = ...,
        speaker_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        domains: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["domains",b"domains","languages",b"languages","pipeline_owners",b"pipeline_owners","speaker_names",b"speaker_names","speaker_sexes",b"speaker_sexes"]) -> None: ...
global___ListT2sPipelinesRequest = ListT2sPipelinesRequest

class ListT2sPipelinesResponse(google.protobuf.message.Message):
    """Pipeline Response representation.
    The response message for ListT2sPipelines.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PIPELINES_FIELD_NUMBER: builtins.int
    @property
    def pipelines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Text2SpeechConfig]:
        """Required. Representation of a list of pipelines configurations.
        Retrieved by ListT2sPipelines, containing the configurations of
        pipelines with the specifications received in the ListT2sPipelinesRequest.
        """
        pass
    def __init__(self,
        *,
        pipelines: typing.Optional[typing.Iterable[global___Text2SpeechConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pipelines",b"pipelines"]) -> None: ...
global___ListT2sPipelinesResponse = ListT2sPipelinesResponse

class ListT2sLanguagesRequest(google.protobuf.message.Message):
    """//////////////////////
    LIST T2S LANGUAGES //
    //////////////////////

    Language Request representation.
    The request message for ListT2sLanguages.
    Filter languages of pipelines by attributed in request.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SPEAKER_SEXES_FIELD_NUMBER: builtins.int
    PIPELINE_OWNERS_FIELD_NUMBER: builtins.int
    SPEAKER_NAMES_FIELD_NUMBER: builtins.int
    DOMAINS_FIELD_NUMBER: builtins.int
    @property
    def speaker_sexes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the speaker sex."""
        pass
    @property
    def pipeline_owners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the pipeline owner/ owners."""
        pass
    @property
    def speaker_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the speaker name/ names."""
        pass
    @property
    def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the domain/ domains."""
        pass
    def __init__(self,
        *,
        speaker_sexes: typing.Optional[typing.Iterable[typing.Text]] = ...,
        pipeline_owners: typing.Optional[typing.Iterable[typing.Text]] = ...,
        speaker_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        domains: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["domains",b"domains","pipeline_owners",b"pipeline_owners","speaker_names",b"speaker_names","speaker_sexes",b"speaker_sexes"]) -> None: ...
global___ListT2sLanguagesRequest = ListT2sLanguagesRequest

class ListT2sLanguagesResponse(google.protobuf.message.Message):
    """Language Response representation.
    The response message for ListT2sLanguages.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LANGUAGES_FIELD_NUMBER: builtins.int
    @property
    def languages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. Define the language/ languages that satisfy/ies
        the specifications in the ListT2sLanguagesRequest.
        """
        pass
    def __init__(self,
        *,
        languages: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["languages",b"languages"]) -> None: ...
global___ListT2sLanguagesResponse = ListT2sLanguagesResponse

class ListT2sDomainsRequest(google.protobuf.message.Message):
    """////////////////////
    LIST T2S DOMAINS //
    ////////////////////

    Domain Request representation.
    The request message for ListT2sDomains.
    Filter domains of pipelines by attributed in request.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SPEAKER_SEXES_FIELD_NUMBER: builtins.int
    PIPELINE_OWNERS_FIELD_NUMBER: builtins.int
    SPEAKER_NAMES_FIELD_NUMBER: builtins.int
    LANGUAGES_FIELD_NUMBER: builtins.int
    @property
    def speaker_sexes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the speaker sex."""
        pass
    @property
    def pipeline_owners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the pipeline owner/ owners."""
        pass
    @property
    def speaker_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the speaker name/ names."""
        pass
    @property
    def languages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Define the language/ languages."""
        pass
    def __init__(self,
        *,
        speaker_sexes: typing.Optional[typing.Iterable[typing.Text]] = ...,
        pipeline_owners: typing.Optional[typing.Iterable[typing.Text]] = ...,
        speaker_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        languages: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["languages",b"languages","pipeline_owners",b"pipeline_owners","speaker_names",b"speaker_names","speaker_sexes",b"speaker_sexes"]) -> None: ...
global___ListT2sDomainsRequest = ListT2sDomainsRequest

class ListT2sDomainsResponse(google.protobuf.message.Message):
    """Domains Response representation.
    The response message for ListT2sDomains.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DOMAINS_FIELD_NUMBER: builtins.int
    @property
    def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. Define the domain/ domains that satisfy/ies
        the specifications in the ListT2sDomainsRequest.
        """
        pass
    def __init__(self,
        *,
        domains: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["domains",b"domains"]) -> None: ...
global___ListT2sDomainsResponse = ListT2sDomainsResponse

class T2sPipelineId(google.protobuf.message.Message):
    """///////////////////////
    UPDATE T2S PIPELINE //
    ///////////////////////

    Pipeline Id representation.
    Used in the creation, deletion and getter of pipelines.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    """Required. Defines the id of the pipeline."""

    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___T2sPipelineId = T2sPipelineId

class Text2SpeechConfig(google.protobuf.message.Message):
    """/////////////////////////
    Text-to-Speech Config //
    /////////////////////////

    Configuration of text-to-speech models representation.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    INFERENCE_FIELD_NUMBER: builtins.int
    NORMALIZATION_FIELD_NUMBER: builtins.int
    POSTPROCESSING_FIELD_NUMBER: builtins.int
    id: typing.Text
    """Required. Defines the id of the pipeline."""

    @property
    def description(self) -> global___T2SDescription:
        """Required. Defines the description of the pipeline representation."""
        pass
    active: builtins.bool
    """Required. Defines if the pipeline is active or inactive."""

    @property
    def inference(self) -> global___T2SInference:
        """Required. Defines he inference of the pipeline representation."""
        pass
    @property
    def normalization(self) -> global___T2SNormalization:
        """Required. Defines the normalization process of the pipeline representation."""
        pass
    @property
    def postprocessing(self) -> global___Postprocessing:
        """Required. Defines the postprocessing process of the pipeline representation."""
        pass
    def __init__(self,
        *,
        id: typing.Text = ...,
        description: typing.Optional[global___T2SDescription] = ...,
        active: builtins.bool = ...,
        inference: typing.Optional[global___T2SInference] = ...,
        normalization: typing.Optional[global___T2SNormalization] = ...,
        postprocessing: typing.Optional[global___Postprocessing] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["description",b"description","inference",b"inference","normalization",b"normalization","postprocessing",b"postprocessing"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["active",b"active","description",b"description","id",b"id","inference",b"inference","normalization",b"normalization","postprocessing",b"postprocessing"]) -> None: ...
global___Text2SpeechConfig = Text2SpeechConfig

class T2SDescription(google.protobuf.message.Message):
    """T2SDescription message is used to describe the text-to-speech service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LANGUAGE_FIELD_NUMBER: builtins.int
    SPEAKER_SEX_FIELD_NUMBER: builtins.int
    PIPELINE_OWNER_FIELD_NUMBER: builtins.int
    COMMENTS_FIELD_NUMBER: builtins.int
    SPEAKER_NAME_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    language: typing.Text
    """The language supported by the service."""

    speaker_sex: typing.Text
    """The speaker's sex or gender.

    """

    pipeline_owner: typing.Text
    """The owner of the text-to-speech pipeline."""

    comments: typing.Text
    """Additional comments or notes."""

    speaker_name: typing.Text
    """The name of the speaker."""

    domain: typing.Text
    """The domain or context of the service."""

    def __init__(self,
        *,
        language: typing.Text = ...,
        speaker_sex: typing.Text = ...,
        pipeline_owner: typing.Text = ...,
        comments: typing.Text = ...,
        speaker_name: typing.Text = ...,
        domain: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["comments",b"comments","domain",b"domain","language",b"language","pipeline_owner",b"pipeline_owner","speaker_name",b"speaker_name","speaker_sex",b"speaker_sex"]) -> None: ...
global___T2SDescription = T2SDescription

class T2SInference(google.protobuf.message.Message):
    """T2SInference message is used to specify the text-to-speech inference settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    COMPOSITE_INFERENCE_FIELD_NUMBER: builtins.int
    SINGLE_INFERENCE_FIELD_NUMBER: builtins.int
    CACHING_FIELD_NUMBER: builtins.int
    type: typing.Text
    """The type of inference."""

    @property
    def composite_inference(self) -> global___CompositeInference:
        """Composite inference settings."""
        pass
    @property
    def single_inference(self) -> global___SingleInference:
        """Single inference settings."""
        pass
    @property
    def caching(self) -> global___Caching:
        """Caching settings."""
        pass
    def __init__(self,
        *,
        type: typing.Text = ...,
        composite_inference: typing.Optional[global___CompositeInference] = ...,
        single_inference: typing.Optional[global___SingleInference] = ...,
        caching: typing.Optional[global___Caching] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["caching",b"caching","composite_inference",b"composite_inference","single_inference",b"single_inference"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["caching",b"caching","composite_inference",b"composite_inference","single_inference",b"single_inference","type",b"type"]) -> None: ...
global___T2SInference = T2SInference

class CompositeInference(google.protobuf.message.Message):
    """CompositeInference message combines text-to-mel and mel-to-audio inference settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT2MEL_FIELD_NUMBER: builtins.int
    MEL2AUDIO_FIELD_NUMBER: builtins.int
    @property
    def text2mel(self) -> global___Text2Mel:
        """Text-to-mel inference settings."""
        pass
    @property
    def mel2audio(self) -> global___Mel2Audio:
        """Mel-to-audio inference settings."""
        pass
    def __init__(self,
        *,
        text2mel: typing.Optional[global___Text2Mel] = ...,
        mel2audio: typing.Optional[global___Mel2Audio] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["mel2audio",b"mel2audio","text2mel",b"text2mel"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["mel2audio",b"mel2audio","text2mel",b"text2mel"]) -> None: ...
global___CompositeInference = CompositeInference

class SingleInference(google.protobuf.message.Message):
    """SingleInference message inference settings of text2audio models."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT2AUDIO_FIELD_NUMBER: builtins.int
    @property
    def text2audio(self) -> global___Text2Audio:
        """Text-to-audio inference settings."""
        pass
    def __init__(self,
        *,
        text2audio: typing.Optional[global___Text2Audio] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["text2audio",b"text2audio"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["text2audio",b"text2audio"]) -> None: ...
global___SingleInference = SingleInference

class Text2Mel(google.protobuf.message.Message):
    """Text2Mel message contains settings for text-to-mel inference."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    GLOW_TTS_FIELD_NUMBER: builtins.int
    GLOW_TTS_TRITON_FIELD_NUMBER: builtins.int
    type: typing.Text
    """The type of text-to-mel inference."""

    @property
    def glow_tts(self) -> global___GlowTTS:
        """GlowTTS inference settings."""
        pass
    @property
    def glow_tts_triton(self) -> global___GlowTTSTriton:
        """GlowTTS Triton inference settings."""
        pass
    def __init__(self,
        *,
        type: typing.Text = ...,
        glow_tts: typing.Optional[global___GlowTTS] = ...,
        glow_tts_triton: typing.Optional[global___GlowTTSTriton] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["glow_tts",b"glow_tts","glow_tts_triton",b"glow_tts_triton"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["glow_tts",b"glow_tts","glow_tts_triton",b"glow_tts_triton","type",b"type"]) -> None: ...
global___Text2Mel = Text2Mel

class Text2Audio(google.protobuf.message.Message):
    """Text2Audio message contains settings for text-to-audio inference."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    VITS_FIELD_NUMBER: builtins.int
    VITS_TRITON_FIELD_NUMBER: builtins.int
    type: typing.Text
    """The type of text-to-audio inference."""

    @property
    def vits(self) -> global___Vits:
        """Vits inference settings."""
        pass
    @property
    def vits_triton(self) -> global___VitsTriton:
        """Vits Triton inference settings."""
        pass
    def __init__(self,
        *,
        type: typing.Text = ...,
        vits: typing.Optional[global___Vits] = ...,
        vits_triton: typing.Optional[global___VitsTriton] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["vits",b"vits","vits_triton",b"vits_triton"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type","vits",b"vits","vits_triton",b"vits_triton"]) -> None: ...
global___Text2Audio = Text2Audio

class GlowTTS(google.protobuf.message.Message):
    """GlowTTS message contains settings for the GlowTTS inference."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BATCH_SIZE_FIELD_NUMBER: builtins.int
    USE_GPU_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    CLEANERS_FIELD_NUMBER: builtins.int
    PARAM_CONFIG_PATH_FIELD_NUMBER: builtins.int
    batch_size: builtins.int
    """The batch size for inference."""

    use_gpu: builtins.bool
    """Flag indicating whether to use GPU for inference."""

    length_scale: builtins.float
    """The length scale for inference."""

    noise_scale: builtins.float
    """The noise scale for inference."""

    path: typing.Text
    """The path to the GlowTTS model."""

    @property
    def cleaners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Repeated field containing the cleaners for text normalization."""
        pass
    param_config_path: typing.Text
    """The path to the parameter configuration."""

    def __init__(self,
        *,
        batch_size: builtins.int = ...,
        use_gpu: builtins.bool = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        path: typing.Text = ...,
        cleaners: typing.Optional[typing.Iterable[typing.Text]] = ...,
        param_config_path: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_size",b"batch_size","cleaners",b"cleaners","length_scale",b"length_scale","noise_scale",b"noise_scale","param_config_path",b"param_config_path","path",b"path","use_gpu",b"use_gpu"]) -> None: ...
global___GlowTTS = GlowTTS

class GlowTTSTriton(google.protobuf.message.Message):
    """GlowTTSTriton message contains settings for the GlowTTS Triton inference."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BATCH_SIZE_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    CLEANERS_FIELD_NUMBER: builtins.int
    MAX_TEXT_LENGTH_FIELD_NUMBER: builtins.int
    PARAM_CONFIG_PATH_FIELD_NUMBER: builtins.int
    TRITON_MODEL_NAME_FIELD_NUMBER: builtins.int
    TRITON_SERVER_HOST_FIELD_NUMBER: builtins.int
    TRITON_SERVER_PORT_FIELD_NUMBER: builtins.int
    batch_size: builtins.int
    """The batch size for inference."""

    length_scale: builtins.float
    """The length scale for inference."""

    noise_scale: builtins.float
    """The noise scale for inference."""

    @property
    def cleaners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Repeated field containing the cleaners for text normalization."""
        pass
    max_text_length: builtins.int
    """The maximum text length allowed."""

    param_config_path: typing.Text
    """The path to the parameter configuration."""

    triton_model_name: typing.Text
    """The name of the Triton model."""

    triton_server_host: typing.Text
    """The host of the Triton inference server which servers the model."""

    triton_server_port: builtins.int
    """The port of the Triton inference server which servers the model."""

    def __init__(self,
        *,
        batch_size: builtins.int = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        cleaners: typing.Optional[typing.Iterable[typing.Text]] = ...,
        max_text_length: builtins.int = ...,
        param_config_path: typing.Text = ...,
        triton_model_name: typing.Text = ...,
        triton_server_host: typing.Text = ...,
        triton_server_port: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_size",b"batch_size","cleaners",b"cleaners","length_scale",b"length_scale","max_text_length",b"max_text_length","noise_scale",b"noise_scale","param_config_path",b"param_config_path","triton_model_name",b"triton_model_name","triton_server_host",b"triton_server_host","triton_server_port",b"triton_server_port"]) -> None: ...
global___GlowTTSTriton = GlowTTSTriton

class Vits(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BATCH_SIZE_FIELD_NUMBER: builtins.int
    USE_GPU_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    CLEANERS_FIELD_NUMBER: builtins.int
    PARAM_CONFIG_PATH_FIELD_NUMBER: builtins.int
    batch_size: builtins.int
    """The batch size for inference."""

    use_gpu: builtins.bool
    """Flag indicating whether to use GPU for inference."""

    length_scale: builtins.float
    """The length scale for inference."""

    noise_scale: builtins.float
    """The noise scale for inference."""

    path: typing.Text
    """The path to the Vits model."""

    @property
    def cleaners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Repeated field containing the cleaners for text normalization."""
        pass
    param_config_path: typing.Text
    """The path to the parameter configuration."""

    def __init__(self,
        *,
        batch_size: builtins.int = ...,
        use_gpu: builtins.bool = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        path: typing.Text = ...,
        cleaners: typing.Optional[typing.Iterable[typing.Text]] = ...,
        param_config_path: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_size",b"batch_size","cleaners",b"cleaners","length_scale",b"length_scale","noise_scale",b"noise_scale","param_config_path",b"param_config_path","path",b"path","use_gpu",b"use_gpu"]) -> None: ...
global___Vits = Vits

class VitsTriton(google.protobuf.message.Message):
    """VitsTriton message contains settings for the Vits Triton inference."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BATCH_SIZE_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    CLEANERS_FIELD_NUMBER: builtins.int
    MAX_TEXT_LENGTH_FIELD_NUMBER: builtins.int
    PARAM_CONFIG_PATH_FIELD_NUMBER: builtins.int
    TRITON_MODEL_NAME_FIELD_NUMBER: builtins.int
    TRITON_SERVER_HOST_FIELD_NUMBER: builtins.int
    TRITON_SERVER_PORT_FIELD_NUMBER: builtins.int
    batch_size: builtins.int
    """The batch size for inference."""

    length_scale: builtins.float
    """The length scale for inference."""

    noise_scale: builtins.float
    """The noise scale for inference."""

    @property
    def cleaners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Repeated field containing the cleaners for text normalization."""
        pass
    max_text_length: builtins.int
    """The maximum text length allowed."""

    param_config_path: typing.Text
    """The path to the parameter configuration."""

    triton_model_name: typing.Text
    """The name of the Triton model."""

    triton_server_host: typing.Text
    """The host of the Triton inference server which servers the model."""

    triton_server_port: builtins.int
    """The port of the Triton inference server which servers the model."""

    def __init__(self,
        *,
        batch_size: builtins.int = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        cleaners: typing.Optional[typing.Iterable[typing.Text]] = ...,
        max_text_length: builtins.int = ...,
        param_config_path: typing.Text = ...,
        triton_model_name: typing.Text = ...,
        triton_server_host: typing.Text = ...,
        triton_server_port: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_size",b"batch_size","cleaners",b"cleaners","length_scale",b"length_scale","max_text_length",b"max_text_length","noise_scale",b"noise_scale","param_config_path",b"param_config_path","triton_model_name",b"triton_model_name","triton_server_host",b"triton_server_host","triton_server_port",b"triton_server_port"]) -> None: ...
global___VitsTriton = VitsTriton

class Mel2Audio(google.protobuf.message.Message):
    """Mel2Audio message contains settings for mel-to-audio inference."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    MB_MELGAN_TRITON_FIELD_NUMBER: builtins.int
    HIFI_GAN_FIELD_NUMBER: builtins.int
    HIFI_GAN_TRITON_FIELD_NUMBER: builtins.int
    type: typing.Text
    """The type of mel-to-audio inference."""

    @property
    def mb_melgan_triton(self) -> global___MbMelganTriton:
        """MbMelgan Triton inference settings."""
        pass
    @property
    def hifi_gan(self) -> global___HiFiGan:
        """HiFiGan inference settings."""
        pass
    @property
    def hifi_gan_triton(self) -> global___HiFiGanTriton:
        """HiFiGan Triton inference settings."""
        pass
    def __init__(self,
        *,
        type: typing.Text = ...,
        mb_melgan_triton: typing.Optional[global___MbMelganTriton] = ...,
        hifi_gan: typing.Optional[global___HiFiGan] = ...,
        hifi_gan_triton: typing.Optional[global___HiFiGanTriton] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hifi_gan",b"hifi_gan","hifi_gan_triton",b"hifi_gan_triton","mb_melgan_triton",b"mb_melgan_triton"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hifi_gan",b"hifi_gan","hifi_gan_triton",b"hifi_gan_triton","mb_melgan_triton",b"mb_melgan_triton","type",b"type"]) -> None: ...
global___Mel2Audio = Mel2Audio

class HiFiGan(google.protobuf.message.Message):
    """HiFiGan message contains settings for the HiFiGan inference."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    USE_GPU_FIELD_NUMBER: builtins.int
    BATCH_SIZE_FIELD_NUMBER: builtins.int
    CONFIG_PATH_FIELD_NUMBER: builtins.int
    MODEL_PATH_FIELD_NUMBER: builtins.int
    use_gpu: builtins.bool
    """Flag indicating whether to use GPU for inference."""

    batch_size: builtins.int
    """The batch size for inference."""

    config_path: typing.Text
    """The path to the HiFiGan configuration."""

    model_path: typing.Text
    """The path to the HiFiGan model."""

    def __init__(self,
        *,
        use_gpu: builtins.bool = ...,
        batch_size: builtins.int = ...,
        config_path: typing.Text = ...,
        model_path: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_size",b"batch_size","config_path",b"config_path","model_path",b"model_path","use_gpu",b"use_gpu"]) -> None: ...
global___HiFiGan = HiFiGan

class HiFiGanTriton(google.protobuf.message.Message):
    """HiFiGanTriton message contains settings for the HiFiGan Triton inference."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONFIG_PATH_FIELD_NUMBER: builtins.int
    TRITON_MODEL_NAME_FIELD_NUMBER: builtins.int
    TRITON_SERVER_HOST_FIELD_NUMBER: builtins.int
    TRITON_SERVER_PORT_FIELD_NUMBER: builtins.int
    config_path: typing.Text
    """The path to the HiFiGan Triton configuration."""

    triton_model_name: typing.Text
    """The name of the Triton model."""

    triton_server_host: typing.Text
    """The host of the Triton inference server which servers the model."""

    triton_server_port: builtins.int
    """The port of the Triton inference server which servers the model."""

    def __init__(self,
        *,
        config_path: typing.Text = ...,
        triton_model_name: typing.Text = ...,
        triton_server_host: typing.Text = ...,
        triton_server_port: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_path",b"config_path","triton_model_name",b"triton_model_name","triton_server_host",b"triton_server_host","triton_server_port",b"triton_server_port"]) -> None: ...
global___HiFiGanTriton = HiFiGanTriton

class MbMelganTriton(google.protobuf.message.Message):
    """MbMelganTriton message contains settings for the MbMelgan Triton inference."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONFIG_PATH_FIELD_NUMBER: builtins.int
    STATS_PATH_FIELD_NUMBER: builtins.int
    TRITON_MODEL_NAME_FIELD_NUMBER: builtins.int
    TRITON_SERVER_HOST_FIELD_NUMBER: builtins.int
    TRITON_SERVER_PORT_FIELD_NUMBER: builtins.int
    config_path: typing.Text
    """The path to the MbMelgan Triton configuration."""

    stats_path: typing.Text
    """The path to the MbMelgan statistics."""

    triton_model_name: typing.Text
    """The name of the Triton model."""

    triton_server_host: typing.Text
    """The host of the Triton inference server which servers the model."""

    triton_server_port: builtins.int
    """The port of the Triton inference server which servers the model."""

    def __init__(self,
        *,
        config_path: typing.Text = ...,
        stats_path: typing.Text = ...,
        triton_model_name: typing.Text = ...,
        triton_server_host: typing.Text = ...,
        triton_server_port: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_path",b"config_path","stats_path",b"stats_path","triton_model_name",b"triton_model_name","triton_server_host",b"triton_server_host","triton_server_port",b"triton_server_port"]) -> None: ...
global___MbMelganTriton = MbMelganTriton

class Caching(google.protobuf.message.Message):
    """Caching message contains settings for caching."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACTIVE_FIELD_NUMBER: builtins.int
    MEMORY_CACHE_MAX_SIZE_FIELD_NUMBER: builtins.int
    SAMPLING_RATE_FIELD_NUMBER: builtins.int
    LOAD_CACHE_FIELD_NUMBER: builtins.int
    SAVE_CACHE_FIELD_NUMBER: builtins.int
    CACHE_SAVE_DIR_FIELD_NUMBER: builtins.int
    active: builtins.bool
    """Flag indicating whether caching is active."""

    memory_cache_max_size: builtins.int
    """The maximum size of the memory cache."""

    sampling_rate: builtins.int
    """The sampling rate for caching."""

    load_cache: builtins.bool
    """Flag indicating whether to load cache."""

    save_cache: builtins.bool
    """Flag indicating whether to save cache."""

    cache_save_dir: typing.Text
    """The directory path to save the cache."""

    def __init__(self,
        *,
        active: builtins.bool = ...,
        memory_cache_max_size: builtins.int = ...,
        sampling_rate: builtins.int = ...,
        load_cache: builtins.bool = ...,
        save_cache: builtins.bool = ...,
        cache_save_dir: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["active",b"active","cache_save_dir",b"cache_save_dir","load_cache",b"load_cache","memory_cache_max_size",b"memory_cache_max_size","sampling_rate",b"sampling_rate","save_cache",b"save_cache"]) -> None: ...
global___Caching = Caching

class T2SNormalization(google.protobuf.message.Message):
    """Represents the configuration for text-to-speech normalization."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LANGUAGE_FIELD_NUMBER: builtins.int
    PIPELINE_FIELD_NUMBER: builtins.int
    CUSTOM_PHONEMIZER_ID_FIELD_NUMBER: builtins.int
    CUSTOM_LENGTH_SCALES_FIELD_NUMBER: builtins.int
    ARPABET_MAPPING_FIELD_NUMBER: builtins.int
    NUMERIC_MAPPING_FIELD_NUMBER: builtins.int
    CALLSIGNS_MAPPING_FIELD_NUMBER: builtins.int
    language: typing.Text
    """The language for which the normalization is applied."""

    @property
    def pipeline(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The pipeline(s) used for normalization."""
        pass
    custom_phonemizer_id: typing.Text
    """The ID of the custom phonemizer, if used."""

    @property
    def custom_length_scales(self) -> global___T2SCustomLengthScales:
        """Custom length scales for different text types."""
        pass
    arpabet_mapping: typing.Text
    """The mapping for Arpabet phonemes."""

    numeric_mapping: typing.Text
    """The mapping for numeric expressions."""

    callsigns_mapping: typing.Text
    """The mapping for callsigns."""

    def __init__(self,
        *,
        language: typing.Text = ...,
        pipeline: typing.Optional[typing.Iterable[typing.Text]] = ...,
        custom_phonemizer_id: typing.Text = ...,
        custom_length_scales: typing.Optional[global___T2SCustomLengthScales] = ...,
        arpabet_mapping: typing.Text = ...,
        numeric_mapping: typing.Text = ...,
        callsigns_mapping: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["custom_length_scales",b"custom_length_scales"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arpabet_mapping",b"arpabet_mapping","callsigns_mapping",b"callsigns_mapping","custom_length_scales",b"custom_length_scales","custom_phonemizer_id",b"custom_phonemizer_id","language",b"language","numeric_mapping",b"numeric_mapping","pipeline",b"pipeline"]) -> None: ...
global___T2SNormalization = T2SNormalization

class Postprocessing(google.protobuf.message.Message):
    """Postprocessing message contains settings for postprocessing."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SILENCE_SECS_FIELD_NUMBER: builtins.int
    PIPELINE_FIELD_NUMBER: builtins.int
    LOGMMSE_FIELD_NUMBER: builtins.int
    WIENER_FIELD_NUMBER: builtins.int
    APODIZATION_FIELD_NUMBER: builtins.int
    silence_secs: builtins.float
    """The duration of silence in seconds."""

    @property
    def pipeline(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Repeated field containing pipeline names."""
        pass
    @property
    def logmmse(self) -> global___Logmnse:
        """Logmnse postprocessing settings."""
        pass
    @property
    def wiener(self) -> global___Wiener:
        """Wiener postprocessing settings."""
        pass
    @property
    def apodization(self) -> global___Apodization:
        """Apodization postprocessing settings."""
        pass
    def __init__(self,
        *,
        silence_secs: builtins.float = ...,
        pipeline: typing.Optional[typing.Iterable[typing.Text]] = ...,
        logmmse: typing.Optional[global___Logmnse] = ...,
        wiener: typing.Optional[global___Wiener] = ...,
        apodization: typing.Optional[global___Apodization] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["apodization",b"apodization","logmmse",b"logmmse","wiener",b"wiener"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["apodization",b"apodization","logmmse",b"logmmse","pipeline",b"pipeline","silence_secs",b"silence_secs","wiener",b"wiener"]) -> None: ...
global___Postprocessing = Postprocessing

class Logmnse(google.protobuf.message.Message):
    """Logmnse message contains settings for Logmnse postprocessing."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INITIAL_NOISE_FIELD_NUMBER: builtins.int
    WINDOW_SIZE_FIELD_NUMBER: builtins.int
    NOISE_THRESHOLD_FIELD_NUMBER: builtins.int
    initial_noise: builtins.int
    """The initial noise value."""

    window_size: builtins.int
    """The window size."""

    noise_threshold: builtins.float
    """The noise threshold."""

    def __init__(self,
        *,
        initial_noise: builtins.int = ...,
        window_size: builtins.int = ...,
        noise_threshold: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["initial_noise",b"initial_noise","noise_threshold",b"noise_threshold","window_size",b"window_size"]) -> None: ...
global___Logmnse = Logmnse

class Wiener(google.protobuf.message.Message):
    """Wiener message contains settings for Wiener postprocessing."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FRAME_LEN_FIELD_NUMBER: builtins.int
    LPC_ORDER_FIELD_NUMBER: builtins.int
    ITERATIONS_FIELD_NUMBER: builtins.int
    ALPHA_FIELD_NUMBER: builtins.int
    THRESH_FIELD_NUMBER: builtins.int
    frame_len: builtins.int
    """The frame length."""

    lpc_order: builtins.int
    """The LPC order."""

    iterations: builtins.int
    """The number of iterations."""

    alpha: builtins.float
    """The alpha value."""

    thresh: builtins.float
    """The threshold value."""

    def __init__(self,
        *,
        frame_len: builtins.int = ...,
        lpc_order: builtins.int = ...,
        iterations: builtins.int = ...,
        alpha: builtins.float = ...,
        thresh: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alpha",b"alpha","frame_len",b"frame_len","iterations",b"iterations","lpc_order",b"lpc_order","thresh",b"thresh"]) -> None: ...
global___Wiener = Wiener

class Apodization(google.protobuf.message.Message):
    """Apodization message contains settings for apodization postprocessing."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    APODIZATION_SECS_FIELD_NUMBER: builtins.int
    apodization_secs: builtins.float
    """The duration of apodization in seconds."""

    def __init__(self,
        *,
        apodization_secs: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["apodization_secs",b"apodization_secs"]) -> None: ...
global___Apodization = Apodization

class T2SCustomLengthScales(google.protobuf.message.Message):
    """T2SCustomLengthScales message contains custom length scales for text types."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    PHONE_FIELD_NUMBER: builtins.int
    SPELL_FIELD_NUMBER: builtins.int
    SPELL_WITH_NAMES_FIELD_NUMBER: builtins.int
    CALLSIGN_LONG_FIELD_NUMBER: builtins.int
    CALLSIGN_SHORT_FIELD_NUMBER: builtins.int
    text: builtins.float
    """The custom length scale for general text."""

    email: builtins.float
    """The custom length scale for email text."""

    url: builtins.float
    """The custom length scale for URL text."""

    phone: builtins.float
    """The custom length scale for phone number text."""

    spell: builtins.float
    """The custom length scale for spelled-out text."""

    spell_with_names: builtins.float
    """The custom length scale for spelled-out text with names."""

    callsign_long: builtins.float
    """The custom length scale for long callsigns."""

    callsign_short: builtins.float
    """The custom length scale for short callsigns."""

    def __init__(self,
        *,
        text: builtins.float = ...,
        email: builtins.float = ...,
        url: builtins.float = ...,
        phone: builtins.float = ...,
        spell: builtins.float = ...,
        spell_with_names: builtins.float = ...,
        callsign_long: builtins.float = ...,
        callsign_short: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["callsign_long",b"callsign_long","callsign_short",b"callsign_short","email",b"email","phone",b"phone","spell",b"spell","spell_with_names",b"spell_with_names","text",b"text","url",b"url"]) -> None: ...
global___T2SCustomLengthScales = T2SCustomLengthScales

class PhonemizerId(google.protobuf.message.Message):
    """PhonemizerId message represents the ID of a phonemizer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    """The ID of the phonemizer."""

    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___PhonemizerId = PhonemizerId

class CustomPhonemizerProto(google.protobuf.message.Message):
    """CustomPhonemizerProto message represents a custom phonemizer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    MAPS_FIELD_NUMBER: builtins.int
    id: typing.Text
    """The ID of the custom phonemizer."""

    @property
    def maps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Map]:
        """Repeated field of Map messages representing word-to-phoneme mappings."""
        pass
    def __init__(self,
        *,
        id: typing.Text = ...,
        maps: typing.Optional[typing.Iterable[global___Map]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","maps",b"maps"]) -> None: ...
global___CustomPhonemizerProto = CustomPhonemizerProto

class Map(google.protobuf.message.Message):
    """Map message represents a word-to-phoneme mapping in a custom phonemizer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WORD_FIELD_NUMBER: builtins.int
    PHONEME_GROUPS_FIELD_NUMBER: builtins.int
    word: typing.Text
    """The word to be mapped."""

    phoneme_groups: typing.Text
    """The phoneme groups associated with the word."""

    def __init__(self,
        *,
        word: typing.Text = ...,
        phoneme_groups: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["phoneme_groups",b"phoneme_groups","word",b"word"]) -> None: ...
global___Map = Map

class ListCustomPhonemizerResponse(google.protobuf.message.Message):
    """ListCustomPhonemizerResponse message represents the response for listing custom phonemizers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PHONEMIZERS_FIELD_NUMBER: builtins.int
    @property
    def phonemizers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CustomPhonemizerProto]:
        """Repeated field of CustomPhonemizerProto messages representing the custom phonemizers."""
        pass
    def __init__(self,
        *,
        phonemizers: typing.Optional[typing.Iterable[global___CustomPhonemizerProto]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["phonemizers",b"phonemizers"]) -> None: ...
global___ListCustomPhonemizerResponse = ListCustomPhonemizerResponse

class ListCustomPhonemizerRequest(google.protobuf.message.Message):
    """ListCustomPhonemizerRequest message represents the request for listing custom phonemizers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PIPELINE_IDS_FIELD_NUMBER: builtins.int
    @property
    def pipeline_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Repeated field of pipeline IDs to filter the list of custom phonemizers."""
        pass
    def __init__(self,
        *,
        pipeline_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pipeline_ids",b"pipeline_ids"]) -> None: ...
global___ListCustomPhonemizerRequest = ListCustomPhonemizerRequest

class UpdateCustomPhonemizerRequest(google.protobuf.message.Message):
    """UpdateCustomPhonemizerRequest message represents the request for updating a custom phonemizer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _UpdateMethod:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UpdateMethodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[UpdateCustomPhonemizerRequest._UpdateMethod.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        extend_hard: UpdateCustomPhonemizerRequest._UpdateMethod.ValueType  # 0
        """Add new words, replacing existing ones."""

        extend_soft: UpdateCustomPhonemizerRequest._UpdateMethod.ValueType  # 1
        """Add new words if they are not already present."""

        replace: UpdateCustomPhonemizerRequest._UpdateMethod.ValueType  # 2
        """Replace all words in the phonemizer with new ones."""

    class UpdateMethod(_UpdateMethod, metaclass=_UpdateMethodEnumTypeWrapper):
        """The update method to be used."""
        pass

    extend_hard: UpdateCustomPhonemizerRequest.UpdateMethod.ValueType  # 0
    """Add new words, replacing existing ones."""

    extend_soft: UpdateCustomPhonemizerRequest.UpdateMethod.ValueType  # 1
    """Add new words if they are not already present."""

    replace: UpdateCustomPhonemizerRequest.UpdateMethod.ValueType  # 2
    """Replace all words in the phonemizer with new ones."""


    ID_FIELD_NUMBER: builtins.int
    UPDATE_METHOD_FIELD_NUMBER: builtins.int
    MAPS_FIELD_NUMBER: builtins.int
    id: typing.Text
    """The ID of the custom phonemizer to be updated."""

    update_method: global___UpdateCustomPhonemizerRequest.UpdateMethod.ValueType
    """The update method."""

    @property
    def maps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Map]:
        """Repeated field of Map messages representing word-to-phoneme mappings."""
        pass
    def __init__(self,
        *,
        id: typing.Text = ...,
        update_method: global___UpdateCustomPhonemizerRequest.UpdateMethod.ValueType = ...,
        maps: typing.Optional[typing.Iterable[global___Map]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","maps",b"maps","update_method",b"update_method"]) -> None: ...
global___UpdateCustomPhonemizerRequest = UpdateCustomPhonemizerRequest

class CreateCustomPhonemizerRequest(google.protobuf.message.Message):
    """CreateCustomPhonemizerRequest message represents the request for creating a custom phonemizer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PREFIX_FIELD_NUMBER: builtins.int
    MAPS_FIELD_NUMBER: builtins.int
    prefix: typing.Text
    """The prefix for the custom phonemizer ID."""

    @property
    def maps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Map]:
        """Repeated field of Map messages representing word-to-phoneme mappings."""
        pass
    def __init__(self,
        *,
        prefix: typing.Text = ...,
        maps: typing.Optional[typing.Iterable[global___Map]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["maps",b"maps","prefix",b"prefix"]) -> None: ...
global___CreateCustomPhonemizerRequest = CreateCustomPhonemizerRequest
